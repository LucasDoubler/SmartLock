<?xml version="1.0" encoding="UTF-8"?>

<package schemaVersion="1.4" xmlns:xs="http://www.w3.org/2001/XMLSchema-instance" xs:noNamespaceSchemaLocation="PACK.xsd">
  <vendor>Keil</vendor>
  <name>STM32H7xx_DFP</name>
  <description>STMicroelectronics STM32H7 Series Device Support and Examples</description>
  <url>https://www.keil.com/pack/</url>

  <releases>
    <release version="2.3.1" date="2019-09-16">
      Updated GPDSC freemarker template:
      - Added support for IWDG, WWDG peripherals.
      - Added support for Timebase Source set to TIMx.
      CMSIS-Driver:
      - ETH: Corrected GetRxFrameSize and ReadFrame functions to fix long latencies.
      Updated board examples:
      - Terminating app_main thread with osThreadExit() to avoid endless loop.
      - Updated graphics examples for use with Segger emWin version 5.50.
    </release>
    <release version="2.3.0" date="2019-06-14">
      Updated Pack to STM32Cube_FW_H7 Firmware Package version V1.4.0.
      Requires STM32CubeMX version 5.2.1.
      STM32CubeMX Integration:
      - Only supported for single core devices.
      - Updated MX_Device_h.ftl:
         -- Added parsing of USART virtual mode.
         -- Added handling for bracket symbols '(' and ')' in macro generation.
      Updated Board Examples for STM32H743I_EVAL:
      - Updated to MDK-Middleware V7.8.0.
      - Updated to using CMSIS-RTOS2 RTX(Debug/Release).
      - Updated to enabling the Event Recorder in debug targets.
      CMSIS-Driver:
      - CAN: Corrected CAN SRAM read/write to 4 byte accesses.
      - ETH: Updated __MEMORY_AT macro supporting AC6.
      - FDCAN: Updated __MEMORY_AT macro  supporting AC6.
      - MCI: Updated to HAL drivers version 1.5.0.
      - USART: Updated Get Count functionality.
      - USB Host: Enable VDD33USB voltage level detector if internal FS transceiver is used.
      - USB Device
      -- Updated to HAL drivers version 1.5.0.
      -- Updated USBD_EndpointConfigure function to check that maximum packet size requested fits into configured FIFO (compile time configured).
      - SPI
      -- Corrected DCache Handling
      -- Removed __HAL_SPI_ENABLE from SPI_Control function
    </release>
    <release version="2.2.0" date="2018-09-04">
      Updated Pack to STM32Cube_FW_H7 Firmware Package version V1.3.0.
      - Updated HAL to version V1.3.0.
      Added device support for subfamily STM32H750.
      CMSIS Driver:
      - USB Device: Corrected transmitted count for non-control IN endpoints
    </release>
    <release version="2.1.0" date="2018-05-09">
      Updated Pack to STM32Cube_FW_H7 Firmware Package version V1.21.0.
      Reworked debug description and debug config files.
      Updated device documentation.
      CMSIS-Driver:
      - CAN:
      -- Changed FDCAN_ECR_TREC_.. to FDCAN_ECR_REC_.. to align with updated device header.
      -- Corrected SetBitrate function.
      - SPI: Corrected Slave select handling.
      - USART: Corrected UARTx/USARTx related typing mistakes.
      - I2C: master clock frequency generation corrected.
      Board Support:
      - STM32H743I_EVAL:
      -- Updated LCDConf.c for STM32H743I_EVAL.
      Board Examples:
      - Validated using STM32CubeMX version 4.25.0 and STM32Cube_FW_H7 version 1.2.0.
      - Updated Abstract.txt in examples reflecting Debug/Release targets.
      - Changed Compiler optimization level to "level 1" for Debug target in all examples.
      - Updated emWin examples to emWin V5.46e.
      - Added Event Recorder to the USB Device and Host examples.
      - Added SNMP_Agent Example.
      - Updated SMTP_Client example.
    </release>

    <release version="2.0.0" date="2017-10-02">
      This DFP requires STM32CubeMX V4.22.1 and STM32Cube_FW_H7 V1.1.0 or higher to be installed.
      New projects require the component 'Device:STM32Cube Framework:STM32CubeMX' for configuration of pins and clocks.
      Updated documentation for STM32Cube Framework usage.
      Added CMSIS-Driver:
      - CAN
      - ETH
      - I2C
      - MCI
      - SPI
      - UART/USART
      - USB Host / Device (no RTOS dependency)
      Added example projects for STM32H743I EVAL Board:
      - all projects have two targets 'debug' and 'release' and require CMSIS-RTOS2
      - Blinky
      - CAN
      - emWin
      - FileSystem
      - Network
      - USB
    </release>

    <release version="1.0.1" date="2017-08-03">
      fixed location specified in debugvars configfile attribute
    </release>

    <release version="1.0.0" date="2017-06-01">
      Initial release of STM32H7 Device Family Pack.
      Based on STM32Cube_FW_H7 Firmware Package version V1.0.0 (2017-04-30)
      Board Support for STM32H743I-EVAL Board:
      - CMSIS-RTOS2 Blinky
      - Fractal Demo
    </release>
  </releases>

  <keywords>                                                                  <!-- keywords for indexing -->
    <keyword>ST</keyword>
    <keyword>Device Support</keyword>
    <keyword>Device Family Package STMicroelectronics</keyword>
    <keyword>STM32H7</keyword>
    <keyword>STM32H7xx</keyword>
  </keywords>

  <devices>
    <family Dfamily="STM32H7 Series" Dvendor="STMicroelectronics:13">
      <!--book name="Documentation/?.pdf" title="STM32H7xx HAL Drivers"/-->

      <algorithm name="CMSIS/Flash/STM32H7xx_MT25TL01G.FLM"        start="0x90000000" size="0x04000000" RAMstart="0x20000000" RAMsize="0xFFF4" default="0" />
      <algorithm name="CMSIS/Flash/STM32H7xx_MT25TL01G_DUAL.FLM"   start="0x90000000" size="0x08000000" RAMstart="0x20000000" RAMsize="0xFFF4" default="0" />
      <algorithm name="CMSIS/Flash/MT25TL01G_STM32H750B-DISCO.FLM" start="0x90000000" size="0x08000000" RAMstart="0x20000000" RAMsize="0xFFF4" default="0" />	  
      <algorithm name="CMSIS/Flash/MT25TL01G_STM32H745I-DISCO.FLM" start="0x90000000" size="0x08000000" RAMstart="0x20000000" RAMsize="0xFFF4" default="0" />
      <algorithm name="CMSIS/Flash/STM32H743I-eval_FMC.FLM"        start="0x60000000" size="0x01000000" RAMstart="0x20000000" RAMsize="0xFFF4" default="0" />

      <description>
The STM32H7 series now includes dual-core microcontrollers with Arm Cortex-M7 and Cortex-M4 cores able to run up to 480 MHz and 240 MHz respectively.
Our single-core Cortex®-M7 STM32H7 series also benefits from this frequency increase and can now run up to 480 MHz as well.
Dual-core STM32H7 microcontrollers are available with an embedded SMPS for improved dynamic power efficiency.

Extended temperature range support up to 125 °C (*) (ambient) will be available for certain devices for use in harsh environments including industrial applications.

STM32H7 devices embedding a crypto/hash processor support security services such as Secure Firmware Install and Secure Boot – Secure Firmware Upgrade allowing the installation of new application code in a secured manner.

All the other features that have made single-core STM32H7 MCUs a success are still available in the dual-core versions.
The STM32H7 series remains more than ever the microcontroller with an embedded Flash memory offering the highest performance on the market.
      </description>

      <sequences>
        <!-- Override for Pre-Defined Sequences -->
        <sequence name="TraceStart">
          <block>
            __var traceSWO    = (__traceout &amp; 0x1) != 0;                               // SWO (asynchronous) Trace Selected?
            __var traceTPIU   = (__traceout &amp; 0x2) != 0;                               // TPIU (synchronous) Trace Selected?
          </block>

          <control if="traceSWO">
            <block>
              Sequence("EnableTraceSWO");                                                  // Call SWO Trace Setup
            </block>
          </control>

          <control if="traceTPIU">
            <block>
              Sequence("EnableTraceTPIU");                                                 // Call TPIU Trace Setup
            </block>
          </control>
        </sequence>

        <sequence name="TraceStop">
          <block>
            // Nothing required for SWO Trace
            __var traceSWO    = (__traceout &amp; 0x1) != 0;                               // SWO enabled?
            __var traceTPIU   = (__traceout &amp; 0x2) != 0;                               // Synchronous trace port enabled?
          </block>

          <control if="traceSWO">
            <block>
              Sequence("DisableTraceSWO");
            </block>
          </control>

          <control if="traceTPIU">
            <block>
              Sequence("DisableTraceTPIU");
            </block>
          </control>
        </sequence>

        <!-- User-Defined Sequences -->
        <sequence name="CheckID">
          <block>
            __var pidr1 = 0;
            __var pidr2 = 0;
            __var jep106id = 0;
            __var ROMTableBase = 0;

            __ap = 0;      // AHB-AP

            ROMTableBase = ReadAP(0xF8) &amp; ~0x3;

            pidr1 = Read32(ROMTableBase + 0x0FE4);
            pidr2 = Read32(ROMTableBase + 0x0FE8);
            jep106id = ((pidr2 &amp; 0x7) &lt;&lt; 4 ) | ((pidr1 &gt;&gt; 4) &amp; 0xF);
          </block>

          <control if="jep106id != 0x20">
            <block>
              Query(0, "Not a genuine ST Device! Abort connection", 1);
              Message(2, "Not a genuine ST Device! Abort connection.");
            </block>
          </control>
        </sequence>

        <sequence name="EnableTraceSWO">
          <block>
            __var value = 0;

            Sequence("ConfigureTraceSWOPin");

            __ap   = 2;                                                                    // Switch to System Debug Access Port

            // Enable Trace Clock
            // not necessary because already done in "DebugDeviceUnlock".

            // Configure SWO Funnel (SWTF) at 0xE00E4000
            value      =  Read32(0xE00E4000);                                              // Read Trace Funnel CONTROL Register
            value &amp;=  0x00000F00;                                                      // Preserve Hold Time Settings,
            value     |=  0x00000001;                                                      // Enable ITM slave ports
            Write32(0xE00E4000, value);                                                    // Update Trace Funnel CONTROL Register
          </block>
        </sequence>

        <sequence name="DisableTraceSWO">
          <block>
            __var value = 0;

            __ap   = 2;                                                                    // Switch to System Debug Access Port

            // Disable Trace Clock
            value      =  Read32(0xE00E1004);                                              // Read DBGMCU_CR
            value &amp;= ~0x00100000;                                                      // DBGMCU_CR[20] : set TraceClkEn
            Write32(0xE00E1004, value);                                                    // Update DBGMCU_CR

            // Configure SWO Funnel (SWTF) at 0xE00E4000
            value      =  Read32(0xE00E4000);                                              // Read Trace Funnel CONTROL Register
            value &amp;=  0x00000F00;                                                      // Preserve Hold Time Settings, disable active slave ports
            Write32(0xE00E4000, value);                                                    // Update Trace Funnel CONTROL Register
          </block>
        </sequence>

        <sequence name="EnableTraceTPIU">
          <block>
            __var value = 0;

            Sequence("ConfigureTraceTPIUPins");

            __ap   = 2;                                                                    // Switch to System Debug Access Port

            // Enable Trace Clock
            // not necessary because already done in "DebugDeviceUnlock".

            // Configure CoreSight Trace Funnel (CSTF) at 0xE00F3000
            value      =  Read32(0xE00F3000);                                              // Read Trace Funnel CONTROL Register
            value &amp;=  0x00000F00;                                                      // Preserve Hold Time Settings
            value     |=  0x00000003;                                                      // Enable ITM and ETM slave ports
            Write32(0xE00F3000, value);                                                    // Update Trace Funnel CONTROL Register
          </block>
        </sequence>

        <sequence name="DisableTraceTPIU">
          <block>
            __var value = 0;

            __ap   = 2;                                                                    // Switch to System Debug Access Port

            // Disable Trace Clock
            value      =  Read32(0xE00E1004);                                              // Read DBGMCU_CR
            value &amp;= ~0x00100000;                                                      // DBGMCU_CR[20] : set TraceClkEn
            Write32(0xE00E1004, value);                                                    // Update DBGMCU_CR

            // Configure CoreSight Trace Funnel (CSTF) at 0xE00F3000
            value      =  Read32(0xE00F3000);                                              // Read Trace Funnel CONTROL Register
            value &amp;=  0x00000FFC;                                                      // Preserve Hold Time Settings and other possibly set slave ports
            Write32(0xE00F3000, value);                                                    // Update Trace Funnel CONTROL Register
          </block>
        </sequence>

        <sequence name="ConfigureTraceSWOPin">
          <block>
            __var pin     = 0;
            __var port    = 0;
            __var portAdr = 0;
            __var pos     = 0;

            __var SWO_Pin = 0x00010003;          // PB3
          </block>

            <!-- configure SWO -->
            <block info="configure SWO">
              pin     =               ((SWO_Pin            ) &amp; 0x0000FFFF);
              port    =               ((SWO_Pin &gt;&gt; 16) &amp; 0x0000FFFF);
              portAdr = 0x58020000 + (((SWO_Pin &gt;&gt; 16) &amp; 0x0000FFFF) * 0x400);

              pos = pin * 2;
              Write32(0x58024540,     ((Read32(0x58024540    )                         ) | (1 &lt;&lt; port)) );  // RCC_C1_AHB4ENR:IO port clock enable
              Write32(portAdr + 0x00, ((Read32(portAdr + 0x00) &amp; ~( 3 &lt;&lt; pos)) | (2 &lt;&lt; pos )) );  // GPIOx_MODER:   Set Mode (Alternate Function)
              Write32(portAdr + 0x08, ((Read32(portAdr + 0x08)                         ) | (3 &lt;&lt; pos )) );  // GPIOx_OSPEEDR: Set Speed (Very High Speed)
              Write32(portAdr + 0x0C, ((Read32(portAdr + 0x0C) &amp; ~( 3 &lt;&lt; pos))                    ) );  // GPIOx_PUPDR:   Set I/O to no pull-up/pull-down
            </block>
            <control if="pin &lt;  8">
              <block>
              pos = ((pin    ) &amp; 7) * 4;
              Write32(portAdr + 0x20, ((Read32(portAdr + 0x20) &amp; ~(15 &lt;&lt; pos))                    ) );  // GPIOx_AFRL:    Alternate Function to AF0
              </block>
            </control>
            <control if="pin &gt;= 8">
              <block>
              pos = ((pin - 8) &amp; 7) * 4;
              Write32(portAdr + 0x24, ((Read32(portAdr + 0x24) &amp; ~(15 &lt;&lt; pos))                    ) );  // GPIOx_AFRH:    Alternate Function to AF0
              </block>
            </control>
        </sequence>

        <sequence name="ConfigureTraceTPIUPins">
          <block>
            __var pin     = 8;
            __var port    = 0;
            __var portAdr = 0;
            __var pos     = 0;

            __var width   = (__traceout &amp; 0x003F0000) &gt;&gt; 16;
          </block>

            <!-- configure TRACECLK -->
            <block info="configure TRACECLK">
              pin     =                (TraceClk_Pin            ) &amp; 0x0000FFFF;
              port    =                (TraceClk_Pin &gt;&gt; 16) &amp; 0x0000FFFF;
              portAdr = 0x58020000 + (((TraceClk_Pin &gt;&gt; 16) &amp; 0x0000FFFF) * 0x400);

              pos = pin * 2;
              Write32(0x58024540,     ((Read32(0x58024540    )                         ) | (1 &lt;&lt; port)) );  // RCC_C1_AHB4ENR:IO port clock enable
              Write32(portAdr + 0x00, ((Read32(portAdr + 0x00) &amp; ~( 3 &lt;&lt; pos)) | (2 &lt;&lt; pos )) );  // GPIOx_MODER:   Set Mode (Alternate Function)
              Write32(portAdr + 0x08, ((Read32(portAdr + 0x08)                         ) | (3 &lt;&lt; pos )) );  // GPIOx_OSPEEDR: Set Speed (Very High Speed)
              Write32(portAdr + 0x0C, ((Read32(portAdr + 0x0C) &amp; ~( 3 &lt;&lt; pos))                    ) );  // GPIOx_PUPDR:   Set I/O to no pull-up/pull-down
            </block>
            <control if="pin &lt;  8">
              <block>
              pos = ((pin    ) &amp; 7) * 4;
              Write32(portAdr + 0x20, ((Read32(portAdr + 0x20) &amp; ~(15 &lt;&lt; pos))                    ) );  // GPIOx_AFRL:    Alternate Function to AF0
              </block>
            </control>
            <control if="pin &gt;= 8">
              <block>
              pos = ((pin - 8) &amp; 7) * 4;
              Write32(portAdr + 0x24, ((Read32(portAdr + 0x24) &amp; ~(15 &lt;&lt; pos))                    ) );  // GPIOx_AFRH:    Alternate Function to AF0
              </block>
            </control>

          <control if="width &gt;= 1" info="TPIU port width 1">
            <!-- configure TRACED0 -->
            <block info="configure TRACED0">
              pin     =                (TraceD0_Pin            ) &amp; 0x0000FFFF;
              port    =                (TraceD0_Pin &gt;&gt; 16) &amp; 0x0000FFFF;
              portAdr = 0x58020000 + (((TraceD0_Pin &gt;&gt; 16) &amp; 0x0000FFFF) * 0x400);

              pos = pin * 2;
              Write32(0x58024540,     ((Read32(0x58024540    )                         ) | (1 &lt;&lt; port)) );  // RCC_C1_AHB4ENR:IO port clock enable
              Write32(portAdr + 0x00, ((Read32(portAdr + 0x00) &amp; ~( 3 &lt;&lt; pos)) | (2 &lt;&lt; pos )) );  // GPIOx_MODER:   Set Mode (Alternate Function)
              Write32(portAdr + 0x08, ((Read32(portAdr + 0x08)                         ) | (3 &lt;&lt; pos )) );  // GPIOx_OSPEEDR: Set Speed (Very High Speed)
              Write32(portAdr + 0x0C, ((Read32(portAdr + 0x0C) &amp; ~( 3 &lt;&lt; pos))                    ) );  // GPIOx_PUPDR:   Set I/O to no pull-up/pull-down
            </block>
            <control if="pin &lt;  8">
              <block>
              pos = ((pin    ) &amp; 7) * 4;
              Write32(portAdr + 0x20, ((Read32(portAdr + 0x20) &amp; ~(15 &lt;&lt; pos))                    ) );  // GPIOx_AFRL:    Alternate Function to AF0
              </block>
            </control>
            <control if="pin &gt;= 8">
              <block>
              pos = ((pin - 8) &amp; 7) * 4;
              Write32(portAdr + 0x24, ((Read32(portAdr + 0x24) &amp; ~(15 &lt;&lt; pos))                    ) );  // GPIOx_AFRH:    Alternate Function to AF0
              </block>
            </control>
          </control>

          <control if="width &gt;= 2" info="TPIU port width 2">
            <!-- configure TRACED1 -->
            <block info="configure TRACED1">
              pin     =                (TraceD1_Pin            ) &amp; 0x0000FFFF;
              port    =                (TraceD1_Pin &gt;&gt; 16) &amp; 0x0000FFFF;
              portAdr = 0x58020000 + (((TraceD1_Pin &gt;&gt; 16) &amp; 0x0000FFFF) * 0x400);

              pos = pin * 2;
              Write32(0x58024540,     ((Read32(0x58024540    )                         ) | (1 &lt;&lt; port)) );  // RCC_C1_AHB4ENR:IO port clock enable
              Write32(portAdr + 0x00, ((Read32(portAdr + 0x00) &amp; ~( 3 &lt;&lt; pos)) | (2 &lt;&lt; pos )) );  // GPIOx_MODER:   Set Mode (Alternate Function)
              Write32(portAdr + 0x08, ((Read32(portAdr + 0x08)                         ) | (3 &lt;&lt; pos )) );  // GPIOx_OSPEEDR: Set Speed (Very High Speed)
              Write32(portAdr + 0x0C, ((Read32(portAdr + 0x0C) &amp; ~( 3 &lt;&lt; pos))                    ) );  // GPIOx_PUPDR:   Set I/O to no pull-up/pull-down
            </block>
            <control if="pin &lt;  8">
              <block>
              pos = ((pin    ) &amp; 7) * 4;
              Write32(portAdr + 0x20, ((Read32(portAdr + 0x20) &amp; ~(15 &lt;&lt; pos))                    ) );  // GPIOx_AFRL:    Alternate Function to AF0
              </block>
            </control>
            <control if="pin &gt;= 8">
              <block>
              pos = ((pin - 8) &amp; 7) * 4;
              Write32(portAdr + 0x24, ((Read32(portAdr + 0x24) &amp; ~(15 &lt;&lt; pos))                    ) );  // GPIOx_AFRH:    Alternate Function to AF0
              </block>
            </control>
          </control>

          <control if="width &gt;= 4" info="TPIU port width 4">
            <!-- configure TRACED2 -->
            <block info="configure TRACED2">
              pin     =                (TraceD2_Pin            ) &amp; 0x0000FFFF;
              port    =                (TraceD2_Pin &gt;&gt; 16) &amp; 0x0000FFFF;
              portAdr = 0x58020000 + (((TraceD2_Pin &gt;&gt; 16) &amp; 0x0000FFFF) * 0x400);

              pos = pin * 2;
              Write32(0x58024540,     ((Read32(0x58024540    )                         ) | (1 &lt;&lt; port)) );  // RCC_C1_AHB4ENR:IO port clock enable
              Write32(portAdr + 0x00, ((Read32(portAdr + 0x00) &amp; ~( 3 &lt;&lt; pos)) | (2 &lt;&lt; pos )) );  // GPIOx_MODER:   Set Mode (Alternate Function)
              Write32(portAdr + 0x08, ((Read32(portAdr + 0x08)                         ) | (3 &lt;&lt; pos )) );  // GPIOx_OSPEEDR: Set Speed (Very High Speed)
              Write32(portAdr + 0x0C, ((Read32(portAdr + 0x0C) &amp; ~( 3 &lt;&lt; pos))                    ) );  // GPIOx_PUPDR:   Set I/O to no pull-up/pull-down
            </block>
            <control if="pin &lt;  8">
              <block>
              pos = ((pin    ) &amp; 7) * 4;
              Write32(portAdr + 0x20, ((Read32(portAdr + 0x20) &amp; ~(15 &lt;&lt; pos))                    ) );  // GPIOx_AFRL:    Alternate Function to AF0
              </block>
            </control>
            <control if="pin &gt;= 8">
              <block>
              pos = ((pin - 8) &amp; 7) * 4;
              Write32(portAdr + 0x24, ((Read32(portAdr + 0x24) &amp; ~(15 &lt;&lt; pos))                    ) );  // GPIOx_AFRH:    Alternate Function to AF0
              </block>
            </control>

            <!-- configure TRACED3 -->
            <block info="configure TRACED3">
              pin     =                (TraceD3_Pin            ) &amp; 0x0000FFFF;
              port    =                (TraceD3_Pin &gt;&gt; 16) &amp; 0x0000FFFF;
              portAdr = 0x58020000 + (((TraceD3_Pin &gt;&gt; 16) &amp; 0x0000FFFF) * 0x400);

              pos = pin * 2;
              Write32(0x58024540,     ((Read32(0x58024540    )                         ) | (1 &lt;&lt; port)) );  // RCC_C1_AHB4ENR:IO port clock enable
              Write32(portAdr + 0x00, ((Read32(portAdr + 0x00) &amp; ~( 3 &lt;&lt; pos)) | (2 &lt;&lt; pos )) );  // GPIOx_MODER:   Set Mode (Alternate Function)
              Write32(portAdr + 0x08, ((Read32(portAdr + 0x08)                         ) | (3 &lt;&lt; pos )) );  // GPIOx_OSPEEDR: Set Speed (Very High Speed)
              Write32(portAdr + 0x0C, ((Read32(portAdr + 0x0C) &amp; ~( 3 &lt;&lt; pos))                    ) );  // GPIOx_PUPDR:   Set I/O to no pull-up/pull-down
            </block>
            <control if="pin &lt;  8">
              <block>
              pos = ((pin    ) &amp; 7) * 4;
              Write32(portAdr + 0x20, ((Read32(portAdr + 0x20) &amp; ~(15 &lt;&lt; pos))                    ) );  // GPIOx_AFRL:    Alternate Function to AF0
              </block>
            </control>
            <control if="pin &gt;= 8">
              <block>
              pos = ((pin - 8) &amp; 7) * 4;
              Write32(portAdr + 0x24, ((Read32(portAdr + 0x24) &amp; ~(15 &lt;&lt; pos))                    ) );  // GPIOx_AFRH:    Alternate Function to AF0
              </block>
            </control>
          </control>
        </sequence>
      </sequences>

      <!-- ************************  Subfamily 'STM32H742'  **************************** -->
      <subFamily DsubFamily="STM32H742">
        <processor Dcore="Cortex-M7" DcoreVersion="r0p1" Dclock="480000000" Dmpu="MPU" Dfpu="DP_FPU" Dendian="Little-endian"/>
        <book name="Documentation/DUI0646B_cortex_m7_dgug.pdf" title="Cortex-M7 Generic User Guide"/>

        <debug svd="CMSIS/SVD/STM32H742x.svd"/>
        <compile header="Drivers/CMSIS/Device/ST/STM32H7xx/Include/stm32h7xx.h" define="STM32H742xx"/>
        <book name="Documentation/DM00314099.pdf" title="STM32H742, STM32H743/753 and STM32H750 Reference Manual"/>
        <book name="Documentation/DM00387108.pdf" title="STM32H742xI/G STM32H743xI/G Data Sheet"/>

        <debugvars configfile="CMSIS/Debug/STM32H742_743_753_750.dbgconf" version="1.1.0">
          // Debug Access Variables, can be modified by user via copies of DBGCONF files as created by uVision. Also see sub-family level.
          __var DbgMCU_CR        = 0x00000007;   // DBGMCU_CR:       DBGMCU configuration register
                                                 //                  [ 8] DBGSTBY_D3, [ 7] DBGSTOP_D3
                                                 //                  [ 2] DBGSTBY_D1, [ 1] DBGSTOP_D1,  [ 0] DBGSLEEP_D1
          __var DbgMCU_APB3_Fz1  = 0x00000000;   // DBGMCU_APB3FZ1:  DBGMCU APB3 peripheral freeze register
          __var DbgMCU_APB1L_Fz1 = 0x00000000;   // DBGMCU_APB1LFZ1: DBGMCU APB1L peripheral freeze register
          __var DbgMCU_APB2_Fz1  = 0x00000000;   // DBGMCU_APB2FZ1:  DBGMCU APB2 peripheral freeze register
          __var DbgMCU_APB4_Fz1  = 0x00000000;   // DBGMCU_APB4FZ1:  DBGMCU APB4 peripheral freeze register

          __var TraceClk_Pin     = 0x00040002;   // PE2
          __var TraceD0_Pin      = 0x00040003;   // PE3
          __var TraceD1_Pin      = 0x00040004;   // PE4
          __var TraceD2_Pin      = 0x00040005;   // PE5
          __var TraceD3_Pin      = 0x00040006;   // PE6
        </debugvars>

        <sequences>
          <sequence name="DebugDeviceUnlock"  info="SingleCore DeviceUnlock">
            <block>
              __var value = 0;

              Sequence("CheckID");

              __ap   = 2;                                         // Switch to System Debug Access Port

              value  = Read32(0xE00E1004);                        // Read DBGMCU_CR
              value |= 0x00670000;                                // set preset values (enable all debug clocks by default)
                                                                  // DBGMCU_CR[18] CKDBGD3EN, [17] CKDBGD2EN, [16] CKDBGD1EN
                                                                  // DBGMCU_CR[22] D3DBGCKEN, [21] D1DBGCKEN
            </block>

            <control if="__traceout"> <!-- Enable Trace Clock and hence access to global trace components now -->
              <block>
                value |= 0x00100000;                              // DBGMCU_CR[20] TRACECLKEN
              </block>
            </control>

            <block>
              Write32(0xE00E1004, value);                         // Update DBGMCU_CR
            </block>

            <block info="DbgMCU registers">
              Write32(0xE00E1004 , DbgMCU_CR        | value);     // DBGMCU_CR:       Configure MCU Debug
              Write32(0xE00E1034 , DbgMCU_APB3_Fz1         );     // DBGMCU_APB3FZ1:  Configure APB3 peripheral freeze behavior
              Write32(0xE00E103C , DbgMCU_APB1L_Fz1        );     // DBGMCU_APB1LFZ1: Configure APB1L peripheral freeze behavior
              Write32(0xE00E104C , DbgMCU_APB2_Fz1         );     // DBGMCU_APB2FZ1:  Configure APB2 peripheral freeze behavior
              Write32(0xE00E1054 , DbgMCU_APB4_Fz1         );     // DBGMCU_APB4FZ1:  Configure APB4 peripheral freeze behavior
            </block>
          </sequence>
        </sequences>

        <algorithm name="CMSIS/Flash/STM32H7x_2048.FLM"            start="0x08000000" size="0x00200000" RAMstart="0x20000000" RAMsize="0x8000" default="1" />

        <memory    name="DTCMRAM"  access="rwx"  id="IRAM1"        start="0x20000000" size="0x00020000" default="1" init="0"/>
        <memory    name="RAM_D1"   access="rwx"  id="IRAM2"        start="0x24000000" size="0x00057000" default="1" init="0"/>
        <memory    name="RAM_D2"   access="rwx"                    start="0x30000000" size="0x00008000" default="1" init="0"/>
        <memory    name="RAM_D2S2" access="rwx"                    start="0x30020000" size="0x00004000" default="1" init="0"/>
        <memory    name="RAM_D3"   access="rwx"                    start="0x38000000" size="0x00010000" default="1" init="0"/>
     <!--memory    name="ITCMRAM"  access="rwx"                    start="0x00000000" size="0x00010000" default="1" init="0"/-->

        <!-- *************************  Device 'STM32H742AGIx'  ***************************** -->
        <device Dname="STM32H742AGIx">
          <memory name="FLASH_Bank1" access="rx" id="IROM1" start="0x08000000" size="0x00100000" default="1" startup="1"/>

          <feature type="BGA" n="169"/>
        </device>

        <!-- *************************  Device 'STM32H742AIIx'  ***************************** -->
        <device Dname="STM32H742AIIx">
          <memory name="FLASH_Bank1" access="rx" id="IROM1" start="0x08000000" size="0x00200000" default="1" startup="1"/>

          <feature type="BGA" n="169"/>
        </device>

        <!-- *************************  Device 'STM32H742BGTx'  ***************************** -->
        <device Dname="STM32H742BGTx">
          <memory name="FLASH_Bank1" access="rx" id="IROM1" start="0x08000000" size="0x00100000" default="1" startup="1"/>

          <feature type="QFP" n="208"/>
        </device>

        <!-- *************************  Device 'STM32H742BITx'  ***************************** -->
        <device Dname="STM32H742BITx">
          <memory name="FLASH_Bank1" access="rx" id="IROM1" start="0x08000000" size="0x00200000" default="1" startup="1"/>

          <feature type="QFP" n="208"/>
        </device>

        <!-- *************************  Device 'STM32H742IGKx'  ***************************** -->
        <device Dname="STM32H742IGKx">
          <memory name="FLASH_Bank1" access="rx" id="IROM1" start="0x08000000" size="0x00100000" default="1" startup="1"/>

          <feature type="BGA" n="176"/>
        </device>

        <!-- *************************  Device 'STM32H742IIKx'  ***************************** -->
        <device Dname="STM32H742IIKx">
          <memory name="FLASH_Bank1" access="rx" id="IROM1" start="0x08000000" size="0x00200000" default="1" startup="1"/>

          <feature type="BGA" n="176"/>
        </device>

        <!-- *************************  Device 'STM32H742IGTx'  ***************************** -->
        <device Dname="STM32H742IGTx">
          <memory name="FLASH_Bank1" access="rx" id="IROM1" start="0x08000000" size="0x00100000" default="1" startup="1"/>

          <feature type="QFP" n="176"/>
        </device>

        <!-- *************************  Device 'STM32H742IITx'  ***************************** -->
        <device Dname="STM32H742IITx">
          <memory name="FLASH_Bank1" access="rx" id="IROM1" start="0x08000000" size="0x00200000" default="1" startup="1"/>

          <feature type="QFP" n="176"/>
        </device>

        <!-- *************************  Device 'STM32H742VGHx'  ***************************** -->
        <device Dname="STM32H742VGHx">
          <memory name="FLASH_Bank1" access="rx" id="IROM1" start="0x08000000" size="0x00100000" default="1" startup="1"/>

          <feature type="BGA" n="100"/>
        </device>

        <!-- *************************  Device 'STM32H742VIHx'  ***************************** -->
        <device Dname="STM32H742VIHx">
          <memory name="FLASH_Bank1" access="rx" id="IROM1" start="0x08000000" size="0x00200000" default="1" startup="1"/>

          <feature type="BGA" n="100"/>
        </device>

        <!-- *************************  Device 'STM32H742VGTx'  ***************************** -->
        <device Dname="STM32H742VGTx">
          <memory name="FLASH_Bank1" access="rx" id="IROM1" start="0x08000000" size="0x00100000" default="1" startup="1"/>

          <feature type="QFP" n="100"/>
        </device>

        <!-- *************************  Device 'STM32H742VITx'  ***************************** -->
        <device Dname="STM32H742VITx">
          <memory name="FLASH_Bank1" access="rx" id="IROM1" start="0x08000000" size="0x00200000" default="1" startup="1"/>

          <feature type="QFP" n="100"/>
        </device>

        <!-- *************************  Device 'STM32H742XGHx'  ***************************** -->
        <device Dname="STM32H742XGHx">
          <memory name="FLASH_Bank1" access="rx" id="IROM1" start="0x08000000" size="0x00100000" default="1" startup="1"/>

          <feature type="BGA" n="240"/>
        </device>

        <!-- *************************  Device 'STM32H742XIHx'  ***************************** -->
        <device Dname="STM32H742XIHx">
          <memory name="FLASH_Bank1" access="rx" id="IROM1" start="0x08000000" size="0x00200000" default="1" startup="1"/>

          <feature type="BGA" n="240"/>
        </device>

        <!-- *************************  Device 'STM32H742ZGTx'  ***************************** -->
        <device Dname="STM32H742ZGTx">
          <memory name="FLASH_Bank1" access="rx" id="IROM1" start="0x08000000" size="0x00100000" default="1" startup="1"/>

          <feature type="QFP" n="144"/>
        </device>

        <!-- *************************  Device 'STM32H742ZITx'  ***************************** -->
        <device Dname="STM32H742ZITx">
          <memory name="FLASH_Bank1" access="rx" id="IROM1" start="0x08000000" size="0x00200000" default="1" startup="1"/>

          <feature type="QFP" n="144"/>
        </device>

      </subFamily>

      <!-- ************************  Subfamily 'STM32H743'  **************************** -->
      <subFamily DsubFamily="STM32H743">
        <processor Dcore="Cortex-M7" DcoreVersion="r0p1" Dclock="480000000" Dmpu="MPU" Dfpu="DP_FPU" Dendian="Little-endian"/>
        <book name="Documentation/DUI0646B_cortex_m7_dgug.pdf" title="Cortex-M7 Generic User Guide"/>

        <debug svd="CMSIS/SVD/STM32H743x.svd"/>
        <compile header="Drivers/CMSIS/Device/ST/STM32H7xx/Include/stm32h7xx.h" define="STM32H743xx"/>
        <book name="Documentation/DM00314099.pdf" title="STM32H742, STM32H743/753 and STM32H750 Reference Manual"/>
        <book name="Documentation/DM00387108.pdf" title="STM32H742xI/G STM32H743xI/G Data Sheet"/>

        <debugvars configfile="CMSIS/Debug/STM32H742_743_753_750.dbgconf" version="1.1.0">
          // Debug Access Variables, can be modified by user via copies of DBGCONF files as created by uVision. Also see sub-family level.
          __var DbgMCU_CR        = 0x00000007;   // DBGMCU_CR:       DBGMCU configuration register
                                                 //                  [ 8] DBGSTBY_D3, [ 7] DBGSTOP_D3
                                                 //                  [ 2] DBGSTBY_D1, [ 1] DBGSTOP_D1,  [ 0] DBGSLEEP_D1
          __var DbgMCU_APB3_Fz1  = 0x00000000;   // DBGMCU_APB3FZ1:  DBGMCU APB3 peripheral freeze register
          __var DbgMCU_APB1L_Fz1 = 0x00000000;   // DBGMCU_APB1LFZ1: DBGMCU APB1L peripheral freeze register
          __var DbgMCU_APB2_Fz1  = 0x00000000;   // DBGMCU_APB2FZ1:  DBGMCU APB2 peripheral freeze register
          __var DbgMCU_APB4_Fz1  = 0x00000000;   // DBGMCU_APB4FZ1:  DBGMCU APB4 peripheral freeze register

          __var TraceClk_Pin     = 0x00040002;   // PE2
          __var TraceD0_Pin      = 0x00040003;   // PE3
          __var TraceD1_Pin      = 0x00040004;   // PE4
          __var TraceD2_Pin      = 0x00040005;   // PE5
          __var TraceD3_Pin      = 0x00040006;   // PE6
        </debugvars>

        <sequences>
          <sequence name="DebugDeviceUnlock"  info="SingleCore DeviceUnlock">
            <block>
              __var value = 0;

              Sequence("CheckID");

              __ap   = 2;                                         // Switch to System Debug Access Port

              value  = Read32(0xE00E1004);                        // Read DBGMCU_CR
              value |= 0x00670000;                                // set preset values (enable all debug clocks by default)
                                                                  // DBGMCU_CR[18] CKDBGD3EN, [17] CKDBGD2EN, [16] CKDBGD1EN
                                                                  // DBGMCU_CR[22] D3DBGCKEN, [21] D1DBGCKEN
            </block>

            <control if="__traceout"> <!-- Enable Trace Clock and hence access to global trace components now -->
              <block>
                value |= 0x00100000;                              // DBGMCU_CR[20] TRACECLKEN
              </block>
            </control>

            <block>
              Write32(0xE00E1004, value);                         // Update DBGMCU_CR
            </block>

            <block info="DbgMCU registers">
              Write32(0xE00E1004 , DbgMCU_CR        | value);     // DBGMCU_CR:       Configure MCU Debug
              Write32(0xE00E1034 , DbgMCU_APB3_Fz1         );     // DBGMCU_APB3FZ1:  Configure APB3 peripheral freeze behavior
              Write32(0xE00E103C , DbgMCU_APB1L_Fz1        );     // DBGMCU_APB1LFZ1: Configure APB1L peripheral freeze behavior
              Write32(0xE00E104C , DbgMCU_APB2_Fz1         );     // DBGMCU_APB2FZ1:  Configure APB2 peripheral freeze behavior
              Write32(0xE00E1054 , DbgMCU_APB4_Fz1         );     // DBGMCU_APB4FZ1:  Configure APB4 peripheral freeze behavior
            </block>
          </sequence>
        </sequences>

        <algorithm name="CMSIS/Flash/STM32H7x_2048.FLM"            start="0x08000000" size="0x00200000" RAMstart="0x20000000" RAMsize="0x8000" default="1" />

        <memory    name="DTCMRAM"  access="rwx"  id="IRAM1"        start="0x20000000" size="0x00020000" default="1" init="0"/>
        <memory    name="RAM_D1"   access="rwx"  id="IRAM2"        start="0x24000000" size="0x00080000" default="1" init="0"/>
        <memory    name="RAM_D2"   access="rwx"                    start="0x30000000" size="0x00048000" default="1" init="0"/>
        <memory    name="RAM_D3"   access="rwx"                    start="0x38000000" size="0x00010000" default="1" init="0"/>
     <!--memory    name="ITCMRAM"  access="rwx"                    start="0x00000000" size="0x00010000" default="1" init="0"/-->

        <!-- *************************  Device 'STM32H743AGIx'  ***************************** -->
        <device Dname="STM32H743AGIx">
          <memory name="FLASH_Bank1" access="rx" id="IROM1" start="0x08000000" size="0x00100000" default="1" startup="1"/>

          <feature type="BGA" n="169"/>
        </device>

        <!-- *************************  Device 'STM32H743AIIx'  ***************************** -->
        <device Dname="STM32H743AIIx">
          <memory name="FLASH_Bank1" access="rx" id="IROM1" start="0x08000000" size="0x00100000" default="1" startup="1"/>
          <memory name="FLASH_Bank2" access="rx" id="IROM2" start="0x08100000" size="0x00100000" default="1" startup="1"/>

          <feature type="BGA" n="169"/>
        </device>

        <!-- *************************  Device 'STM32H743BGTx'  ***************************** -->
        <device Dname="STM32H743BGTx">
          <memory name="FLASH_Bank1" access="rx" id="IROM1" start="0x08000000" size="0x00100000" default="1" startup="1"/>

          <feature type="QFP" n="208"/>
        </device>

        <!-- *************************  Device 'STM32H743BITx'  ***************************** -->
        <device Dname="STM32H743BITx">
          <memory name="FLASH_Bank1" access="rx" id="IROM1" start="0x08000000" size="0x00100000" default="1" startup="1"/>
          <memory name="FLASH_Bank2" access="rx" id="IROM2" start="0x08100000" size="0x00100000" default="1" startup="1"/>

          <feature type="QFP" n="208"/>
        </device>

        <!-- *************************  Device 'STM32H743IGKx'  ***************************** -->
        <device Dname="STM32H743IGKx">
          <memory name="FLASH_Bank1" access="rx" id="IROM1" start="0x08000000" size="0x00100000" default="1" startup="1"/>

          <feature type="BGA" n="176"/>
        </device>

        <!-- *************************  Device 'STM32H743IGTx'  ***************************** -->
        <device Dname="STM32H743IGTx">
          <memory name="FLASH_Bank1" access="rx" id="IROM1" start="0x08000000" size="0x00100000" default="1" startup="1"/>

          <feature type="QFP" n="169"/>
        </device>

        <!-- *************************  Device 'STM32H743IIKx'  ***************************** -->
        <device Dname="STM32H743IIKx">
          <memory name="FLASH_Bank1" access="rx" id="IROM1" start="0x08000000" size="0x00100000" default="1" startup="1"/>
          <memory name="FLASH_Bank2" access="rx" id="IROM2" start="0x08100000" size="0x00100000" default="1" startup="1"/>

          <feature type="BGA" n="176"/>
        </device>

        <!-- *************************  Device 'STM32H743IITx'  ***************************** -->
        <device Dname="STM32H743IITx">
          <memory name="FLASH_Bank1" access="rx" id="IROM1" start="0x08000000" size="0x00100000" default="1" startup="1"/>
          <memory name="FLASH_Bank2" access="rx" id="IROM2" start="0x08100000" size="0x00100000" default="1" startup="1"/>

          <feature type="QFP" n="176"/>
        </device>

        <!-- *************************  Device 'STM32H743VGHx'  ***************************** -->
        <device Dname="STM32H743VGHx">
          <memory name="FLASH_Bank1" access="rx" id="IROM1" start="0x08000000" size="0x00100000" default="1" startup="1"/>

          <feature type="BGA" n="100"/>
        </device>

        <!-- *************************  Device 'STM32H743VGTx'  ***************************** -->
        <device Dname="STM32H743VGTx">
          <memory name="FLASH_Bank1" access="rx" id="IROM1" start="0x08000000" size="0x00100000" default="1" startup="1"/>

          <feature type="QFP" n="100"/>
        </device>

        <!-- *************************  Device 'STM32H743VIHx'  ***************************** -->
        <device Dname="STM32H743VIHx">
          <memory name="FLASH_Bank1" access="rx" id="IROM1" start="0x08000000" size="0x00100000" default="1" startup="1"/>
          <memory name="FLASH_Bank2" access="rx" id="IROM2" start="0x08100000" size="0x00100000" default="1" startup="1"/>

          <feature type="BGA" n="100"/>
        </device>

        <!-- *************************  Device 'STM32H743VITx'  ***************************** -->
        <device Dname="STM32H743VITx">
          <memory name="FLASH_Bank1" access="rx" id="IROM1" start="0x08000000" size="0x00100000" default="1" startup="1"/>
          <memory name="FLASH_Bank2" access="rx" id="IROM2" start="0x08100000" size="0x00100000" default="1" startup="1"/>

          <feature type="QFP" n="100"/>
        </device>

        <!-- *************************  Device 'STM32H743XGHx'  ***************************** -->
        <device Dname="STM32H743XGHx">
          <memory name="FLASH_Bank1" access="rx" id="IROM1" start="0x08000000" size="0x00100000" default="1" startup="1"/>

          <feature type="BGA" n="240"/>
        </device>

        <!-- *************************  Device 'STM32H743XIHx'  ***************************** -->
        <device Dname="STM32H743XIHx">
          <memory name="FLASH_Bank1" access="rx" id="IROM1" start="0x08000000" size="0x00100000" default="1" startup="1"/>
          <memory name="FLASH_Bank2" access="rx" id="IROM2" start="0x08100000" size="0x00100000" default="1" startup="1"/>

          <feature type="BGA" n="240"/>
        </device>

        <!-- *************************  Device 'STM32H743ZGTx'  ***************************** -->
        <device Dname="STM32H743ZGTx">
          <memory name="FLASH_Bank1" access="rx" id="IROM1" start="0x08000000" size="0x00100000" default="1" startup="1"/>

          <feature type="QFP" n="144"/>
        </device>

        <!-- *************************  Device 'STM32H743ZITx'  ***************************** -->
        <device Dname="STM32H743ZITx">
          <memory name="FLASH_Bank1" access="rx" id="IROM1" start="0x08000000" size="0x00100000" default="1" startup="1"/>
          <memory name="FLASH_Bank2" access="rx" id="IROM2" start="0x08100000" size="0x00100000" default="1" startup="1"/>

          <feature type="QFP" n="144"/>
        </device>
      </subFamily>

      <!-- ************************  Subfamily 'STM32H753'  **************************** -->
      <subFamily DsubFamily="STM32H753">
        <processor Dcore="Cortex-M7" DcoreVersion="r0p1" Dclock="480000000" Dmpu="MPU" Dfpu="DP_FPU" Dendian="Little-endian"/>
        <book name="Documentation/DUI0646B_cortex_m7_dgug.pdf" title="Cortex-M7 Generic User Guide"/>

        <debug svd="CMSIS/SVD/STM32H753x.svd"/>
        <compile header="Drivers/CMSIS/Device/ST/STM32H7xx/Include/stm32h7xx.h" define="STM32H753xx"/>
        <book name="Documentation/DM00314099.pdf" title="STM32H742, STM32H743/753 and STM32H750 Reference Manual"/>
        <book name="Documentation/DM00388325.pdf" title="STM32H753 Data Sheet"/>

        <debugvars configfile="CMSIS/Debug/STM32H742_743_753_750.dbgconf" version="1.1.0">
          // Debug Access Variables, can be modified by user via copies of DBGCONF files as created by uVision. Also see sub-family level.
          __var DbgMCU_CR        = 0x00000007;   // DBGMCU_CR:       DBGMCU configuration register
                                                 //                  [ 8] DBGSTBY_D3, [ 7] DBGSTOP_D3
                                                 //                  [ 2] DBGSTBY_D1, [ 1] DBGSTOP_D1,  [ 0] DBGSLEEP_D1
          __var DbgMCU_APB3_Fz1  = 0x00000000;   // DBGMCU_APB3FZ1:  DBGMCU APB3 peripheral freeze register
          __var DbgMCU_APB1L_Fz1 = 0x00000000;   // DBGMCU_APB1LFZ1: DBGMCU APB1L peripheral freeze register
          __var DbgMCU_APB2_Fz1  = 0x00000000;   // DBGMCU_APB2FZ1:  DBGMCU APB2 peripheral freeze register
          __var DbgMCU_APB4_Fz1  = 0x00000000;   // DBGMCU_APB4FZ1:  DBGMCU APB4 peripheral freeze register

          __var TraceClk_Pin     = 0x00040002;   // PE2
          __var TraceD0_Pin      = 0x00040003;   // PE3
          __var TraceD1_Pin      = 0x00040004;   // PE4
          __var TraceD2_Pin      = 0x00040005;   // PE5
          __var TraceD3_Pin      = 0x00040006;   // PE6
        </debugvars>

        <sequences>
          <sequence name="DebugDeviceUnlock"  info="SingleCore DeviceUnlock">
            <block>
              __var value = 0;

              Sequence("CheckID");

              __ap   = 2;                                         // Switch to System Debug Access Port

              value  = Read32(0xE00E1004);                        // Read DBGMCU_CR
              value |= 0x00670000;                                // set preset values (enable all debug clocks by default)
                                                                  // DBGMCU_CR[18] CKDBGD3EN, [17] CKDBGD2EN, [16] CKDBGD1EN
                                                                  // DBGMCU_CR[22] D3DBGCKEN, [21] D1DBGCKEN
            </block>

            <control if="__traceout"> <!-- Enable Trace Clock and hence access to global trace components now -->
              <block>
                value |= 0x00100000;                              // DBGMCU_CR[20] TRACECLKEN
              </block>
            </control>

            <block>
              Write32(0xE00E1004, value);                         // Update DBGMCU_CR
            </block>

            <block info="DbgMCU registers">
              Write32(0xE00E1004 , DbgMCU_CR        | value);     // DBGMCU_CR:       Configure MCU Debug
              Write32(0xE00E1034 , DbgMCU_APB3_Fz1         );     // DBGMCU_APB3FZ1:  Configure APB3 peripheral freeze behavior
              Write32(0xE00E103C , DbgMCU_APB1L_Fz1        );     // DBGMCU_APB1LFZ1: Configure APB1L peripheral freeze behavior
              Write32(0xE00E104C , DbgMCU_APB2_Fz1         );     // DBGMCU_APB2FZ1:  Configure APB2 peripheral freeze behavior
              Write32(0xE00E1054 , DbgMCU_APB4_Fz1         );     // DBGMCU_APB4FZ1:  Configure APB4 peripheral freeze behavior
            </block>
          </sequence>
        </sequences>

        <algorithm name="CMSIS/Flash/STM32H7x_2048.FLM"            start="0x08000000" size="0x00200000" RAMstart="0x20000000" RAMsize="0x8000" default="1" />

        <memory    name="DTCMRAM"  access="rwx"  id="IRAM1"        start="0x20000000" size="0x00020000" default="1" init="0"/>
        <memory    name="RAM_D1"   access="rwx"  id="IRAM2"        start="0x24000000" size="0x00080000" default="1" init="0"/>
        <memory    name="RAM_D2"   access="rwx"                    start="0x30000000" size="0x00048000" default="1" init="0"/>
        <memory    name="RAM_D3"   access="rwx"                    start="0x38000000" size="0x00010000" default="1" init="0"/>
     <!--memory    name="ITCMRAM"  access="rwx"                    start="0x00000000" size="0x00010000" default="1" init="0"/-->

        <!-- *************************  Device 'STM32H753AIIx'  ***************************** -->
        <device Dname="STM32H753AIIx">
          <memory name="FLASH_Bank1" access="rx" id="IROM1" start="0x08000000" size="0x00100000" default="1" startup="1"/>
          <memory name="FLASH_Bank2" access="rx" id="IROM2" start="0x08100000" size="0x00100000" default="1" startup="1"/>

          <feature type="BGA" n="169"/>
        </device>

        <!-- *************************  Device 'STM32H753BITx'  ***************************** -->
        <device Dname="STM32H753BITx">
          <memory name="FLASH_Bank1" access="rx" id="IROM1" start="0x08000000" size="0x00100000" default="1" startup="1"/>
          <memory name="FLASH_Bank2" access="rx" id="IROM2" start="0x08100000" size="0x00100000" default="1" startup="1"/>

          <feature type="QFP" n="208"/>
        </device>

        <!-- *************************  Device 'STM32H753IIKx'  ***************************** -->
        <device Dname="STM32H753IIKx">
          <memory name="FLASH_Bank1" access="rx" id="IROM1" start="0x08000000" size="0x00100000" default="1" startup="1"/>
          <memory name="FLASH_Bank2" access="rx" id="IROM2" start="0x08100000" size="0x00100000" default="1" startup="1"/>

          <feature type="BGA" n="176"/>
        </device>

        <!-- *************************  Device 'STM32H753IITx'  ***************************** -->
        <device Dname="STM32H753IITx">
          <memory name="FLASH_Bank1" access="rx" id="IROM1" start="0x08000000" size="0x00100000" default="1" startup="1"/>
          <memory name="FLASH_Bank2" access="rx" id="IROM2" start="0x08100000" size="0x00100000" default="1" startup="1"/>

          <feature type="QFP" n="176"/>
        </device>

        <!-- *************************  Device 'STM32H753VIHx'  ***************************** -->
        <device Dname="STM32H753VIHx">
          <memory name="FLASH_Bank1" access="rx" id="IROM1" start="0x08000000" size="0x00100000" default="1" startup="1"/>
          <memory name="FLASH_Bank2" access="rx" id="IROM2" start="0x08100000" size="0x00100000" default="1" startup="1"/>

          <feature type="BGA" n="100"/>
        </device>

        <!-- *************************  Device 'STM32H753VITx'  ***************************** -->
        <device Dname="STM32H753VITx">
          <memory name="FLASH_Bank1" access="rx" id="IROM1" start="0x08000000" size="0x00100000" default="1" startup="1"/>
          <memory name="FLASH_Bank2" access="rx" id="IROM2" start="0x08100000" size="0x00100000" default="1" startup="1"/>

          <feature type="QFP" n="100"/>
        </device>

        <!-- *************************  Device 'STM32H753XIHx'  ***************************** -->
        <device Dname="STM32H753XIHx">
          <memory name="FLASH_Bank1" access="rx" id="IROM1" start="0x08000000" size="0x00100000" default="1" startup="1"/>
          <memory name="FLASH_Bank2" access="rx" id="IROM2" start="0x08100000" size="0x00100000" default="1" startup="1"/>

          <feature type="BGA" n="240"/>
        </device>

        <!-- *************************  Device 'STM32H753ZITx'  ***************************** -->
        <device Dname="STM32H753ZITx">
          <memory name="FLASH_Bank1" access="rx" id="IROM1" start="0x08000000" size="0x00100000" default="1" startup="1"/>
          <memory name="FLASH_Bank2" access="rx" id="IROM2" start="0x08100000" size="0x00100000" default="1" startup="1"/>

          <feature type="QFP" n="144"/>
        </device>

      </subFamily>

      <!-- ************************  Subfamily 'STM32H750' ROMLess  ******************** -->
      <subFamily DsubFamily="STM32H750">
        <processor Dcore="Cortex-M7" DcoreVersion="r0p1" Dclock="480000000" Dmpu="MPU" Dfpu="DP_FPU" Dendian="Little-endian"/>
        <book name="Documentation/DUI0646B_cortex_m7_dgug.pdf" title="Cortex-M7 Generic User Guide"/>

        <debug svd="CMSIS/SVD/STM32H750x.svd"/>
        <compile header="Drivers/CMSIS/Device/ST/STM32H7xx/Include/stm32h7xx.h" define="STM32H750xx"/>
        <book name="Documentation/DM00314099.pdf" title="STM32H742, STM32H743/753 and STM32H750 Reference Manual"/>
        <book name="Documentation/DM00496677.pdf" title="STM32H750VB STM32H750IB STM32H750XB Data Sheet"/>

        <debugvars configfile="CMSIS/Debug/STM32H742_743_753_750.dbgconf" version="1.1.0">
          // Debug Access Variables, can be modified by user via copies of DBGCONF files as created by uVision. Also see sub-family level.
          __var DbgMCU_CR        = 0x00000007;   // DBGMCU_CR:       DBGMCU configuration register
                                                 //                  [ 8] DBGSTBY_D3, [ 7] DBGSTOP_D3
                                                 //                  [ 2] DBGSTBY_D1, [ 1] DBGSTOP_D1,  [ 0] DBGSLEEP_D1
          __var DbgMCU_APB3_Fz1  = 0x00000000;   // DBGMCU_APB3FZ1:  DBGMCU APB3 peripheral freeze register
          __var DbgMCU_APB1L_Fz1 = 0x00000000;   // DBGMCU_APB1LFZ1: DBGMCU APB1L peripheral freeze register
          __var DbgMCU_APB2_Fz1  = 0x00000000;   // DBGMCU_APB2FZ1:  DBGMCU APB2 peripheral freeze register
          __var DbgMCU_APB4_Fz1  = 0x00000000;   // DBGMCU_APB4FZ1:  DBGMCU APB4 peripheral freeze register

          __var TraceClk_Pin     = 0x00040002;   // PE2
          __var TraceD0_Pin      = 0x00040003;   // PE3
          __var TraceD1_Pin      = 0x00040004;   // PE4
          __var TraceD2_Pin      = 0x00040005;   // PE5
          __var TraceD3_Pin      = 0x00040006;   // PE6
        </debugvars>

        <sequences>
          <sequence name="DebugDeviceUnlock"  info="SingleCore DeviceUnlock">
            <block>
              __var value = 0;

              Sequence("CheckID");

              __ap   = 2;                                         // Switch to System Debug Access Port

              value  = Read32(0xE00E1004);                        // Read DBGMCU_CR
              value |= 0x00670000;                                // set preset values (enable all debug clocks by default)
                                                                  // DBGMCU_CR[18] CKDBGD3EN, [17] CKDBGD2EN, [16] CKDBGD1EN
                                                                  // DBGMCU_CR[22] D3DBGCKEN, [21] D1DBGCKEN
            </block>

            <control if="__traceout"> <!-- Enable Trace Clock and hence access to global trace components now -->
              <block>
                value |= 0x00100000;                              // DBGMCU_CR[20] TRACECLKEN
              </block>
            </control>

            <block>
              Write32(0xE00E1004, value);                         // Update DBGMCU_CR
            </block>

            <block info="DbgMCU registers">
              Write32(0xE00E1004 , DbgMCU_CR        | value);     // DBGMCU_CR:       Configure MCU Debug
              Write32(0xE00E1034 , DbgMCU_APB3_Fz1         );     // DBGMCU_APB3FZ1:  Configure APB3 peripheral freeze behavior
              Write32(0xE00E103C , DbgMCU_APB1L_Fz1        );     // DBGMCU_APB1LFZ1: Configure APB1L peripheral freeze behavior
              Write32(0xE00E104C , DbgMCU_APB2_Fz1         );     // DBGMCU_APB2FZ1:  Configure APB2 peripheral freeze behavior
              Write32(0xE00E1054 , DbgMCU_APB4_Fz1         );     // DBGMCU_APB4FZ1:  Configure APB4 peripheral freeze behavior
            </block>
          </sequence>
        </sequences>

        <algorithm name="CMSIS/Flash/STM32H7x_128k.FLM"            start="0x08000000" size="0x00020000" default="1"/>

        <memory    name="DTCMRAM"  access="rwx"  id="IRAM1"        start="0x20000000" size="0x00020000" default="1" init="0"/>
        <memory    name="RAM_D1"   access="rwx"  id="IRAM2"        start="0x24000000" size="0x00080000" default="1" init="0"/>
        <memory    name="RAM_D2"   access="rwx"                    start="0x30000000" size="0x00048000" default="1" init="0"/>
        <memory    name="RAM_D3"   access="rwx"                    start="0x38000000" size="0x00010000" default="1" init="0"/>
     <!--memory    name="ITCMRAM"  access="rwx"                    start="0x00000000" size="0x00010000" default="1" init="0"/-->

        <!-- *************************  Device 'STM32H750IBKx' ***************************** -->
        <device Dname="STM32H750IBKx">
          <memory name="FLASH_Bank1" access="rx" id="IROM1" start="0x08000000" size="0x00020000" default="1" startup="1"/> <!-- Same as STM32H753IIKx + ROMLess -->

          <feature type="BGA" n="176"/>
        </device>

        <!-- *************************  Device 'STM32H750VBTx' ***************************** -->
        <device Dname="STM32H750VBTx">
          <memory name="FLASH_Bank1" access="rx" id="IROM1" start="0x08000000" size="0x00020000" default="1" startup="1"/> <!-- Same as STM32H753VITx + ROMLess -->

          <feature type="QFP" n="100"/>
        </device>

        <!-- *************************  Device 'STM32H750XBHx' ***************************** -->
        <device Dname="STM32H750XBHx">
          <memory name="FLASH_Bank1" access="rx" id="IROM1" start="0x08000000" size="0x00020000" default="1" startup="1"/> <!-- Same as STM32H753XIHx + ROMLess -->

          <feature type="BGA" n="240"/>
        </device>
      </subFamily>

      <!-- ************************  Subfamily 'STM32H745' Dual Core  ****************** -->
      <subFamily DsubFamily="STM32H745">
        <processor Pname="CM7" Dcore="Cortex-M7" DcoreVersion="r0p1" Dmpu="MPU" Dfpu="DP_FPU" Dendian="Little-endian" Dclock="480000000"/>
        <processor Pname="CM4" Dcore="Cortex-M4" DcoreVersion="r0p1" Dmpu="MPU" Dfpu="SP_FPU" Dendian="Little-endian" Dclock="240000000"/>
        <debug Pname="CM7"  __ap="0" svd="CMSIS/SVD/STM32H7x5_CM4.svd"/>
        <debug Pname="CM4"  __ap="3" svd="CMSIS/SVD/STM32H7x5_CM7.svd"/>
        <compile Pname="CM7" header="Drivers/CMSIS/Device/ST/STM32H7xx/Include/stm32h7xx.h" define="STM32H745xx" Pdefine="CORE_CM7"/>
        <compile Pname="CM4" header="Drivers/CMSIS/Device/ST/STM32H7xx/Include/stm32h7xx.h" define="STM32H745xx" Pdefine="CORE_CM4"/>

        <book Pname="CM7" name="Documentation/DUI0646B_cortex_m7_dgug.pdf" title="Cortex-M7 Generic User Guide"/>
        <book Pname="CM4" name="Documentation/DUI0553B_cortex_m4_dgug.pdf" title="Cortex-M4 Generic User Guide"/>
        <book             name="Documentation/DM00176879.pdf" title="STM32H745/755 and STM32H747/757 Reference Manual"/>
        <book             name="Documentation/DM00600954.pdf" title="STM32H745xI/G Data Sheet"/>

        <description>
          The STM32H745 devices are dual processor devices:
        </description>
        <description Pname="CM7">
          32-bit Arm Cortex-M7 core with doubleprecision FPU and L1 cache: 16 Kbytes of data and 16 Kbytes of instruction cache;
          frequency up to 480 MHz, MPU, 1027 DMIPS/2.14 DMIPS/MHz (Dhrystone 2.1), and DSP instructions.
        </description>
        <description Pname="CM4">
          32-bit Arm 32-bit Cortex-M4 core with FPU, Adaptive real-time accelerator (ART Accelerator) for internal Flash memory and external memories,
          frequency up to 240 MHz, MPU, 300 DMIPS/1.25 DMIPS/MHz (Dhrystone 2.1), and DSP instructions.
        </description>

        <debugvars configfile="CMSIS/Debug/STM32H745_747_755_757.dbgconf" version="1.1.0">
          // Debug Access Variables, can be modified by user via copies of DBGCONF files as created by uVision. Also see sub-family level.
          __var DbgMCU_CR        = 0x00000007;   // DBGMCU_CR:       DBGMCU configuration register
                                                 //                  [ 8] DBGSTBY_D3, [ 7] DBGSTOP_D3
                                                 //                  [ 5] DBGSTBY_D2, [ 4] DBGSTOP_D2,  [ 3] DBGSLEEP_D2
                                                 //                  [ 2] DBGSTBY_D1, [ 1] DBGSTOP_D1,  [ 0] DBGSLEEP_D1
          __var DbgMCU_APB3_Fz1  = 0x00000000;   // DBGMCU_APB3FZ1:  DBGMCU CPU1 APB3 peripheral freeze register
          __var DbgMCU_APB3_Fz2  = 0x00000000;   // DBGMCU_APB3FZ2:  DBGMCU CPU2 APB3 peripheral freeze register
          __var DbgMCU_APB1L_Fz1 = 0x00000000;   // DBGMCU_APB1LFZ1: DBGMCU CPU1 APB1L peripheral freeze register
          __var DbgMCU_APB1L_Fz2 = 0x00000000;   // DBGMCU_APB1LFZ2: DBGMCU CPU2 APB1L peripheral freeze register
          __var DbgMCU_APB2_Fz1  = 0x00000000;   // DBGMCU_APB2FZ1:  DBGMCU CPU1 APB2 peripheral freeze register
          __var DbgMCU_APB2_Fz2  = 0x00000000;   // DBGMCU_APB2FZ2:  DBGMCU CPU2 APB2 peripheral freeze register
          __var DbgMCU_APB4_Fz1  = 0x00000000;   // DBGMCU_APB4FZ1:  DBGMCU CPU1 APB4 peripheral freeze register
          __var DbgMCU_APB4_Fz2  = 0x00000000;   // DBGMCU_APB4FZ2:  DBGMCU CPU2 APB4 peripheral freeze register

          __var TraceClk_Pin     = 0x00040002;   // PE2
          __var TraceD0_Pin      = 0x00040003;   // PE3
          __var TraceD1_Pin      = 0x00040004;   // PE4
          __var TraceD2_Pin      = 0x00040005;   // PE5
          __var TraceD3_Pin      = 0x00040006;   // PE6
        </debugvars>

        <sequences>
          <sequence name="DebugDeviceUnlock"  info="SingleCore DeviceUnlock">
            <block>
              __var value = 0;

              Sequence("CheckID");

              __ap   = 2;                                         // Switch to System Debug Access Port

              value  = Read32(0xE00E1004);                        // Read DBGMCU_CR
              value |= 0x00670000;                                // set preset values (enable all debug clocks by default)
                                                                  // DBGMCU_CR[18] CKDBGD3EN, [17] CKDBGD2EN, [16] CKDBGD1EN
                                                                  // DBGMCU_CR[22] D3DBGCKEN, [21] D1DBGCKEN
            </block>

            <control if="__traceout"> <!-- Enable Trace Clock and hence access to global trace components now -->
              <block>
                value |= 0x00100000;                              // DBGMCU_CR[20] TRACECLKEN
              </block>
            </control>

            <block>
              Write32(0xE00E1004, value);                         // Update DBGMCU_CR
            </block>

            <block info="DbgMCU registers">
              Write32(0xE00E1004 , DbgMCU_CR        | value);     // DBGMCU_CR:       Configure MCU Debug
              Write32(0xE00E1034 , DbgMCU_APB3_Fz1         );     // DBGMCU_APB3FZ1:  Configure CPU1 APB3 peripheral freeze behavior
              Write32(0xE00E1038 , DbgMCU_APB3_Fz2         );     // DBGMCU_APB3FZ2:  Configure CPU2 APB3 peripheral freeze register
              Write32(0xE00E103C , DbgMCU_APB1L_Fz1        );     // DBGMCU_APB1LFZ1: Configure CPU1 APB1L peripheral freeze behavior
              Write32(0xE00E1040 , DbgMCU_APB1L_Fz2        );     // DBGMCU_APB1LFZ2: Configure CPU2 APB1L peripheral freeze register
              Write32(0xE00E104C , DbgMCU_APB2_Fz1         );     // DBGMCU_APB2FZ1:  Configure CPU1 APB2 peripheral freeze behavior
              Write32(0xE00E1050 , DbgMCU_APB2_Fz2         );     // DBGMCU_APB2FZ2:  Configure CPU2 APB2 peripheral freeze register
              Write32(0xE00E1054 , DbgMCU_APB4_Fz1         );     // DBGMCU_APB4FZ1:  Configure CPU1 APB4 peripheral freeze behavior
              Write32(0xE00E1058 , DbgMCU_APB4_Fz2         );     // DBGMCU_APB4FZ2:  Configure CPU2 APB4 peripheral freeze register
            </block>
          </sequence>
        </sequences>

        <algorithm Pname="CM7" name="CMSIS/Flash/STM32H7x_2048.FLM"                 start="0x08000000" size="0x00200000" RAMstart="0x20000000" RAMsize="0x8000" default="1" />
        <algorithm Pname="CM4" name="CMSIS/Flash/STM32H7x_2048.FLM"                 start="0x08000000" size="0x00200000" RAMstart="0x10000000" RAMsize="0x8000" default="1" />

        <memory Pname="CM7" name="DTCMRAM"  access="rw" id="IRAM1"         start="0x20000000" size="0x00020000" default="1" init="0"/>
        <memory Pname="CM7" name="RAM_D1"   access="rw" id="IRAM2"         start="0x24000000" size="0x00080000" default="1" init="0"/>
        <memory Pname="CM7" name="RAM_D3"   access="rw"                    start="0x38000000" size="0x00010000" default="1" init="0"/>
     <!--memory Pname="CM7" name="ITCMRAM"  access="rw"                    start="0x00000000" size="0x00010000" default="1" init="0"/-->

        <memory Pname="CM4" name="RAM_D2"   access="rw" id="IRAM1"         start="0x10000000" size="0x00048000" default="1" init="0"/>

        <!-- *************************  Device 'STM32H745BGTx'  ***************************** -->
        <device Dname="STM32H745BGTx">
          <memory Pname="CM7" name="FLASH_Bank1" access="rx" id="IROM1" start="0x08000000" size="0x00080000" default="1" startup="1"/>
          <memory Pname="CM4" name="FLASH_Bank2" access="rx" id="IROM1" start="0x08100000" size="0x00080000" default="1" startup="1"/>

          <feature type="QFP" n="208"/>
        </device>

        <!-- *************************  Device 'STM32H745BITx'  ***************************** -->
        <device Dname="STM32H745BITx">
          <memory Pname="CM7" name="FLASH_Bank1" access="rx" id="IROM1" start="0x08000000" size="0x00100000" default="1" startup="1"/>
          <memory Pname="CM4" name="FLASH_Bank2" access="rx" id="IROM1" start="0x08100000" size="0x00100000" default="1" startup="1"/>

          <feature type="QFP" n="208"/>
        </device>

        <!-- *************************  Device 'STM32H745IGKx'  ***************************** -->
        <device Dname="STM32H745IGKx">
          <memory Pname="CM7" name="FLASH_Bank1" access="rx" id="IROM1" start="0x08000000" size="0x00080000" default="1" startup="1"/>
          <memory Pname="CM4" name="FLASH_Bank2" access="rx" id="IROM1" start="0x08100000" size="0x00080000" default="1" startup="1"/>

          <feature type="BGA" n="176"/>
        </device>

        <!-- *************************  Device 'STM32H745IGTx'  ***************************** -->
        <device Dname="STM32H745IGTx">
          <memory Pname="CM7" name="FLASH_Bank1" access="rx" id="IROM1" start="0x08000000" size="0x00080000" default="1" startup="1"/>
          <memory Pname="CM4" name="FLASH_Bank2" access="rx" id="IROM1" start="0x08100000" size="0x00080000" default="1" startup="1"/>

          <feature type="QFP" n="176"/>
        </device>

        <!-- *************************  Device 'STM32H745IIKx'  ***************************** -->
        <device Dname="STM32H745IIKx">
          <memory Pname="CM7" name="FLASH_Bank1" access="rx" id="IROM1" start="0x08000000" size="0x00100000" default="1" startup="1"/>
          <memory Pname="CM4" name="FLASH_Bank2" access="rx" id="IROM1" start="0x08100000" size="0x00100000" default="1" startup="1"/>

          <feature type="BGA" n="176"/>
        </device>

        <!-- *************************  Device 'STM32H745IITx'  ***************************** -->
        <device Dname="STM32H745IITx">
          <memory Pname="CM7" name="FLASH_Bank1" access="rx" id="IROM1" start="0x08000000" size="0x00100000" default="1" startup="1"/>
          <memory Pname="CM4" name="FLASH_Bank2" access="rx" id="IROM1" start="0x08100000" size="0x00100000" default="1" startup="1"/>

          <feature type="QFP" n="176"/>
        </device>

        <!-- *************************  Device 'STM32H745XGHx'  ***************************** -->
        <device Dname="STM32H745XGHx">
          <memory Pname="CM7" name="FLASH_Bank1" access="rx" id="IROM1" start="0x08000000" size="0x00080000" default="1" startup="1"/>
          <memory Pname="CM4" name="FLASH_Bank2" access="rx" id="IROM1" start="0x08100000" size="0x00080000" default="1" startup="1"/>

          <feature type="BGA" n="240"/>
        </device>

        <!-- *************************  Device 'STM32H745XIHx'  ***************************** -->
        <device Dname="STM32H745XIHx">
          <memory Pname="CM7" name="FLASH_Bank1" access="rx" id="IROM1" start="0x08000000" size="0x00100000" default="1" startup="1"/>
          <memory Pname="CM4" name="FLASH_Bank2" access="rx" id="IROM1" start="0x08100000" size="0x00100000" default="1" startup="1"/>

          <feature type="BGA" n="240"/>
        </device>

        <!-- *************************  Device 'STM32H745ZGTx'  ***************************** -->
        <device Dname="STM32H745ZGTx">
          <memory Pname="CM7" name="FLASH_Bank1" access="rx" id="IROM1" start="0x08000000" size="0x00080000" default="1" startup="1"/>
          <memory Pname="CM4" name="FLASH_Bank2" access="rx" id="IROM1" start="0x08100000" size="0x00080000" default="1" startup="1"/>

          <feature type="QFP" n="144"/>
        </device>

        <!-- *************************  Device 'STM32H745ZITx'  ***************************** -->
        <device Dname="STM32H745ZITx">
          <memory Pname="CM7" name="FLASH_Bank1" access="rx" id="IROM1" start="0x08000000" size="0x00100000" default="1" startup="1"/>
          <memory Pname="CM4" name="FLASH_Bank2" access="rx" id="IROM1" start="0x08100000" size="0x00100000" default="1" startup="1"/>

          <feature type="QFP" n="144"/>
        </device>
      </subFamily>

      <!-- ************************  Subfamily 'STM32H755' Dual Core  ****************** -->
      <subFamily DsubFamily="STM32H755">
        <processor Pname="CM7" Dcore="Cortex-M7" DcoreVersion="r0p1" Dmpu="MPU" Dfpu="DP_FPU" Dendian="Little-endian" Dclock="480000000"/>
        <processor Pname="CM4" Dcore="Cortex-M4" DcoreVersion="r0p1" Dmpu="MPU" Dfpu="SP_FPU" Dendian="Little-endian" Dclock="240000000"/>
        <debug Pname="CM7"  __ap="0" svd="CMSIS/SVD/STM32H7x5_CM4.svd"/>
        <debug Pname="CM4"  __ap="3" svd="CMSIS/SVD/STM32H7x5_CM7.svd"/>
        <compile Pname="CM7" header="Drivers/CMSIS/Device/ST/STM32H7xx/Include/stm32h7xx.h" define="STM32H755xx" Pdefine="CORE_CM7"/>
        <compile Pname="CM4" header="Drivers/CMSIS/Device/ST/STM32H7xx/Include/stm32h7xx.h" define="STM32H755xx" Pdefine="CORE_CM4"/>

        <book Pname="CM7" name="Documentation/DUI0646B_cortex_m7_dgug.pdf" title="Cortex-M7 Generic User Guide"/>
        <book Pname="CM4" name="Documentation/DUI0553B_cortex_m4_dgug.pdf" title="Cortex-M4 Generic User Guide"/>
        <book             name="Documentation/DM00176879.pdf" title="STM32H745/755 and STM32H747/757 Reference Manual"/>
        <book             name="Documentation/DM00600522.pdf" title="STM32H755xI Data Sheet"/>

        <description>
          The STM32H755 devices are dual processor devices:
        </description>
        <description Pname="CM7">
          32-bit Arm Cortex-M7 core with doubleprecision FPU and L1 cache: 16 Kbytes of data and 16 Kbytes of instruction cache;
          frequency up to 480 MHz, MPU, 1027 DMIPS/2.14 DMIPS/MHz (Dhrystone 2.1), and DSP instructions.
        </description>
        <description Pname="CM4">
          32-bit Arm 32-bit Cortex-M4 core with FPU, Adaptive real-time accelerator (ART Accelerator) for internal Flash memory and external memories,
          frequency up to 240 MHz, MPU, 300 DMIPS/1.25 DMIPS/MHz (Dhrystone 2.1), and DSP instructions.
        </description>

        <debugvars configfile="CMSIS/Debug/STM32H745_747_755_757.dbgconf" version="1.1.0">
          // Debug Access Variables, can be modified by user via copies of DBGCONF files as created by uVision. Also see sub-family level.
          __var DbgMCU_CR        = 0x00000007;   // DBGMCU_CR:       DBGMCU configuration register
                                                 //                  [ 8] DBGSTBY_D3, [ 7] DBGSTOP_D3
                                                 //                  [ 5] DBGSTBY_D2, [ 4] DBGSTOP_D2,  [ 3] DBGSLEEP_D2
                                                 //                  [ 2] DBGSTBY_D1, [ 1] DBGSTOP_D1,  [ 0] DBGSLEEP_D1
          __var DbgMCU_APB3_Fz1  = 0x00000000;   // DBGMCU_APB3FZ1:  DBGMCU CPU1 APB3 peripheral freeze register
          __var DbgMCU_APB3_Fz2  = 0x00000000;   // DBGMCU_APB3FZ2:  DBGMCU CPU2 APB3 peripheral freeze register
          __var DbgMCU_APB1L_Fz1 = 0x00000000;   // DBGMCU_APB1LFZ1: DBGMCU CPU1 APB1L peripheral freeze register
          __var DbgMCU_APB1L_Fz2 = 0x00000000;   // DBGMCU_APB1LFZ2: DBGMCU CPU2 APB1L peripheral freeze register
          __var DbgMCU_APB2_Fz1  = 0x00000000;   // DBGMCU_APB2FZ1:  DBGMCU CPU1 APB2 peripheral freeze register
          __var DbgMCU_APB2_Fz2  = 0x00000000;   // DBGMCU_APB2FZ2:  DBGMCU CPU2 APB2 peripheral freeze register
          __var DbgMCU_APB4_Fz1  = 0x00000000;   // DBGMCU_APB4FZ1:  DBGMCU CPU1 APB4 peripheral freeze register
          __var DbgMCU_APB4_Fz2  = 0x00000000;   // DBGMCU_APB4FZ2:  DBGMCU CPU2 APB4 peripheral freeze register

          __var TraceClk_Pin     = 0x00040002;   // PE2
          __var TraceD0_Pin      = 0x00040003;   // PE3
          __var TraceD1_Pin      = 0x00040004;   // PE4
          __var TraceD2_Pin      = 0x00040005;   // PE5
          __var TraceD3_Pin      = 0x00040006;   // PE6
        </debugvars>

        <sequences>
          <sequence name="DebugDeviceUnlock"  info="SingleCore DeviceUnlock">
            <block>
              __var value = 0;

              Sequence("CheckID");

              __ap   = 2;                                         // Switch to System Debug Access Port

              value  = Read32(0xE00E1004);                        // Read DBGMCU_CR
              value |= 0x00670000;                                // set preset values (enable all debug clocks by default)
                                                                  // DBGMCU_CR[18] CKDBGD3EN, [17] CKDBGD2EN, [16] CKDBGD1EN
                                                                  // DBGMCU_CR[22] D3DBGCKEN, [21] D1DBGCKEN
            </block>

            <control if="__traceout"> <!-- Enable Trace Clock and hence access to global trace components now -->
              <block>
                value |= 0x00100000;                              // DBGMCU_CR[20] TRACECLKEN
              </block>
            </control>

            <block>
              Write32(0xE00E1004, value);                         // Update DBGMCU_CR
            </block>

            <block info="DbgMCU registers">
              Write32(0xE00E1004 , DbgMCU_CR        | value);     // DBGMCU_CR:       Configure MCU Debug
              Write32(0xE00E1034 , DbgMCU_APB3_Fz1         );     // DBGMCU_APB3FZ1:  Configure CPU1 APB3 peripheral freeze behavior
              Write32(0xE00E1038 , DbgMCU_APB3_Fz2         );     // DBGMCU_APB3FZ2:  Configure CPU2 APB3 peripheral freeze register
              Write32(0xE00E103C , DbgMCU_APB1L_Fz1        );     // DBGMCU_APB1LFZ1: Configure CPU1 APB1L peripheral freeze behavior
              Write32(0xE00E1040 , DbgMCU_APB1L_Fz2        );     // DBGMCU_APB1LFZ2: Configure CPU2 APB1L peripheral freeze register
              Write32(0xE00E104C , DbgMCU_APB2_Fz1         );     // DBGMCU_APB2FZ1:  Configure CPU1 APB2 peripheral freeze behavior
              Write32(0xE00E1050 , DbgMCU_APB2_Fz2         );     // DBGMCU_APB2FZ2:  Configure CPU2 APB2 peripheral freeze register
              Write32(0xE00E1054 , DbgMCU_APB4_Fz1         );     // DBGMCU_APB4FZ1:  Configure CPU1 APB4 peripheral freeze behavior
              Write32(0xE00E1058 , DbgMCU_APB4_Fz2         );     // DBGMCU_APB4FZ2:  Configure CPU2 APB4 peripheral freeze register
            </block>
          </sequence>
        </sequences>

        <algorithm Pname="CM7" name="CMSIS/Flash/STM32H7x_2048.FLM"        start="0x08000000" size="0x00200000" RAMstart="0x20000000" RAMsize="0x8000" default="1" />
        <algorithm Pname="CM4" name="CMSIS/Flash/STM32H7x_2048.FLM"        start="0x08000000" size="0x00200000" RAMstart="0x10000000" RAMsize="0x8000" default="1" />

        <memory Pname="CM7" name="DTCMRAM"  access="rw" id="IRAM1"         start="0x20000000" size="0x00020000" default="1" init="0"/>
        <memory Pname="CM7" name="RAM_D1"   access="rw" id="IRAM2"         start="0x24000000" size="0x00080000" default="1" init="0"/>
        <memory Pname="CM7" name="RAM_D3"   access="rw"                    start="0x38000000" size="0x00010000" default="1" init="0"/>
     <!--memory Pname="CM7" name="ITCMRAM"  access="rw"                    start="0x00000000" size="0x00010000" default="1" init="0"/-->

        <memory Pname="CM4" name="RAM_D2"   access="rw" id="IRAM1"         start="0x10000000" size="0x00030000" default="1" init="0"/>
        <memory Pname="CM4" name="RAM_D2S3" access="rw" id="IRAM2"         start="0x10040000" size="0x00008000" default="1" init="0"/>

        <!-- *************************  Device 'STM32H755BITx'  ***************************** -->
        <device Dname="STM32H755BITx">
          <memory Pname="CM7" name="FLASH_Bank1" access="rx" id="IROM1" start="0x08000000" size="0x00100000" default="1" startup="1"/>
          <memory Pname="CM4" name="FLASH_Bank2" access="rx" id="IROM1" start="0x08100000" size="0x00100000" default="1" startup="1"/>

          <feature type="QFP" n="208"/>
        </device>

        <!-- *************************  Device 'STM32H755IIKx'  ***************************** -->
        <device Dname="STM32H755IIKx">
          <memory Pname="CM7" name="FLASH_Bank1" access="rx" id="IROM1" start="0x08000000" size="0x00100000" default="1" startup="1"/>
          <memory Pname="CM4" name="FLASH_Bank2" access="rx" id="IROM1" start="0x08100000" size="0x00100000" default="1" startup="1"/>

          <feature type="BGA" n="176"/>
        </device>

        <!-- *************************  Device 'STM32H755IITx'  ***************************** -->
        <device Dname="STM32H755IITx">
          <memory Pname="CM7" name="FLASH_Bank1" access="rx" id="IROM1" start="0x08000000" size="0x00100000" default="1" startup="1"/>
          <memory Pname="CM4" name="FLASH_Bank2" access="rx" id="IROM1" start="0x08100000" size="0x00100000" default="1" startup="1"/>

          <feature type="QFP" n="176"/>
        </device>

        <!-- *************************  Device 'STM32H755XIHx'  ***************************** -->
        <device Dname="STM32H755XIHx">
          <memory Pname="CM7" name="FLASH_Bank1" access="rx" id="IROM1" start="0x08000000" size="0x00100000" default="1" startup="1"/>
          <memory Pname="CM4" name="FLASH_Bank2" access="rx" id="IROM1" start="0x08100000" size="0x00100000" default="1" startup="1"/>

          <feature type="BGA" n="240"/>
        </device>

        <!-- *************************  Device 'STM32H755ZITx'  ***************************** -->
        <device Dname="STM32H755ZITx">
          <memory Pname="CM7" name="FLASH_Bank1" access="rx" id="IROM1" start="0x08000000" size="0x00100000" default="1" startup="1"/>
          <memory Pname="CM4" name="FLASH_Bank2" access="rx" id="IROM1" start="0x08100000" size="0x00100000" default="1" startup="1"/>

          <feature type="QFP" n="144"/>
        </device>
      </subFamily>

      <!-- ************************  Subfamily 'STM32H747' Dual Core  ****************** -->
      <subFamily DsubFamily="STM32H747">
        <processor Pname="CM7" Dcore="Cortex-M7" DcoreVersion="r0p1" Dmpu="MPU" Dfpu="DP_FPU" Dendian="Little-endian" Dclock="480000000"/>
        <processor Pname="CM4" Dcore="Cortex-M4" DcoreVersion="r0p1" Dmpu="MPU" Dfpu="SP_FPU" Dendian="Little-endian" Dclock="240000000"/>
        <debug Pname="CM7"  __ap="0" svd="CMSIS/SVD/STM32H7x7_CM7.svd"/>
        <debug Pname="CM4"  __ap="3" svd="CMSIS/SVD/STM32H7x7_CM4.svd"/>
        <compile Pname="CM7" header="Drivers/CMSIS/Device/ST/STM32H7xx/Include/stm32h7xx.h" define="STM32H747xx" Pdefine="CORE_CM7"/>
        <compile Pname="CM4" header="Drivers/CMSIS/Device/ST/STM32H7xx/Include/stm32h7xx.h" define="STM32H747xx" Pdefine="CORE_CM4"/>

        <book Pname="CM7" name="Documentation/DUI0646B_cortex_m7_dgug.pdf" title="Cortex-M7 Generic User Guide"/>
        <book Pname="CM4" name="Documentation/DUI0553B_cortex_m4_dgug.pdf" title="Cortex-M4 Generic User Guide"/>
        <book             name="Documentation/DM00176879.pdf" title="STM32H745/755 and STM32H747/757 Reference Manual"/>
        <book             name="Documentation/DM00602212.pdf" title="STM32H747xI/G Data Sheet"/>

        <description>
          The STM32H747 devices are dual processor devices:
        </description>
        <description Pname="CM7">
          32-bit Arm Cortex-M7 core with doubleprecision FPU and L1 cache: 16 Kbytes of data and 16 Kbytes of instruction cache;
          frequency up to 480 MHz, MPU, 1027 DMIPS/2.14 DMIPS/MHz (Dhrystone 2.1), and DSP instructions.
        </description>
        <description Pname="CM4">
          32-bit Arm 32-bit Cortex-M4 core with FPU, Adaptive real-time accelerator (ART Accelerator) for internal Flash memory and external memories,
          frequency up to 240 MHz, MPU, 300 DMIPS/1.25 DMIPS/MHz (Dhrystone 2.1), and DSP instructions.
        </description>

        <debugvars configfile="CMSIS/Debug/STM32H745_747_755_757.dbgconf" version="1.1.0">
          // Debug Access Variables, can be modified by user via copies of DBGCONF files as created by uVision. Also see sub-family level.
          __var DbgMCU_CR        = 0x00000007;   // DBGMCU_CR:       DBGMCU configuration register
                                                 //                  [ 8] DBGSTBY_D3, [ 7] DBGSTOP_D3
                                                 //                  [ 5] DBGSTBY_D2, [ 4] DBGSTOP_D2,  [ 3] DBGSLEEP_D2
                                                 //                  [ 2] DBGSTBY_D1, [ 1] DBGSTOP_D1,  [ 0] DBGSLEEP_D1
          __var DbgMCU_APB3_Fz1  = 0x00000000;   // DBGMCU_APB3FZ1:  DBGMCU CPU1 APB3 peripheral freeze register
          __var DbgMCU_APB3_Fz2  = 0x00000000;   // DBGMCU_APB3FZ2:  DBGMCU CPU2 APB3 peripheral freeze register
          __var DbgMCU_APB1L_Fz1 = 0x00000000;   // DBGMCU_APB1LFZ1: DBGMCU CPU1 APB1L peripheral freeze register
          __var DbgMCU_APB1L_Fz2 = 0x00000000;   // DBGMCU_APB1LFZ2: DBGMCU CPU2 APB1L peripheral freeze register
          __var DbgMCU_APB2_Fz1  = 0x00000000;   // DBGMCU_APB2FZ1:  DBGMCU CPU1 APB2 peripheral freeze register
          __var DbgMCU_APB2_Fz2  = 0x00000000;   // DBGMCU_APB2FZ2:  DBGMCU CPU2 APB2 peripheral freeze register
          __var DbgMCU_APB4_Fz1  = 0x00000000;   // DBGMCU_APB4FZ1:  DBGMCU CPU1 APB4 peripheral freeze register
          __var DbgMCU_APB4_Fz2  = 0x00000000;   // DBGMCU_APB4FZ2:  DBGMCU CPU2 APB4 peripheral freeze register

          __var TraceClk_Pin     = 0x00040002;   // PE2
          __var TraceD0_Pin      = 0x00040003;   // PE3
          __var TraceD1_Pin      = 0x00040004;   // PE4
          __var TraceD2_Pin      = 0x00040005;   // PE5
          __var TraceD3_Pin      = 0x00040006;   // PE6
        </debugvars>

        <sequences>
          <sequence name="DebugDeviceUnlock"  info="SingleCore DeviceUnlock">
            <block>
              __var value = 0;

              Sequence("CheckID");

              __ap   = 2;                                         // Switch to System Debug Access Port

              value  = Read32(0xE00E1004);                        // Read DBGMCU_CR
              value |= 0x00670000;                                // set preset values (enable all debug clocks by default)
                                                                  // DBGMCU_CR[18] CKDBGD3EN, [17] CKDBGD2EN, [16] CKDBGD1EN
                                                                  // DBGMCU_CR[22] D3DBGCKEN, [21] D1DBGCKEN
            </block>

            <control if="__traceout"> <!-- Enable Trace Clock and hence access to global trace components now -->
              <block>
                value |= 0x00100000;                              // DBGMCU_CR[20] TRACECLKEN
              </block>
            </control>

            <block>
              Write32(0xE00E1004, value);                         // Update DBGMCU_CR
            </block>

            <block info="DbgMCU registers">
              Write32(0xE00E1004 , DbgMCU_CR        | value);     // DBGMCU_CR:       Configure MCU Debug
              Write32(0xE00E1034 , DbgMCU_APB3_Fz1         );     // DBGMCU_APB3FZ1:  Configure CPU1 APB3 peripheral freeze behavior
              Write32(0xE00E1038 , DbgMCU_APB3_Fz2         );     // DBGMCU_APB3FZ2:  Configure CPU2 APB3 peripheral freeze register
              Write32(0xE00E103C , DbgMCU_APB1L_Fz1        );     // DBGMCU_APB1LFZ1: Configure CPU1 APB1L peripheral freeze behavior
              Write32(0xE00E1040 , DbgMCU_APB1L_Fz2        );     // DBGMCU_APB1LFZ2: Configure CPU2 APB1L peripheral freeze register
              Write32(0xE00E104C , DbgMCU_APB2_Fz1         );     // DBGMCU_APB2FZ1:  Configure CPU1 APB2 peripheral freeze behavior
              Write32(0xE00E1050 , DbgMCU_APB2_Fz2         );     // DBGMCU_APB2FZ2:  Configure CPU2 APB2 peripheral freeze register
              Write32(0xE00E1054 , DbgMCU_APB4_Fz1         );     // DBGMCU_APB4FZ1:  Configure CPU1 APB4 peripheral freeze behavior
              Write32(0xE00E1058 , DbgMCU_APB4_Fz2         );     // DBGMCU_APB4FZ2:  Configure CPU2 APB4 peripheral freeze register
            </block>
          </sequence>
        </sequences>

        <algorithm Pname="CM7" name="CMSIS/Flash/STM32H7x_2048.FLM"        start="0x08000000" size="0x00200000" RAMstart="0x20000000" RAMsize="0x8000" default="1" />
        <algorithm Pname="CM4" name="CMSIS/Flash/STM32H7x_2048.FLM"        start="0x08000000" size="0x00200000" RAMstart="0x10000000" RAMsize="0x8000" default="1" />

        <memory Pname="CM7" name="DTCMRAM"  access="rw" id="IRAM1"         start="0x20000000" size="0x00020000" default="1" init="0"/>
        <memory Pname="CM7" name="RAM_D1"   access="rw" id="IRAM2"         start="0x24000000" size="0x00080000" default="1" init="0"/>
        <memory Pname="CM7" name="RAM_D3"   access="rw"                    start="0x38000000" size="0x00010000" default="1" init="0"/>
     <!--memory Pname="CM7" name="ITCMRAM"  access="rw"                    start="0x00000000" size="0x00010000" default="1" init="0"/-->

        <memory Pname="CM4"       id="IRAM1"         start="0x10000000" size="0x00048000" default="1" init="0"/>

        <!-- *************************  Device 'STM32H747AGIx'  ***************************** -->
        <device Dname="STM32H747AGIx">
          <memory Pname="CM7" name="FLASH_Bank1" access="rx" id="IROM1" start="0x08000000" size="0x00080000" default="1" startup="1"/>
          <memory Pname="CM4" name="FLASH_Bank2" access="rx" id="IROM1" start="0x08100000" size="0x00080000" default="1" startup="1"/>

          <feature type="BGA" n="169"/>
        </device>

        <!-- *************************  Device 'STM32H747AIIx'  ***************************** -->
        <device Dname="STM32H747AIIx">
          <memory Pname="CM7" name="FLASH_Bank1" access="rx" id="IROM1" start="0x08000000" size="0x00100000" default="1" startup="1"/>
          <memory Pname="CM4" name="FLASH_Bank2" access="rx" id="IROM1" start="0x08100000" size="0x00100000" default="1" startup="1"/>

          <feature type="BGA" n="169"/>
        </device>

        <!-- *************************  Device 'STM32H747BGTx'  ***************************** -->
        <device Dname="STM32H747BGTx">
          <memory Pname="CM7" name="FLASH_Bank1" access="rx" id="IROM1" start="0x08000000" size="0x00080000" default="1" startup="1"/>
          <memory Pname="CM4" name="FLASH_Bank2" access="rx" id="IROM1" start="0x08100000" size="0x00080000" default="1" startup="1"/>

          <feature type="QFP" n="208"/>
        </device>

        <!-- *************************  Device 'STM32H747BITx'  ***************************** -->
        <device Dname="STM32H747BITx">
          <memory Pname="CM7" name="FLASH_Bank1" access="rx" id="IROM1" start="0x08000000" size="0x00100000" default="1" startup="1"/>
          <memory Pname="CM4" name="FLASH_Bank2" access="rx" id="IROM1" start="0x08100000" size="0x00100000" default="1" startup="1"/>

          <feature type="QFP" n="208"/>
        </device>

        <!-- *************************  Device 'STM32H747IGTx'  ***************************** -->
        <device Dname="STM32H747IGTx">
          <memory Pname="CM7" name="FLASH_Bank1" access="rx" id="IROM1" start="0x08000000" size="0x00080000" default="1" startup="1"/>
          <memory Pname="CM4" name="FLASH_Bank2" access="rx" id="IROM1" start="0x08100000" size="0x00080000" default="1" startup="1"/>

          <feature type="QFP" n="176"/>
        </device>

        <!-- *************************  Device 'STM32H747IITx'  ***************************** -->
        <device Dname="STM32H747IITx">
          <memory Pname="CM7" name="FLASH_Bank1" access="rx" id="IROM1" start="0x08000000" size="0x00100000" default="1" startup="1"/>
          <memory Pname="CM4" name="FLASH_Bank2" access="rx" id="IROM1" start="0x08100000" size="0x00100000" default="1" startup="1"/>

          <feature type="QFP" n="176"/>
        </device>

        <!-- *************************  Device 'STM32H747XGHx'  ***************************** -->
        <device Dname="STM32H747XGHx">
          <memory Pname="CM7" name="FLASH_Bank1" access="rx" id="IROM1" start="0x08000000" size="0x00080000" default="1" startup="1"/>
          <memory Pname="CM4" name="FLASH_Bank2" access="rx" id="IROM1" start="0x08100000" size="0x00080000" default="1" startup="1"/>

          <feature type="BGA" n="240"/>
        </device>

        <!-- *************************  Device 'STM32H747XIHx'  ***************************** -->
        <device Dname="STM32H747XIHx">
          <memory Pname="CM7" name="FLASH_Bank1" access="rx" id="IROM1" start="0x08000000" size="0x00100000" default="1" startup="1"/>
          <memory Pname="CM4" name="FLASH_Bank2" access="rx" id="IROM1" start="0x08100000" size="0x00100000" default="1" startup="1"/>

          <feature type="BGA" n="240"/>
        </device>

        <!-- *************************  Device 'STM32H747ZIYx'  ***************************** -->
        <device Dname="STM32H747ZIYx">
          <memory Pname="CM7" name="FLASH_Bank1" access="rx" id="IROM1" start="0x08000000" size="0x00100000" default="1" startup="1"/>
          <memory Pname="CM4" name="FLASH_Bank2" access="rx" id="IROM1" start="0x08100000" size="0x00100000" default="1" startup="1"/>

          <feature type="CSP" n="156"/>
        </device>
      </subFamily>

      <!-- ************************  Subfamily 'STM32H757' Dual Core  ****************** -->
      <subFamily DsubFamily="STM32H757">
        <processor Pname="CM7" Dcore="Cortex-M7" DcoreVersion="r0p1" Dmpu="MPU" Dfpu="DP_FPU" Dendian="Little-endian" Dclock="480000000"/>
        <processor Pname="CM4" Dcore="Cortex-M4" DcoreVersion="r0p1" Dmpu="MPU" Dfpu="SP_FPU" Dendian="Little-endian" Dclock="240000000"/>
        <debug Pname="CM7"  __ap="0" svd="CMSIS/SVD/STM32H7x7_CM7.svd"/>
        <debug Pname="CM4"  __ap="3" svd="CMSIS/SVD/STM32H7x7_CM4.svd"/>
        <compile Pname="CM7" header="Drivers/CMSIS/Device/ST/STM32H7xx/Include/stm32h7xx.h" define="STM32H757xx" Pdefine="CORE_CM7"/>
        <compile Pname="CM4" header="Drivers/CMSIS/Device/ST/STM32H7xx/Include/stm32h7xx.h" define="STM32H757xx" Pdefine="CORE_CM4"/>

        <book Pname="CM7" name="Documentation/DUI0646B_cortex_m7_dgug.pdf" title="Cortex-M7 Generic User Guide"/>
        <book Pname="CM4" name="Documentation/DUI0553B_cortex_m4_dgug.pdf" title="Cortex-M4 Generic User Guide"/>
        <book             name="Documentation/DM00176879.pdf" title="STM32H745/755 and STM32H747/757 Reference Manual"/>
        <book             name="Documentation/DM00602265.pdf" title="STM32H757xI Data Sheet"/>

        <description>
          The STM32H757 devices are dual processor devices:
        </description>
        <description Pname="CM7">
          32-bit Arm Cortex-M7 core with doubleprecision FPU and L1 cache: 16 Kbytes of data and 16 Kbytes of instruction cache;
          frequency up to 480 MHz, MPU, 1027 DMIPS/2.14 DMIPS/MHz (Dhrystone 2.1), and DSP instructions.
        </description>
        <description Pname="CM4">
          32-bit Arm 32-bit Cortex-M4 core with FPU, Adaptive real-time accelerator (ART Accelerator) for internal Flash memory and external memories,
          frequency up to 240 MHz, MPU, 300 DMIPS/1.25 DMIPS/MHz (Dhrystone 2.1), and DSP instructions.
        </description>

        <debugvars configfile="CMSIS/Debug/STM32H745_747_755_757.dbgconf" version="1.1.0">
          // Debug Access Variables, can be modified by user via copies of DBGCONF files as created by uVision. Also see sub-family level.
          __var DbgMCU_CR        = 0x00000007;   // DBGMCU_CR:       DBGMCU configuration register
                                                 //                  [ 8] DBGSTBY_D3, [ 7] DBGSTOP_D3
                                                 //                  [ 5] DBGSTBY_D2, [ 4] DBGSTOP_D2,  [ 3] DBGSLEEP_D2
                                                 //                  [ 2] DBGSTBY_D1, [ 1] DBGSTOP_D1,  [ 0] DBGSLEEP_D1
          __var DbgMCU_APB3_Fz1  = 0x00000000;   // DBGMCU_APB3FZ1:  DBGMCU CPU1 APB3 peripheral freeze register
          __var DbgMCU_APB3_Fz2  = 0x00000000;   // DBGMCU_APB3FZ2:  DBGMCU CPU2 APB3 peripheral freeze register
          __var DbgMCU_APB1L_Fz1 = 0x00000000;   // DBGMCU_APB1LFZ1: DBGMCU CPU1 APB1L peripheral freeze register
          __var DbgMCU_APB1L_Fz2 = 0x00000000;   // DBGMCU_APB1LFZ2: DBGMCU CPU2 APB1L peripheral freeze register
          __var DbgMCU_APB2_Fz1  = 0x00000000;   // DBGMCU_APB2FZ1:  DBGMCU CPU1 APB2 peripheral freeze register
          __var DbgMCU_APB2_Fz2  = 0x00000000;   // DBGMCU_APB2FZ2:  DBGMCU CPU2 APB2 peripheral freeze register
          __var DbgMCU_APB4_Fz1  = 0x00000000;   // DBGMCU_APB4FZ1:  DBGMCU CPU1 APB4 peripheral freeze register
          __var DbgMCU_APB4_Fz2  = 0x00000000;   // DBGMCU_APB4FZ2:  DBGMCU CPU2 APB4 peripheral freeze register

          __var TraceClk_Pin     = 0x00040002;   // PE2
          __var TraceD0_Pin      = 0x00040003;   // PE3
          __var TraceD1_Pin      = 0x00040004;   // PE4
          __var TraceD2_Pin      = 0x00040005;   // PE5
          __var TraceD3_Pin      = 0x00040006;   // PE6
        </debugvars>

        <sequences>
          <sequence name="DebugDeviceUnlock"  info="SingleCore DeviceUnlock">
            <block>
              __var value = 0;

              Sequence("CheckID");

              __ap   = 2;                                         // Switch to System Debug Access Port

              value  = Read32(0xE00E1004);                        // Read DBGMCU_CR
              value |= 0x00670000;                                // set preset values (enable all debug clocks by default)
                                                                  // DBGMCU_CR[18] CKDBGD3EN, [17] CKDBGD2EN, [16] CKDBGD1EN
                                                                  // DBGMCU_CR[22] D3DBGCKEN, [21] D1DBGCKEN
            </block>

            <control if="__traceout"> <!-- Enable Trace Clock and hence access to global trace components now -->
              <block>
                value |= 0x00100000;                              // DBGMCU_CR[20] TRACECLKEN
              </block>
            </control>

            <block>
              Write32(0xE00E1004, value);                         // Update DBGMCU_CR
            </block>

            <block info="DbgMCU registers">
              Write32(0xE00E1004 , DbgMCU_CR        | value);     // DBGMCU_CR:       Configure MCU Debug
              Write32(0xE00E1034 , DbgMCU_APB3_Fz1         );     // DBGMCU_APB3FZ1:  Configure CPU1 APB3 peripheral freeze behavior
              Write32(0xE00E1038 , DbgMCU_APB3_Fz2         );     // DBGMCU_APB3FZ2:  Configure CPU2 APB3 peripheral freeze register
              Write32(0xE00E103C , DbgMCU_APB1L_Fz1        );     // DBGMCU_APB1LFZ1: Configure CPU1 APB1L peripheral freeze behavior
              Write32(0xE00E1040 , DbgMCU_APB1L_Fz2        );     // DBGMCU_APB1LFZ2: Configure CPU2 APB1L peripheral freeze register
              Write32(0xE00E104C , DbgMCU_APB2_Fz1         );     // DBGMCU_APB2FZ1:  Configure CPU1 APB2 peripheral freeze behavior
              Write32(0xE00E1050 , DbgMCU_APB2_Fz2         );     // DBGMCU_APB2FZ2:  Configure CPU2 APB2 peripheral freeze register
              Write32(0xE00E1054 , DbgMCU_APB4_Fz1         );     // DBGMCU_APB4FZ1:  Configure CPU1 APB4 peripheral freeze behavior
              Write32(0xE00E1058 , DbgMCU_APB4_Fz2         );     // DBGMCU_APB4FZ2:  Configure CPU2 APB4 peripheral freeze register
            </block>
          </sequence>
        </sequences>

        <algorithm Pname="CM7" name="CMSIS/Flash/STM32H7x_2048.FLM"                 start="0x08000000" size="0x00200000" RAMstart="0x20000000" RAMsize="0x8000" default="1" />
        <algorithm Pname="CM4" name="CMSIS/Flash/STM32H7x_2048.FLM"                 start="0x08000000" size="0x00200000" RAMstart="0x10000000" RAMsize="0x8000" default="1" />

        <memory Pname="CM7" name="DTCMRAM"  access="rw" id="IRAM1"         start="0x20000000" size="0x00020000" default="1" init="0"/>
        <memory Pname="CM7" name="RAM_D1"   access="rw" id="IRAM2"         start="0x24000000" size="0x00080000" default="1" init="0"/>
        <memory Pname="CM7" name="RAM_D3"   access="rw"                    start="0x38000000" size="0x00010000" default="1" init="0"/>
     <!--memory Pname="CM7" name="ITCMRAM"  access="rw"                    start="0x00000000" size="0x00010000" default="1" init="0"/-->

        <memory Pname="CM4" name="RAM_D2"   access="rw" id="IRAM1"         start="0x10000000" size="0x00030000" default="1" init="0"/>
        <memory Pname="CM4" name="RAM_D2S3" access="rw" id="IRAM2"         start="0x10040000" size="0x00008000" default="1" init="0"/>

        <!-- *************************  Device 'STM32H757AIIx'  ***************************** -->
        <device Dname="STM32H757AIIx">
          <memory Pname="CM7" name="FLASH_Bank1" access="rx" id="IROM1" start="0x08000000" size="0x00100000" default="1" startup="1"/>
          <memory Pname="CM4" name="FLASH_Bank2" access="rx" id="IROM1" start="0x08100000" size="0x00100000" default="1" startup="1"/>

          <feature type="BGA" n="169"/>
        </device>

        <!-- *************************  Device 'STM32H757BITx'  ***************************** -->
        <device Dname="STM32H757BITx">
          <memory Pname="CM7" name="FLASH_Bank1" access="rx" id="IROM1" start="0x08000000" size="0x00100000" default="1" startup="1"/>
          <memory Pname="CM4" name="FLASH_Bank2" access="rx" id="IROM1" start="0x08100000" size="0x00100000" default="1" startup="1"/>

          <feature type="QFP" n="208"/>
        </device>

        <!-- *************************  Device 'STM32H757IITx'  ***************************** -->
        <device Dname="STM32H757IITx">
          <memory Pname="CM7" name="FLASH_Bank1" access="rx" id="IROM1" start="0x08000000" size="0x00100000" default="1" startup="1"/>
          <memory Pname="CM4" name="FLASH_Bank2" access="rx" id="IROM1" start="0x08100000" size="0x00100000" default="1" startup="1"/>

          <feature type="QFP" n="176"/>
        </device>

        <!-- *************************  Device 'STM32H757XIHx'  ***************************** -->
        <device Dname="STM32H757XIHx">
          <memory Pname="CM7" name="FLASH_Bank1" access="rx" id="IROM1" start="0x08000000" size="0x00100000" default="1" startup="1"/>
          <memory Pname="CM4" name="FLASH_Bank2" access="rx" id="IROM1" start="0x08100000" size="0x00100000" default="1" startup="1"/>

          <feature type="BGA" n="240"/>
        </device>

        <!-- *************************  Device 'STM32H757ZIYx'  ***************************** -->
        <device Dname="STM32H757ZIYx">
          <memory Pname="CM7" name="FLASH_Bank1" access="rx" id="IROM1" start="0x08000000" size="0x00100000" default="1" startup="1"/>
          <memory Pname="CM4" name="FLASH_Bank2" access="rx" id="IROM1" start="0x08100000" size="0x00100000" default="1" startup="1"/>

          <feature type="CSP" n="156"/>
        </device>
      </subFamily>

    </family>

  </devices>

  <conditions>
    <!-- Core + Compiler Conditions -->
    <condition id="CM7_LE_ARMCC">
      <description>Cortex-M7 processor based device in little endian mode for the ARM Compiler</description>
      <require Dcore="Cortex-M7" Dfpu="NO_FPU" Dendian="Little-endian"/>
      <require Tcompiler="ARMCC"/>
    </condition>
    <condition id="CM7F_LE_ARMCC">
      <description>Cortex-M7 processor based device using Floating Point Unit in little endian mode for the ARM Compiler</description>
      <accept Dcore="Cortex-M7" Dfpu="SP_FPU" Dendian="Little-endian"/>
      <accept Dcore="Cortex-M7" Dfpu="DP_FPU" Dendian="Little-endian"/>
      <require Tcompiler="ARMCC"/>
    </condition>
    <condition id="CM7_LE_GCC">
      <description>Cortex-M7 processor based device in little endian mode for the GCC Compiler</description>
      <require Dcore="Cortex-M7" Dfpu="NO_FPU" Dendian="Little-endian"/>
      <require Tcompiler="GCC"/>
    </condition>
    <condition id="CM7F_LE_GCC">
      <description>Cortex-M7 processor based device using Floating Point Unit in little endian mode for the GCC Compiler</description>
      <accept Dcore="Cortex-M7" Dfpu="SP_FPU" Dendian="Little-endian"/>
      <accept Dcore="Cortex-M7" Dfpu="DP_FPU" Dendian="Little-endian"/>
      <require Tcompiler="GCC"/>
    </condition>
    <condition id="CM7_LE_IAR">
      <description>Cortex-M7 processor based device in little endian mode for the IAR Compiler</description>
      <require Dcore="Cortex-M7" Dfpu="NO_FPU" Dendian="Little-endian"/>
      <require Tcompiler="IAR"/>
    </condition>
    <condition id="CM7F_LE_IAR">
      <description>Cortex-M7 processor based device using Floating Point Unit in little endian mode for the IAR Compiler</description>
      <accept Dcore="Cortex-M7" Dfpu="SP_FPU" Dendian="Little-endian"/>
      <accept Dcore="Cortex-M7" Dfpu="DP_FPU" Dendian="Little-endian"/>
      <require Tcompiler="IAR"/>
    </condition>

    <!-- Device Conditions -->
    <condition id="STM32H7">
      <description>STMicroelectronics STM32H7 Series devices</description>
      <require Dvendor="STMicroelectronics:13" Dname="STM32H7*"/>
    </condition>
    <condition id="STM32H742">
      <description>STMicroelectronics STM32H742 Series devices</description>
      <require Dvendor="STMicroelectronics:13" Dname="STM32H742*"/>
    </condition>
    <condition id="STM32H743">
      <description>STMicroelectronics STM32H743 Series devices</description>
      <require Dvendor="STMicroelectronics:13" Dname="STM32H743*"/>
    </condition>
    <condition id="STM32H745">
      <description>STMicroelectronics STM32H745 Series devices</description>
      <require Dvendor="STMicroelectronics:13" Dname="STM32H745*"/>
    </condition>
    <condition id="STM32H747">
      <description>STMicroelectronics STM32H747 Series devices</description>
      <require Dvendor="STMicroelectronics:13" Dname="STM32H747*"/>
    </condition>
    <condition id="STM32H750">
      <description>STMicroelectronics STM32H750 Series devices</description>
      <require Dvendor="STMicroelectronics:13" Dname="STM32H750*"/>
    </condition>
    <condition id="STM32H753">
      <description>STMicroelectronics STM32H753 Series devices</description>
      <require Dvendor="STMicroelectronics:13" Dname="STM32H753*"/>
    </condition>
    <condition id="STM32H755">
      <description>STMicroelectronics STM32H755 Series devices</description>
      <require Dvendor="STMicroelectronics:13" Dname="STM32H755*"/>
    </condition>
    <condition id="STM32H757">
      <description>STMicroelectronics STM32H757 Series devices</description>
      <require Dvendor="STMicroelectronics:13" Dname="STM32H757*"/>
    </condition>
    <condition id="STM32H7_SC">
      <description>STMicroelectronics STM32H7 Single Core Series devices</description>
      <accept condition="STM32H742"/>
      <accept condition="STM32H743"/>
      <accept condition="STM32H750"/>
      <accept condition="STM32H753"/>
    </condition>
    <condition id="STM32H7_DC">
      <description>STMicroelectronics STM32H7 Dual Core Series devices</description>
      <accept condition="STM32H745"/>
      <accept condition="STM32H747"/>
      <accept condition="STM32H755"/>
      <accept condition="STM32H757"/>
    </condition>

    <!-- Device + Compiler Conditions -->
    <condition id="STM32H742_ARMCC">
      <description>filter for STM32H742 devices and the ARM compiler</description>
      <require condition="STM32H742"/>
      <require Tcompiler="ARMCC"/>
    </condition>
    <condition id="STM32H743_ARMCC">
      <description>filter for STM32H743 devices and the ARM compiler</description>
      <require condition="STM32H743"/>
      <require Tcompiler="ARMCC"/>
    </condition>
    <condition id="STM32H745_ARMCC">
      <description>filter for STM32H745 devices and the ARM compiler</description>
      <require condition="STM32H745"/>
      <require Tcompiler="ARMCC"/>
    </condition>
    <condition id="STM32H747_ARMCC">
      <description>filter for STM32H747 devices and the ARM compiler</description>
      <require condition="STM32H747"/>
      <require Tcompiler="ARMCC"/>
    </condition>
    <condition id="STM32H750_ARMCC">
      <description>filter for STM32H750 devices and the ARM compiler</description>
      <require condition="STM32H750"/>
      <require Tcompiler="ARMCC"/>
    </condition>
    <condition id="STM32H753_ARMCC">
      <description>filter for STM32H753 devices and the ARM compiler</description>
      <require condition="STM32H753"/>
      <require Tcompiler="ARMCC"/>
    </condition>
    <condition id="STM32H755_ARMCC">
      <description>filter for STM32H755 devices and the ARM compiler</description>
      <require condition="STM32H755"/>
      <require Tcompiler="ARMCC"/>
    </condition>
    <condition id="STM32H757_ARMCC">
      <description>filter for STM32H757 devices and the ARM compiler</description>
      <require condition="STM32H757"/>
      <require Tcompiler="ARMCC"/>
    </condition>

    <condition id="STM32H742_GCC">
      <description>filter for STM32H742 devices and the GCC compiler</description>
      <require condition="STM32H742"/>
      <require Tcompiler="GCC"/>
    </condition>
    <condition id="STM32H743_GCC">
      <description>filter for STM32H743 devices and the GCC compiler</description>
      <require condition="STM32H743"/>
      <require Tcompiler="GCC"/>
    </condition>
    <condition id="STM32H745_GCC">
      <description>filter for STM32H745 devices and the GCC compiler</description>
      <require condition="STM32H745"/>
      <require Tcompiler="GCC"/>
    </condition>
    <condition id="STM32H747_GCC">
      <description>filter for STM32H747 devices and the GCC compiler</description>
      <require condition="STM32H747"/>
      <require Tcompiler="GCC"/>
    </condition>
    <condition id="STM32H750_GCC">
      <description>filter for STM32H750 devices and the GCC compiler</description>
      <require condition="STM32H750"/>
      <require Tcompiler="GCC"/>
    </condition>
    <condition id="STM32H753_GCC">
      <description>filter for STM32H753 devices and the GCC compiler</description>
      <require condition="STM32H753"/>
      <require Tcompiler="GCC"/>
    </condition>
    <condition id="STM32H755_GCC">
      <description>filter for STM32H755 devices and the GCC compiler</description>
      <require condition="STM32H755"/>
      <require Tcompiler="GCC"/>
    </condition>
    <condition id="STM32H757_GCC">
      <description>filter for STM32H757 devices and the GCC compiler</description>
      <require condition="STM32H757"/>
      <require Tcompiler="GCC"/>
    </condition>

    <condition id="STM32H742_IAR">
      <description>filter for STM32H742 devices and the IAR compiler</description>
      <require condition="STM32H742"/>
      <require Tcompiler="IAR"/>
    </condition>
    <condition id="STM32H743_IAR">
      <description>filter for STM32H743 devices and the IAR compiler</description>
      <require condition="STM32H743"/>
      <require Tcompiler="IAR"/>
    </condition>
    <condition id="STM32H745_IAR">
      <description>filter for STM32H745 devices and the IAR compiler</description>
      <require condition="STM32H745"/>
      <require Tcompiler="IAR"/>
    </condition>
    <condition id="STM32H747_IAR">
      <description>filter for STM32H747 devices and the IAR compiler</description>
      <require condition="STM32H747"/>
      <require Tcompiler="IAR"/>
    </condition>
    <condition id="STM32H750_IAR">
      <description>filter for STM32H750 devices and the IAR compiler</description>
      <require condition="STM32H750"/>
      <require Tcompiler="IAR"/>
    </condition>
    <condition id="STM32H753_IAR">
      <description>filter for STM32H753 devices and the IAR compiler</description>
      <require condition="STM32H753"/>
      <require Tcompiler="IAR"/>
    </condition>
    <condition id="STM32H755_IAR">
      <description>filter for STM32H755 devices and the IAR compiler</description>
      <require condition="STM32H755"/>
      <require Tcompiler="IAR"/>
    </condition>
    <condition id="STM32H757_IAR">
      <description>filter for STM32H757 devices and the IAR compiler</description>
      <require condition="STM32H757"/>
      <require Tcompiler="IAR"/>
    </condition>

    <!-- Device + CMSIS Conditions -->
    <condition id="STM32H7 CMSIS">
      <description>STMicroelectronics STM32H7 Device and CMSIS-CORE</description>
      <require condition="STM32H7"/>
      <require Cclass="CMSIS" Cgroup="CORE"/>
      <require Cclass="Device" Cgroup="STM32Cube HAL" Csub="Common"/>
    </condition>

    <!-- HAL Conditions -->
    <condition id="STM32H7 HAL">
      <description>STMicroelectronics STM32H7 Device and HAL</description>
      <require condition="STM32H7"/>
      <require Cclass="Device" Cgroup="STM32Cube HAL" Csub="Common"/>
    </condition>
    <condition id="STM32H7 HAL Common">
      <description>STMicroelectronics STM32H7 Device and HAL Common</description>
      <require condition="STM32H7_SC"/>
      <require Cclass="CMSIS"  Cgroup="CORE"/>
      <require Cclass="Device" Cgroup="STM32Cube Framework"/>
      <require Cclass="Device" Cgroup="STM32Cube HAL" Csub="Common"/>
      <require Cclass="Device" Cgroup="STM32Cube HAL" Csub="Cortex"/>
      <require Cclass="Device" Cgroup="STM32Cube HAL" Csub="RCC"/>
      <require Cclass="Device" Cgroup="STM32Cube HAL" Csub="PWR"/>
    </condition>
    <condition id="STM32H7 HAL Common DC">
      <description>STMicroelectronics STM32H7 Device and HAL Common Dual Core</description>
      <require condition="STM32H7_DC"/>
      <require Cclass="CMSIS"  Cgroup="CORE"/>
      <require Cclass="Device" Cgroup="STM32Cube HAL" Csub="Common"/>
      <require Cclass="Device" Cgroup="STM32Cube HAL" Csub="Cortex"/>
      <require Cclass="Device" Cgroup="STM32Cube HAL" Csub="RCC"/>
      <require Cclass="Device" Cgroup="STM32Cube HAL" Csub="PWR"/>
    </condition>
    <condition id="STM32H7 HAL GPIO">
      <description>STMicroelectronics STM32H7 Device and HAL with GPIO</description>
      <require condition="STM32H7"/>
      <require Cclass="Device" Cgroup="STM32Cube HAL" Csub="Common"/>
      <require Cclass="Device" Cgroup="STM32Cube HAL" Csub="GPIO"/>
    </condition>
    <condition id="STM32H7 HAL DMA">
      <description>STMicroelectronics STM32H7 Device and HAL with DMA</description>
      <require condition="STM32H7"/>
      <require Cclass="Device" Cgroup="STM32Cube HAL" Csub="Common"/>
      <require Cclass="Device" Cgroup="STM32Cube HAL" Csub="DMA"/>
    </condition>
    <condition id="STM32H7 HAL DMA SPI">
      <description>STMicroelectronics STM32H7 Device and HAL with DMA, SPI</description>
      <require condition="STM32H7"/>
      <require Cclass="Device" Cgroup="STM32Cube HAL" Csub="Common"/>
      <require Cclass="Device" Cgroup="STM32Cube HAL" Csub="DMA"/>
      <require Cclass="Device" Cgroup="STM32Cube HAL" Csub="SPI"/>
    </condition>
    <condition id="STM32H7 HAL DMA UART">
      <description>STMicroelectronics STM32H7 Device and HAL with DMA, UART</description>
      <require condition="STM32H7"/>
      <require Cclass="Device" Cgroup="STM32Cube HAL" Csub="Common"/>
      <require Cclass="Device" Cgroup="STM32Cube HAL" Csub="DMA"/>
      <require Cclass="Device" Cgroup="STM32Cube HAL" Csub="UART"/>
    </condition>
    <condition id="STM32H7 HAL MDMA">
      <description>STMicroelectronics STM32H7 Device and HAL with MDMA</description>
      <require condition="STM32H7"/>
      <require Cclass="Device" Cgroup="STM32Cube HAL" Csub="Common"/>
      <require Cclass="Device" Cgroup="STM32Cube HAL" Csub="MDMA"/>
    </condition>
    <condition id="STM32H7 HAL GPIO ADC">
      <description>STMicroelectronics STM32H7 Device and HAL with GPIO, ADC</description>
      <require condition="STM32H7"/>
      <require Cclass="Device" Cgroup="STM32Cube HAL" Csub="Common"/>
      <require Cclass="Device" Cgroup="STM32Cube HAL" Csub="GPIO"/>
      <require Cclass="Device" Cgroup="STM32Cube HAL" Csub="ADC"/>
    </condition>
    <condition id="STM32H7 HAL LTDC DMA2D Graphics LCD_RGB">
      <description>STMicroelectronics STM32H7 Device and HAL with LTDC and DMA2D and Graphics with LCD (RGB IF)</description>
      <require condition="STM32H7"/>
      <require Cclass="Device" Cgroup="STM32Cube HAL" Csub="Common"/>
      <require Cclass="Device" Cgroup="STM32Cube HAL" Csub="LTDC"/>
      <require Cclass="Device" Cgroup="STM32Cube HAL" Csub="DMA2D"/>
      <require Cclass="Graphics"      Cgroup="CORE"/>
      <accept  Cclass="Board Support" Cgroup="emWin LCD" Cvariant="RGB IF"/>
    </condition>

    <!-- LL driver Conditions -->
    <condition id="STM32H7 LL">
      <description>STMicroelectronics STM32H7 Device and LL</description>
      <require condition="STM32H7"/>
      <require Cclass="Device" Cgroup="STM32Cube LL" Csub="Common"/>
    </condition>
    <condition id="STM32H7 LL Common">
      <description>STMicroelectronics STM32H7 Device and LL</description>
      <require condition="STM32H7"/>
      <require Cclass="CMSIS"  Cgroup="CORE"/>
      <require Cclass="Device" Cgroup="STM32Cube Framework"/>
      <require Cclass="Device" Cgroup="STM32Cube LL" Csub="UTILS"/>
      <require Cclass="Device" Cgroup="STM32Cube LL" Csub="RCC"/>
      <require Cclass="Device" Cgroup="STM32Cube LL" Csub="PWR"/>
    </condition>

    <!-- CMSIS Driver Conditions -->
    <condition id="STM32H7_SC CMSIS_Driver CAN">
      <description>Requirement for CMSIS CAN Driver</description>
      <require condition="STM32H7_SC"/>
      <require Cclass="CMSIS"  Cgroup="CORE"/>
    </condition>
    <condition id="STM32H7_SC CMSIS_Driver ETH">
      <description>Requirement for CMSIS EMAC Driver</description>
      <require condition="STM32H7_SC"/>
      <require Cclass="CMSIS"  Cgroup="CORE"/>
      <require Cclass="Device" Cgroup="STM32Cube HAL" Csub="ETH"/>
    </condition>
    <condition id="STM32H7_SC CMSIS_Driver I2C">
      <description>Requirement for CMSIS I2C Driver</description>
      <require condition="STM32H7_SC"/>
      <require Cclass="CMSIS"  Cgroup="CORE"/>
      <require Cclass="Device" Cgroup="STM32Cube HAL" Csub="I2C"/>
    </condition>
    <condition id="STM32H7_SC CMSIS_Driver MCI">
      <description>Requirement for CMSIS MCI Driver</description>
      <require condition="STM32H7_SC"/>
      <require Cclass="CMSIS"  Cgroup="CORE"/>
      <require Cclass="Device" Cgroup="STM32Cube HAL" Csub="RCC"/>
      <require Cclass="Device" Cgroup="STM32Cube HAL" Csub="GPIO"/>
    </condition>
    <condition id="STM32H7_SC CMSIS_Driver SPI">
      <description>Requirement for CMSIS SPI Driver</description>
      <require condition="STM32H7_SC"/>
      <require Cclass="CMSIS"  Cgroup="CORE"/>
      <require Cclass="Device" Cgroup="STM32Cube HAL" Csub="SPI"/>
    </condition>
    <condition id="STM32H7_SC CMSIS_Driver USART">
      <description>Requirement for CMSIS USART Driver</description>
      <require condition="STM32H7_SC"/>
      <require Cclass="CMSIS"  Cgroup="CORE"/>
      <require Cclass="Device" Cgroup="STM32Cube HAL" Csub="USART"/>
      <require Cclass="Device" Cgroup="STM32Cube HAL" Csub="UART"/>
      <require Cclass="Device" Cgroup="STM32Cube HAL" Csub="IRDA"/>
      <require Cclass="Device" Cgroup="STM32Cube HAL" Csub="Smartcard"/>
    </condition>
    <condition id="STM32H7_SC CMSIS_Driver USBD">
      <description>Requirement for CMSIS USB Device Driver</description>
      <require condition="STM32H7_SC"/>
      <require Cclass="CMSIS"  Cgroup="CORE"/>
      <require Cclass="Device" Cgroup="STM32Cube HAL" Csub="PCD"/>
    </condition>
    <condition id="STM32H7_SC CMSIS_Driver USBH">
      <description>Requirement for CMSIS USB Host Driver</description>
      <require condition="STM32H7_SC"/>
      <require Cclass="CMSIS"  Cgroup="CORE"/>
    </condition>

    <!-- STM32H743I-EVAL Board BSP Conditions -->
    <condition id="STM32H743I-EVAL LCD_RGB">
      <description>STMicroelectronics STM32H743I-EVAL LCD (RGB IF)</description>
      <require condition="STM32H7"/>
      <require Cclass="Device" Cgroup="STM32Cube HAL" Csub="Common"/>
      <require Cclass="Graphics Display" Cgroup="STM32H743I-EVAL" Cvariant="RGB IF"/>
    </condition>
    <condition id="STM32H743I-EVAL GLCD">
      <description>STMicroelectronics STM32H743I-EVAL GLCD</description>
      <require condition="STM32H7"/>
      <require Cclass="Device" Cgroup="STM32Cube HAL" Csub="Common"/>
      <require Cclass="Device" Cgroup="STM32Cube HAL" Csub="GPIO"/>
      <require Cclass="Device" Cgroup="STM32Cube HAL" Csub="LTDC"/>
      <require Cclass="Board Support" Cgroup="Drivers" Csub="SDRAM"/>
    </condition>
    <condition id="STM32H743I-EVAL TS">
      <description>STMicroelectronics STM32H743I-EVAL TS</description>
      <require condition="STM32H7"/>
      <require Cclass="Board Support" Cgroup="Drivers" Csub="Touch Screen"/>
    </condition>
    <condition id="STM32H743I-EVAL Joystick">
      <description>STMicroelectronics STM32H743I-EVAL Joystick</description>
      <require condition="STM32H7"/>
      <require Cclass="Board Support" Cgroup="Drivers" Csub="I/O"/>
    </condition>
    <condition id="STM32H743I-EVAL BSP">
      <description>STMicroelectronics STM32746G-EVAL BSP</description>
      <require condition="STM32H7"/>
      <require Cclass="Device" Cgroup="STM32Cube HAL" Csub="Common"/>
      <require Cclass="Device" Cgroup="STM32Cube HAL" Csub="GPIO"/>
      <require Cclass="Device" Cgroup="STM32Cube HAL" Csub="UART"/>
      <require Cclass="Device" Cgroup="STM32Cube HAL" Csub="I2C"/>
      <require Cclass="Device" Cgroup="STM32Cube HAL" Csub="ADC"/>
    </condition>
    <condition id="STM32H743I-EVAL BSP Audio">
      <description>STMicroelectronics STM32H743I-EVAL BSP Audio</description>
      <require condition="STM32H7"/>
      <require Cclass="Device" Cgroup="STM32Cube HAL" Csub="Common"/>
      <require Cclass="Device" Cgroup="STM32Cube HAL" Csub="GPIO"/>
      <require Cclass="Device" Cgroup="STM32Cube HAL" Csub="SAI"/>
      <require Cclass="Device" Cgroup="STM32Cube HAL" Csub="I2S"/>
      <require Cclass="Device" Cgroup="STM32Cube HAL" Csub="DMA"/>
      <require Cclass="Device" Cgroup="STM32Cube HAL" Csub="TIM"/>
      <require Cclass="Board Support" Cgroup="Drivers" Csub="Basic I/O"/>
    </condition>
    <condition id="STM32H743I-EVAL BSP EEPROM">
      <description>STMicroelectronics STM32H743I-EVAL BSP EEPROM</description>
      <require condition="STM32H7"/>
      <require Cclass="Board Support" Cgroup="Drivers" Csub="Basic I/O"/>
    </condition>
    <condition id="STM32H743I-EVAL BSP IO">
      <description>STMicroelectronics STM32H743I-EVAL BSP IO</description>
      <require condition="STM32H7"/>
      <require Cclass="Board Support" Cgroup="Drivers" Csub="Basic I/O"/>
    </condition>
    <condition id="STM32H743I-EVAL BSP LCD">
      <description>STMicroelectronics STM32H743I-EVAL BSP LCD</description>
      <require condition="STM32H7"/>
      <require Cclass="Device" Cgroup="STM32Cube HAL" Csub="Common"/>
      <require Cclass="Device" Cgroup="STM32Cube HAL" Csub="GPIO"/>
      <require Cclass="Device" Cgroup="STM32Cube HAL" Csub="LTDC"/>
      <require Cclass="Device" Cgroup="STM32Cube HAL" Csub="DMA2D"/>
      <require Cclass="Board Support" Cgroup="Drivers" Csub="I/O"/>
      <require Cclass="Board Support" Cgroup="Drivers" Csub="SDRAM"/>
    </condition>
    <condition id="STM32H743I-EVAL BSP NOR">
      <description>STMicroelectronics STM32H743I-EVAL BSP NOR</description>
      <require condition="STM32H7"/>
      <require Cclass="Device" Cgroup="STM32Cube HAL" Csub="Common"/>
      <require Cclass="Device" Cgroup="STM32Cube HAL" Csub="GPIO"/>
      <require Cclass="Device" Cgroup="STM32Cube HAL" Csub="NOR"/>
    </condition>
    <condition id="STM32H743I-EVAL BSP QSPI">
      <description>STMicroelectronics STM32H743I-EVAL BSP QSPI</description>
      <require condition="STM32H7"/>
      <require Cclass="Device" Cgroup="STM32Cube HAL" Csub="Common"/>
      <require Cclass="Device" Cgroup="STM32Cube HAL" Csub="GPIO"/>
      <require Cclass="Device" Cgroup="STM32Cube HAL" Csub="QSPI"/>
    </condition>
    <condition id="STM32H743I-EVAL BSP SD">
      <description>STMicroelectronics STM32H743I-EVAL BSP SD</description>
      <require condition="STM32H7"/>
      <require Cclass="Device" Cgroup="STM32Cube HAL" Csub="Common"/>
      <require Cclass="Device" Cgroup="STM32Cube HAL" Csub="GPIO"/>
      <require Cclass="Device" Cgroup="STM32Cube HAL" Csub="SD"/>
      <require Cclass="Device" Cgroup="STM32Cube HAL" Csub="DMA"/>
      <require Cclass="Board Support" Cgroup="Drivers" Csub="I/O"/>
    </condition>
    <condition id="STM32H743I-EVAL BSP SDRAM">
      <description>STMicroelectronics STM32H743I-EVAL BSP SDRAM</description>
      <require condition="STM32H7"/>
      <require Cclass="Device" Cgroup="STM32Cube HAL" Csub="Common"/>
      <require Cclass="Device" Cgroup="STM32Cube HAL" Csub="GPIO"/>
      <require Cclass="Device" Cgroup="STM32Cube HAL" Csub="SDRAM"/>
      <require Cclass="Device" Cgroup="STM32Cube HAL" Csub="DMA"/>
      <require Cclass="Device" Cgroup="STM32Cube HAL" Csub="MDMA"/>
    </condition>
    <condition id="STM32H743I-EVAL BSP SRAM">
      <description>STMicroelectronics STM32H743I-EVAL BSP SRAM</description>
      <require condition="STM32H7"/>
      <require Cclass="Device" Cgroup="STM32Cube HAL" Csub="Common"/>
      <require Cclass="Device" Cgroup="STM32Cube HAL" Csub="GPIO"/>
      <require Cclass="Device" Cgroup="STM32Cube HAL" Csub="SRAM"/>
      <require Cclass="Device" Cgroup="STM32Cube HAL" Csub="DMA"/>
    </condition>
    <condition id="STM32H743I-EVAL BSP TS">
      <description>STMicroelectronics STM32H743I-EVAL BSP TS</description>
      <require condition="STM32H7"/>
      <require Cclass="Board Support" Cgroup="Drivers" Csub="I/O"/>
    </condition>

  </conditions>

  <generators>
    <!-- This generator is launched if any component referencing this generator by 'id' is selected and the specified <gpdsc> file does not exist -->
    <generator id="STM32CubeMX">
      <description>ST Microelectronics: STCubeMX Environment</description>
      <command>MDK/CubeMX/STM32CubeMxLauncher.exe</command> <!-- path is specified either absolute or relative to PDSC or GPDSC file -->
      <workingDir>$PRTE/Device</workingDir> <!-- path is specified either absolute or relative to PDSC or GPDSC file. If not specified it is the project directory configured by the environment -->
      <arguments>
        <!-- D = Device (Dname/Dvariant as configured by environment) -->
        <argument>$D</argument>
        <!-- Project path and project name (as configured by environment) -->
        <argument>#P</argument>
        <!-- absolute or relative to workingDir. $S = Device Family Pack base folder -->
        <argument>$S</argument>
      </arguments>
      <!-- path is either absolute or relative to working directory -->
      <gpdsc name="$PRTE/Device/$D/FrameworkCubeMX.gpdsc"/>
    </generator>
  </generators>

  <taxonomy>
    <!--description Cclass="Device" Cgroup="STM32Cube HAL" doc="Documentation/DM00189702.pdf">STM32H7xx Hardware Abstraction Layer (HAL) Drivers</description-->
    <!--description Cclass="Graphics Display">Display Interface including configuration for emWIN</description-->
    <description Cclass="Board Support" Cgroup="Drivers">ST BSP Drivers</description>
  </taxonomy>

  <apis>
    <api Cclass="Device" Cgroup="STM32Cube Framework" exclusive="1" Capiversion="1.1.0">
      <description>STM32Cube Framework</description>
      <files>
        <file category="doc" name="MDK/CubeMX/Documentation/index.html"/>
      </files>
    </api>
  </apis>

  <components>
    <component Cclass="Device" Cgroup="Startup" Cversion="1.5.0" condition="STM32H7 CMSIS">
      <description>System Startup for STMicroelectronics STM32H7 Series</description>
      <RTE_Components_h>
        #define RTE_DEVICE_STARTUP_STM32H7XX    /* Device Startup for STM32H7 */
      </RTE_Components_h>
      <files>
        <!--  include folder -->
        <file category="include" name="Drivers/CMSIS/Device/ST/STM32H7xx/Include/"/>

        <!-- Flash Option Bytes templates -->
        <!--file category="source" condition="STM32H7_ARMCC" name="MDK/Device/Source/ARM/STM32H7xx_OPT.s" attr="template" select="Flash Option Bytes"/-->
        <!--file category="source" condition="STM32H7_ARMCC" name="MDK/Device/Source/ARM/STM32H7xx_OTP.s" attr="template" select="Flash One-Time programmable Bytes"/-->

        <!-- common device header file -->
        <file category="header"  name="Drivers/CMSIS/Device/ST/STM32H7xx/Include/stm32h7xx.h"/>

        <!-- startup files -->
        <!-- ARM Compiler Toolchain -->
        <file category="source" condition="STM32H742_ARMCC" name="Drivers/CMSIS/Device/ST/STM32H7xx/Source/Templates/arm/startup_stm32h742xx.s" attr="config" version="1.5.0"/>
        <file category="source" condition="STM32H743_ARMCC" name="Drivers/CMSIS/Device/ST/STM32H7xx/Source/Templates/arm/startup_stm32h743xx.s" attr="config" version="1.5.0"/>
        <file category="source" condition="STM32H745_ARMCC" name="Drivers/CMSIS/Device/ST/STM32H7xx/Source/Templates/arm/startup_stm32h745xx.s" attr="config" version="1.5.0"/>
        <file category="source" condition="STM32H747_ARMCC" name="Drivers/CMSIS/Device/ST/STM32H7xx/Source/Templates/arm/startup_stm32h747xx.s" attr="config" version="1.5.0"/>
        <file category="source" condition="STM32H750_ARMCC" name="Drivers/CMSIS/Device/ST/STM32H7xx/Source/Templates/arm/startup_stm32h750xx.s" attr="config" version="1.5.0"/>
        <file category="source" condition="STM32H753_ARMCC" name="Drivers/CMSIS/Device/ST/STM32H7xx/Source/Templates/arm/startup_stm32h753xx.s" attr="config" version="1.5.0"/>
        <file category="source" condition="STM32H755_ARMCC" name="Drivers/CMSIS/Device/ST/STM32H7xx/Source/Templates/arm/startup_stm32h755xx.s" attr="config" version="1.5.0"/>
        <file category="source" condition="STM32H757_ARMCC" name="Drivers/CMSIS/Device/ST/STM32H7xx/Source/Templates/arm/startup_stm32h757xx.s" attr="config" version="1.5.0"/>

        <!-- GCC Toolchain -->
        <file category="source" condition="STM32H742_GCC"   name="Drivers/CMSIS/Device/ST/STM32H7xx/Source/Templates/gcc/startup_stm32h742xx.S" attr="config" version="1.5.0"/>
        <file category="source" condition="STM32H743_GCC"   name="Drivers/CMSIS/Device/ST/STM32H7xx/Source/Templates/gcc/startup_stm32h743xx.S" attr="config" version="1.5.0"/>
        <file category="source" condition="STM32H745_GCC"   name="Drivers/CMSIS/Device/ST/STM32H7xx/Source/Templates/gcc/startup_stm32h745xx.S" attr="config" version="1.5.0"/>
        <file category="source" condition="STM32H747_GCC"   name="Drivers/CMSIS/Device/ST/STM32H7xx/Source/Templates/gcc/startup_stm32h747xx.S" attr="config" version="1.5.0"/>
        <file category="source" condition="STM32H750_GCC"   name="Drivers/CMSIS/Device/ST/STM32H7xx/Source/Templates/gcc/startup_stm32h750xx.S" attr="config" version="1.5.0"/>
        <file category="source" condition="STM32H753_GCC"   name="Drivers/CMSIS/Device/ST/STM32H7xx/Source/Templates/gcc/startup_stm32h753xx.S" attr="config" version="1.5.0"/>
        <file category="source" condition="STM32H755_GCC"   name="Drivers/CMSIS/Device/ST/STM32H7xx/Source/Templates/gcc/startup_stm32h755xx.S" attr="config" version="1.5.0"/>
        <file category="source" condition="STM32H757_GCC"   name="Drivers/CMSIS/Device/ST/STM32H7xx/Source/Templates/gcc/startup_stm32h757xx.S" attr="config" version="1.5.0"/>

        <!-- IAR Toolchain -->
        <file category="source" condition="STM32H742_IAR"   name="Drivers/CMSIS/Device/ST/STM32H7xx/Source/Templates/iar/startup_stm32h742xx.s" attr="config" version="1.5.0"/>
        <file category="source" condition="STM32H743_IAR"   name="Drivers/CMSIS/Device/ST/STM32H7xx/Source/Templates/iar/startup_stm32h743xx.s" attr="config" version="1.5.0"/>
        <file category="source" condition="STM32H745_IAR"   name="Drivers/CMSIS/Device/ST/STM32H7xx/Source/Templates/iar/startup_stm32h745xx.s" attr="config" version="1.5.0"/>
        <file category="source" condition="STM32H747_IAR"   name="Drivers/CMSIS/Device/ST/STM32H7xx/Source/Templates/iar/startup_stm32h747xx.s" attr="config" version="1.5.0"/>
        <file category="source" condition="STM32H750_IAR"   name="Drivers/CMSIS/Device/ST/STM32H7xx/Source/Templates/iar/startup_stm32h750xx.s" attr="config" version="1.5.0"/>
        <file category="source" condition="STM32H753_IAR"   name="Drivers/CMSIS/Device/ST/STM32H7xx/Source/Templates/iar/startup_stm32h753xx.s" attr="config" version="1.5.0"/>
        <file category="source" condition="STM32H755_IAR"   name="Drivers/CMSIS/Device/ST/STM32H7xx/Source/Templates/iar/startup_stm32h755xx.s" attr="config" version="1.5.0"/>
        <file category="source" condition="STM32H757_IAR"   name="Drivers/CMSIS/Device/ST/STM32H7xx/Source/Templates/iar/startup_stm32h757xx.s" attr="config" version="1.5.0"/>

        <!-- system file -->
        <file category="source"                             name="Drivers/CMSIS/Device/ST/STM32H7xx/Source/Templates/system_stm32h7xx.c"        attr="config" version="1.5.0"/>
      </files>
    </component>

    <component generator="STM32CubeMX" Cclass="Device" Cgroup="STM32Cube Framework" Csub="STM32CubeMX" Cversion="1.0.0" Capiversion="1.0.0" condition="STM32H7_SC">
      <description>Configuration via STM32CubeMX</description>
      <RTE_Components_h>
        #define RTE_DEVICE_FRAMEWORK_CUBE_MX
      </RTE_Components_h>
      <files>
        <file category="doc"     name="MDK/CubeMX/Documentation/cubemx.html"/>
        <file category="source"  name="MDK/CubeMX/run_STM32CubeMX.c" version="1.0.0"/>
        <file category="other"   name="MDK/CubeMX/FrameworkCubeMX_gpdsc.ftl" version="1.0.0"/>
        <file category="other"   name="MDK/CubeMX/MX_Device_h.ftl" version ="1.0.2"/>
      </files>
    </component>

    <!-- START: STMicroelectronics STM32CubeH7 HAL -->
    <component Cclass="Device" Cgroup="STM32Cube HAL" Csub="Common"    Cversion="1.5.0" condition="STM32H7 HAL Common">
      <description>Common HAL driver</description>
      <RTE_Components_h>
        #define RTE_DEVICE_HAL_COMMON
      </RTE_Components_h>
      <files>
        <file category="include" name="Drivers/STM32H7xx_HAL_Driver/Inc/"/>
        <file category="header"  name="Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_hal.h"/>
        <file category="source"  name="Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c"/>
      </files>
    </component>
    <!-- START: STMicroelectronics STM32CubeH7 HAL Dual Core -->
    <component Cclass="Device" Cgroup="STM32Cube HAL" Csub="Common"    Cversion="1.5.0" condition="STM32H7 HAL Common DC">
      <description>Common HAL driver</description>
      <RTE_Components_h>
        #define RTE_DEVICE_HAL_COMMON
      </RTE_Components_h>
      <files>
        <file category="include" name="Drivers/STM32H7xx_HAL_Driver/Inc/"/>
        <file category="header"  name="Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_hal.h"/>
        <file category="source"  name="Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c"/>
      </files>
    </component>
    <component Cclass="Device" Cgroup="STM32Cube HAL" Csub="ADC"       Cversion="1.5.0" condition="STM32H7 HAL DMA">
      <description>Analog-to-digital converter (ADC) HAL driver</description>
      <RTE_Components_h>
        #define RTE_DEVICE_HAL_ADC
      </RTE_Components_h>
      <files>
        <file category="source" name="Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c"/>
        <file category="source" name="Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c"/>
      </files>
    </component>
    <component Cclass="Device" Cgroup="STM32Cube HAL" Csub="CEC"       Cversion="1.5.0" condition="STM32H7 HAL">
      <description>Consumer Electronics Control (CEC) HAL driver</description>
      <RTE_Components_h>
        #define RTE_DEVICE_HAL_CEC
      </RTE_Components_h>
      <files>
        <file category="source" name="Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cec.c"/>
      </files>
    </component>
    <component Cclass="Device" Cgroup="STM32Cube HAL" Csub="COMP"      Cversion="1.5.0" condition="STM32H7 HAL">
      <description>Comparator (COMP) HAL driver</description>
      <RTE_Components_h>
        #define RTE_DEVICE_HAL_COMP
      </RTE_Components_h>
      <files>
        <file category="source" name="Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_comp.c"/>
      </files>
    </component>
    <component Cclass="Device" Cgroup="STM32Cube HAL" Csub="Cortex"    Cversion="1.5.0" condition="STM32H7 HAL">
      <description>Cortex HAL driver</description>
      <RTE_Components_h>
        #define RTE_DEVICE_HAL_CORTEX
      </RTE_Components_h>
      <files>
        <file category="source" name="Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c"/>
      </files>
    </component>
    <component Cclass="Device" Cgroup="STM32Cube HAL" Csub="CRC"       Cversion="1.5.0" condition="STM32H7 HAL">
      <description>CRC calculation unit (CRC) HAL driver</description>
      <RTE_Components_h>
        #define RTE_DEVICE_HAL_CRC
      </RTE_Components_h>
      <files>
        <file category="source" name="Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_crc.c"/>
        <file category="source" name="Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_crc_ex.c"/>
      </files>
    </component>
    <component Cclass="Device" Cgroup="STM32Cube HAL" Csub="CRYP"      Cversion="1.5.0" condition="STM32H7 HAL DMA">
      <description>Cryptographic processor (CRYP) HAL driver</description>
      <RTE_Components_h>
        #define RTE_DEVICE_HAL_CRYP
      </RTE_Components_h>
      <files>
        <file category="source" name="Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cryp.c"/>
        <file category="source" name="Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cryp_ex.c"/>
      </files>
    </component>
    <component Cclass="Device" Cgroup="STM32Cube HAL" Csub="DAC"       Cversion="1.5.0" condition="STM32H7 HAL DMA">
      <description>Digital-to-analog converter (DAC) HAL driver</description>
      <RTE_Components_h>
        #define RTE_DEVICE_HAL_DAC
      </RTE_Components_h>
      <files>
        <file category="source" name="Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dac.c"/>
        <file category="source" name="Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dac_ex.c"/>
      </files>
    </component>
    <component Cclass="Device" Cgroup="STM32Cube HAL" Csub="DCMI"      Cversion="1.5.0" condition="STM32H7 HAL DMA">
      <description>Digital camera interface (DCMI) HAL driver</description>
      <RTE_Components_h>
        #define RTE_DEVICE_HAL_DCMI
      </RTE_Components_h>
      <files>
        <file category="source" name="Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dcmi.c"/>
      </files>
    </component>
    <component Cclass="Device" Cgroup="STM32Cube HAL" Csub="DFSDM"     Cversion="1.5.0" condition="STM32H7 HAL DMA">
      <description>Digital Filter for Sigma-Delta Modulators (DFSDM) HAL driver</description>
      <RTE_Components_h>
        #define RTE_DEVICE_HAL_DFSDM
      </RTE_Components_h>
      <files>
        <file category="source" name="Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dfsdm.c"/>
      </files>
    </component>
    <component Cclass="Device" Cgroup="STM32Cube HAL" Csub="DMA"       Cversion="1.5.0" condition="STM32H7 HAL">
      <description>DMA controller (DMA) HAL driver</description>
      <RTE_Components_h>
        #define RTE_DEVICE_HAL_DMA
      </RTE_Components_h>
      <files>
        <file category="source" name="Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma.c"/>
        <file category="source" name="Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma_ex.c"/>
      </files>
    </component>
    <component Cclass="Device" Cgroup="STM32Cube HAL" Csub="DMA2D"     Cversion="1.5.0" condition="STM32H7 HAL">
      <description>Chrom-Art Accelerator (DMA2D) HAL driver</description>
      <RTE_Components_h>
        #define RTE_DEVICE_HAL_DMA2D
      </RTE_Components_h>
      <files>
        <file category="source" name="Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c"/>
      </files>
    </component>
    <component Cclass="Device" Cgroup="STM32Cube HAL" Csub="DSI"       Cversion="1.5.0" condition="STM32H7 HAL">
      <description>Display Serial Interface (DSI) HAL driver</description>
      <RTE_Components_h>
        #define RTE_DEVICE_HAL_DSI
      </RTE_Components_h>
      <files>
        <file category="source" name="Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dsi.c"/>
      </files>
    </component>
    <component Cclass="Device" Cgroup="STM32Cube HAL" Csub="ETH"       Cversion="1.5.0" condition="STM32H7 HAL">
      <description>Ethernet MAC (ETH) HAL driver</description>
      <RTE_Components_h>
        #define RTE_DEVICE_HAL_ETH
      </RTE_Components_h>
      <files>
        <file category="source" name="Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c"/>
        <file category="source" name="Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth_ex.c"/>
      </files>
    </component>
    <component Cclass="Device" Cgroup="STM32Cube HAL" Csub="FDCAN"     Cversion="1.5.0" condition="STM32H7 HAL">
      <description>Controller area network (FDCAN1) HAL driver</description>
      <RTE_Components_h>
        #define RTE_DEVICE_HAL_FDCAN
      </RTE_Components_h>
      <files>
        <file category="source" name="Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c"/>
      </files>
    </component>
    <component Cclass="Device" Cgroup="STM32Cube HAL" Csub="Flash"     Cversion="1.5.0" condition="STM32H7 HAL">
      <description>Embedded Flash memory HAL driver</description>
      <RTE_Components_h>
        #define RTE_DEVICE_HAL_FLASH
      </RTE_Components_h>
      <files>
        <file category="source" name="Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c"/>
        <file category="source" name="Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c"/>
      </files>
    </component>
    <component Cclass="Device" Cgroup="STM32Cube HAL" Csub="GPIO"      Cversion="1.5.0" condition="STM32H7 HAL">
      <description>General-purpose I/O (GPIO) HAL driver</description>
      <RTE_Components_h>
        #define RTE_DEVICE_HAL_GPIO
      </RTE_Components_h>
      <files>
        <file category="source" name="Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_gpio.c"/>
      </files>
    </component>
    <component Cclass="Device" Cgroup="STM32Cube HAL" Csub="HASH"      Cversion="1.5.0" condition="STM32H7 HAL DMA">
      <description>Hash processor (HASH) HAL driver</description>
      <RTE_Components_h>
        #define RTE_DEVICE_HAL_HASH
      </RTE_Components_h>
      <files>
        <file category="source" name="Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_hash.c"/>
        <file category="source" name="Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_hash_ex.c"/>
      </files>
    </component>
    <component Cclass="Device" Cgroup="STM32Cube HAL" Csub="HCD"       Cversion="1.5.0" condition="STM32H7 HAL">
      <description>USB Host controller (HCD) HAL driver</description>
      <RTE_Components_h>
        #define RTE_DEVICE_HAL_HCD
      </RTE_Components_h>
      <files>
        <file category="source" name="Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_hcd.c"/>
        <file category="source" name="Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_ll_usb.c"/>
      </files>
    </component>
    <component Cclass="Device" Cgroup="STM32Cube HAL" Csub="HRTIM"     Cversion="1.5.0" condition="STM32H7 HAL DMA">
      <description>High Resolution Timer (HRTIM) HAL driver</description>
      <RTE_Components_h>
        #define RTE_DEVICE_HAL_HRTIM
      </RTE_Components_h>
      <files>
        <file category="source" name="Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_hrtim.c"/>
      </files>
    </component>
    <component Cclass="Device" Cgroup="STM32Cube HAL" Csub="HSEM"      Cversion="1.5.0" condition="STM32H7 HAL">
      <description>Hardware semaphore (HSEM) HAL driver</description>
      <RTE_Components_h>
        #define RTE_DEVICE_HAL_HSEM
      </RTE_Components_h>
      <files>
        <file category="source" name="Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_hsem.c"/>
      </files>
    </component>
    <component Cclass="Device" Cgroup="STM32Cube HAL" Csub="I2C"       Cversion="1.5.0" condition="STM32H7 HAL DMA">
      <description>Inter-integrated circuit (I2C) interface HAL driver</description>
      <RTE_Components_h>
        #define RTE_DEVICE_HAL_I2C
      </RTE_Components_h>
      <files>
        <file category="source" name="Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c"/>
        <file category="source" name="Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c_ex.c"/>
      </files>
    </component>
    <component Cclass="Device" Cgroup="STM32Cube HAL" Csub="I2S"       Cversion="1.5.0" condition="STM32H7 HAL DMA SPI">
      <description>I2S HAL driver</description>
      <RTE_Components_h>
        #define RTE_DEVICE_HAL_I2S
      </RTE_Components_h>
      <files>
        <file category="source" name="Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2s.c"/>
        <file category="source" name="Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2s_ex.c"/>
      </files>
    </component>
    <component Cclass="Device" Cgroup="STM32Cube HAL" Csub="IRDA"      Cversion="1.5.0" condition="STM32H7 HAL DMA">
      <description>IrDA HAL driver</description>
      <RTE_Components_h>
        #define RTE_DEVICE_HAL_IRDA
      </RTE_Components_h>
      <files>
        <file category="source" name="Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_irda.c"/>
      </files>
    </component>
    <component Cclass="Device" Cgroup="STM32Cube HAL" Csub="IWDG"      Cversion="1.5.0" condition="STM32H7 HAL">
      <description>Independent watchdog (IWDG) HAL driver</description>
      <RTE_Components_h>
        #define RTE_DEVICE_HAL_IWDG
      </RTE_Components_h>
      <files>
        <file category="source" name="Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_iwdg.c"/>
      </files>
    </component>
    <component Cclass="Device" Cgroup="STM32Cube HAL" Csub="JPEG"      Cversion="1.5.0" condition="STM32H7 HAL MDMA">
      <description>JPEG encoder/decoder (JPEG) HAL driver</description>
      <RTE_Components_h>
        #define RTE_DEVICE_HAL_JPEG
      </RTE_Components_h>
      <files>
        <file category="source" name="Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_jpeg.c"/>
      </files>
    </component>
    <component Cclass="Device" Cgroup="STM32Cube HAL" Csub="LPTIM"     Cversion="1.5.0" condition="STM32H7 HAL">
      <description>Low-power timer (LPTIM) HAL driver</description>
      <RTE_Components_h>
        #define RTE_DEVICE_HAL_LPTIM
      </RTE_Components_h>
      <files>
        <file category="source" name="Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_lptim.c"/>
      </files>
    </component>
    <component Cclass="Device" Cgroup="STM32Cube HAL" Csub="LTDC"      Cversion="1.5.0" condition="STM32H7 HAL">
      <description>LCD-TFT Controller (LTDC) HAL driver</description>
      <RTE_Components_h>
        #define RTE_DEVICE_HAL_LTDC
      </RTE_Components_h>
      <files>
        <file category="source" name="Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_ltdc.c"/>
        <file category="source" name="Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_ltdc_ex.c"/>
      </files>
    </component>
    <component Cclass="Device" Cgroup="STM32Cube HAL" Csub="MDIOS"     Cversion="1.5.0" condition="STM32H7 HAL">
      <description>Management Data IO (MDIOS) HAL driver</description>
      <RTE_Components_h>
        #define RTE_DEVICE_HAL_MDIOS
      </RTE_Components_h>
      <files>
        <file category="source" name="Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdios.c"/>
      </files>
    </component>
    <component Cclass="Device" Cgroup="STM32Cube HAL" Csub="MDMA"      Cversion="1.5.0" condition="STM32H7 HAL">
      <description>Master DMA (MDMA) HAL driver</description>
      <RTE_Components_h>
        #define RTE_DEVICE_HAL_MDMA
      </RTE_Components_h>
      <files>
        <file category="source" name="Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c"/>
      </files>
    </component>
    <component Cclass="Device" Cgroup="STM32Cube HAL" Csub="MMC"       Cversion="1.5.0" condition="STM32H7 HAL DMA">
      <description>MMC card HAL driver</description>
      <RTE_Components_h>
        #define RTE_DEVICE_HAL_MMC
      </RTE_Components_h>
      <files>
        <file category="source" name="Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mmc.c"/>
        <file category="source" name="Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mmc_ex.c"/>
        <file category="source" name="Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_ll_sdmmc.c"/>
      </files>
    </component>
    <component Cclass="Device" Cgroup="STM32Cube HAL" Csub="NAND"      Cversion="1.5.0" condition="STM32H7 HAL">
      <description>NAND Flash controller HAL driver</description>
      <RTE_Components_h>
        #define RTE_DEVICE_HAL_NAND
      </RTE_Components_h>
      <files>
        <file category="source" name="Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c"/>
        <file category="source" name="Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_ll_fmc.c"/>
      </files>
    </component>
    <component Cclass="Device" Cgroup="STM32Cube HAL" Csub="NOR"       Cversion="1.5.0" condition="STM32H7 HAL">
      <description>NOR Flash controller HAL driver</description>
      <RTE_Components_h>
        #define RTE_DEVICE_HAL_NOR
      </RTE_Components_h>
      <files>
        <file category="source" name="Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nor.c"/>
        <file category="source" name="Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_ll_fmc.c"/>
      </files>
    </component>
    <component Cclass="Device" Cgroup="STM32Cube HAL" Csub="OPAMP"     Cversion="1.5.0" condition="STM32H7 HAL">
      <description>Operational amplifier (OPAMP) HAL driver</description>
      <RTE_Components_h>
        #define RTE_DEVICE_HAL_OPAMP
      </RTE_Components_h>
      <files>
        <file category="source" name="Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_opamp.c"/>
        <file category="source" name="Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_opamp_ex.c"/>
      </files>
    </component>
    <component Cclass="Device" Cgroup="STM32Cube HAL" Csub="PCD"       Cversion="1.5.0" condition="STM32H7 HAL">
      <description>USB Peripheral controller (PCD) HAL driver</description>
      <RTE_Components_h>
        #define RTE_DEVICE_HAL_PCD
      </RTE_Components_h>
      <files>
        <file category="source" name="Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_pcd.c"/>
        <file category="source" name="Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_pcd_ex.c"/>
        <file category="source" name="Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_ll_usb.c"/>
      </files>
    </component>
    <component Cclass="Device" Cgroup="STM32Cube HAL" Csub="PWR"       Cversion="1.5.0" condition="STM32H7 HAL">
      <description>Power controller (PWR) HAL driver</description>
      <RTE_Components_h>
        #define RTE_DEVICE_HAL_PWR
      </RTE_Components_h>
      <files>
        <file category="source" name="Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_pwr.c"/>
        <file category="source" name="Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_pwr_ex.c"/>
      </files>
    </component>
    <component Cclass="Device" Cgroup="STM32Cube HAL" Csub="QSPI"      Cversion="1.5.0" condition="STM32H7 HAL MDMA">
      <description>Quad Serial peripheral interface (QSPI) HAL driver</description>
      <RTE_Components_h>
        #define RTE_DEVICE_HAL_QSPI
      </RTE_Components_h>
      <files>
        <file category="source" name="Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c"/>
      </files>
    </component>
    <component Cclass="Device" Cgroup="STM32Cube HAL" Csub="RAMECC"    Cversion="1.5.0" condition="STM32H7 HAL">
      <description>RAM ECC monitoring (RAMECC) peripheral HAL driver</description>
      <RTE_Components_h>
        #define RTE_DEVICE_HAL_RAMECC
      </RTE_Components_h>
      <files>
        <file category="source" name="Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_ramecc.c"/>
      </files>
    </component>
    <component Cclass="Device" Cgroup="STM32Cube HAL" Csub="RCC"       Cversion="1.5.0" condition="STM32H7 HAL GPIO">
      <description>Reset and clock control (RCC) HAL driver</description>
      <RTE_Components_h>
        #define RTE_DEVICE_HAL_RCC
      </RTE_Components_h>
      <files>
        <file category="source" name="Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c"/>
        <file category="source" name="Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc_ex.c"/>
      </files>
    </component>
    <component Cclass="Device" Cgroup="STM32Cube HAL" Csub="RNG"       Cversion="1.5.0" condition="STM32H7 HAL">
      <description>Random number generator (RNG) HAL driver</description>
      <RTE_Components_h>
        #define RTE_DEVICE_HAL_RNG
      </RTE_Components_h>
      <files>
        <file category="source" name="Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rng.c"/>
      </files>
    </component>
    <component Cclass="Device" Cgroup="STM32Cube HAL" Csub="RTC"       Cversion="1.5.0" condition="STM32H7 HAL">
      <description>Real-time clock (RTC) HAL driver</description>
      <RTE_Components_h>
        #define RTE_DEVICE_HAL_RTC
      </RTE_Components_h>
      <files>
        <file category="source" name="Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc.c"/>
        <file category="source" name="Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c"/>
      </files>
    </component>
    <component Cclass="Device" Cgroup="STM32Cube HAL" Csub="SAI"       Cversion="1.5.0" condition="STM32H7 HAL DMA">
      <description>Serial audio interface (SAI) HAL driver</description>
      <RTE_Components_h>
        #define RTE_DEVICE_HAL_SAI
      </RTE_Components_h>
      <files>
        <file category="source" name="Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sai.c"/>
        <file category="source" name="Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sai_ex.c"/>
      </files>
    </component>
    <component Cclass="Device" Cgroup="STM32Cube HAL" Csub="SD"        Cversion="1.5.0" condition="STM32H7 HAL DMA">
      <description>Secure digital (SD) interface HAL driver</description>
      <RTE_Components_h>
        #define RTE_DEVICE_HAL_SD
      </RTE_Components_h>
      <files>
        <file category="source" name="Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sd.c"/>
        <file category="source" name="Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sd_ex.c"/>
        <file category="source" name="Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_ll_sdmmc.c"/>
        <file category="source" name="Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_ll_delayblock.c"/>
      </files>
    </component>
    <component Cclass="Device" Cgroup="STM32Cube HAL" Csub="SDRAM"     Cversion="1.5.0" condition="STM32H7 HAL MDMA">
      <description>SDRAM controller (SDRAM) HAL driver</description>
      <RTE_Components_h>
        #define RTE_DEVICE_HAL_SDRAM
      </RTE_Components_h>
      <files>
        <file category="source" name="Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c"/>
        <file category="source" name="Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_ll_fmc.c"/>
      </files>
    </component>
    <component Cclass="Device" Cgroup="STM32Cube HAL" Csub="Smartcard" Cversion="1.5.0" condition="STM32H7 HAL DMA UART">
      <description>Smartcard HAL driver</description>
      <RTE_Components_h>
        #define RTE_DEVICE_HAL_SMARTCARD
      </RTE_Components_h>
      <files>
        <file category="source" name="Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_smartcard.c"/>
        <file category="source" name="Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_smartcard_ex.c"/>
      </files>
    </component>
    <component Cclass="Device" Cgroup="STM32Cube HAL" Csub="SMBUS"     Cversion="1.5.0" condition="STM32H7 HAL DMA">
      <description>SMBus (SMBUS) interface HAL driver</description>
      <RTE_Components_h>
        #define RTE_DEVICE_HAL_SMBUS
      </RTE_Components_h>
      <files>
        <file category="source" name="Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_smbus.c"/>
      </files>
    </component>
    <component Cclass="Device" Cgroup="STM32Cube HAL" Csub="SPDIFRX"   Cversion="1.5.0" condition="STM32H7 HAL DMA">
      <description>SPDIF Receiver interface (SPDIFRX) HAL driver</description>
      <RTE_Components_h>
        #define RTE_DEVICE_HAL_SPDIFRX
      </RTE_Components_h>
      <files>
        <file category="source" name="Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spdifrx.c"/>
      </files>
    </component>
    <component Cclass="Device" Cgroup="STM32Cube HAL" Csub="SPI"       Cversion="1.5.0" condition="STM32H7 HAL DMA">
      <description>Serial peripheral interface (SPI) HAL driver</description>
      <RTE_Components_h>
        #define RTE_DEVICE_HAL_SPI
      </RTE_Components_h>
      <files>
        <file category="source" name="Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c"/>
        <file category="source" name="Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi_ex.c"/>
      </files>
    </component>
    <component Cclass="Device" Cgroup="STM32Cube HAL" Csub="SRAM"      Cversion="1.5.0" condition="STM32H7 HAL MDMA">
      <description>SRAM controller (SRAM) HAL driver</description>
      <RTE_Components_h>
        #define RTE_DEVICE_HAL_SRAM
      </RTE_Components_h>
      <files>
        <file category="source" name="Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sram.c"/>
        <file category="source" name="Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_ll_fmc.c"/>
      </files>
    </component>
    <component Cclass="Device" Cgroup="STM32Cube HAL" Csub="SWPMI"     Cversion="1.5.0" condition="STM32H7 HAL DMA">
      <description>Single Wire Protocol Master Interface (SWPMI) HAL driver</description>
      <RTE_Components_h>
        #define RTE_DEVICE_HAL_SWPMI
      </RTE_Components_h>
      <files>
        <file category="source" name="Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_swpmi.c"/>
      </files>
    </component>
    <component Cclass="Device" Cgroup="STM32Cube HAL" Csub="TIM"       Cversion="1.5.0" condition="STM32H7 HAL DMA">
      <description>Timer (TIM) HAL driver</description>
      <RTE_Components_h>
        #define RTE_DEVICE_HAL_TIM
      </RTE_Components_h>
      <files>
        <file category="source" name="Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_tim.c"/>
        <file category="source" name="Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_tim_ex.c"/>
      </files>
    </component>
    <component Cclass="Device" Cgroup="STM32Cube HAL" Csub="UART"      Cversion="1.5.0" condition="STM32H7 HAL DMA">
      <description>Universal asynchronous receiver transmitter (UART) HAL driver</description>
      <RTE_Components_h>
        #define RTE_DEVICE_HAL_UART
      </RTE_Components_h>
      <files>
        <file category="source" name="Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c"/>
        <file category="source" name="Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c"/>
      </files>
    </component>
    <component Cclass="Device" Cgroup="STM32Cube HAL" Csub="USART"     Cversion="1.5.0" condition="STM32H7 HAL DMA">
      <description>Universal synchronous asynchronous receiver transmitter (USART) HAL driver</description>
      <RTE_Components_h>
        #define RTE_DEVICE_HAL_USART
      </RTE_Components_h>
      <files>
        <file category="source" name="Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c"/>
        <file category="source" name="Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart_ex.c"/>
      </files>
    </component>
    <component Cclass="Device" Cgroup="STM32Cube HAL" Csub="WWDG"      Cversion="1.5.0" condition="STM32H7 HAL">
      <description>Window watchdog (WWDG) HAL driver</description>
      <RTE_Components_h>
        #define RTE_DEVICE_HAL_WWDG
      </RTE_Components_h>
      <files>
        <file category="source" name="Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_wwdg.c"/>
      </files>
    </component>

    <!-- END: STMicroelectronics STM32CubeH7 HAL -->

    <!-- START: STMicroelectronics STM32CubeH7 LL -->
    <component Cclass="Device" Cgroup="STM32Cube LL" Csub="Common"     Cversion="1.5.0" condition="STM32H7 LL Common">
      <description>Common LL driver</description>
      <RTE_Components_h>
        #define RTE_DEVICE_LL_COMMON
      </RTE_Components_h>
      <files>
        <file category="include" name="Drivers/STM32H7xx_HAL_Driver/Inc/"/>
        <file category="include" name="Drivers/STM32H7xx_HAL_Driver/Inc/Legacy/"/>
      </files>
    </component>
    <component Cclass="Device" Cgroup="STM32Cube LL" Csub="ADC"        Cversion="1.5.0" condition="STM32H7 LL">
      <description>Analog-to-digital converter (ADC) LL driver</description>
      <RTE_Components_h>
        #define RTE_DEVICE_LL_ADC
      </RTE_Components_h>
      <files>
        <file category="source" name="Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_ll_adc.c"/>
      </files>
    </component>
    <component Cclass="Device" Cgroup="STM32Cube LL" Csub="BDMA"       Cversion="1.5.0" condition="STM32H7 LL">
      <description>Basic DMA controller (BDMA) LL driver</description>
      <RTE_Components_h>
        #define RTE_DEVICE_LL_BDMA
      </RTE_Components_h>
      <files>
        <file category="source" name="Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_ll_bdma.c"/>
      </files>
    </component>
    <component Cclass="Device" Cgroup="STM32Cube LL" Csub="COMP"       Cversion="1.5.0" condition="STM32H7 LL">
      <description>Analog Comparator (CRC) LL driver</description>
      <RTE_Components_h>
        #define RTE_DEVICE_LL_COMP
      </RTE_Components_h>
      <files>
        <file category="source" name="Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_ll_comp.c"/>
      </files>
    </component>
    <component Cclass="Device" Cgroup="STM32Cube LL" Csub="CRC"        Cversion="1.5.0" condition="STM32H7 LL">
      <description>CRC calculation unit (CRC) LL driver</description>
      <RTE_Components_h>
        #define RTE_DEVICE_LL_CRC
      </RTE_Components_h>
      <files>
        <file category="source" name="Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_ll_crc.c"/>
      </files>
    </component>
    <component Cclass="Device" Cgroup="STM32Cube LL" Csub="DAC"        Cversion="1.5.0" condition="STM32H7 LL">
      <description>Digital-to-analog converter (DAC) LL driver</description>
      <RTE_Components_h>
        #define RTE_DEVICE_LL_DAC
      </RTE_Components_h>
      <files>
        <file category="source" name="Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_ll_dac.c"/>
      </files>
    </component>
    <component Cclass="Device" Cgroup="STM32Cube LL" Csub="DELAY_BLOCK" Cversion="1.5.0" condition="STM32H7 LL">
      <description>Delay Block LL driver</description>
      <RTE_Components_h>
        #define RTE_DEVICE_LL_DELAY_BLOCK
      </RTE_Components_h>
      <files>
        <file category="source" name="Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_ll_delayblock.c"/>
      </files>
    </component>
    <component Cclass="Device" Cgroup="STM32Cube LL" Csub="DMA"        Cversion="1.5.0" condition="STM32H7 LL">
      <description>DMA controller (DMA) LL driver</description>
      <RTE_Components_h>
        #define RTE_DEVICE_LL_DMA
      </RTE_Components_h>
      <files>
        <file category="source" name="Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_ll_dma.c"/>
      </files>
    </component>
    <component Cclass="Device" Cgroup="STM32Cube LL" Csub="DMA2D"      Cversion="1.5.0" condition="STM32H7 LL">
      <description>Chrom-Art Accelerator (DMA2D) LL driver</description>
      <RTE_Components_h>
        #define RTE_DEVICE_LL_DMA2D
      </RTE_Components_h>
      <files>
        <file category="source" name="Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_ll_dma2d.c"/>
      </files>
    </component>
    <component Cclass="Device" Cgroup="STM32Cube LL" Csub="EXTI"       Cversion="1.5.0" condition="STM32H7 LL">
      <description>Extended interrupts and events controller (EXTI) LL driver</description>
      <RTE_Components_h>
        #define RTE_DEVICE_LL_EXTI
      </RTE_Components_h>
      <files>
        <file category="source" name="Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_ll_exti.c"/>
      </files>
    </component>
    <component Cclass="Device" Cgroup="STM32Cube LL" Csub="FMC"        Cversion="1.5.0" condition="STM32H7 LL">
      <description>Flexible memory controller (FMC) LL driver</description>
      <RTE_Components_h>
        #define RTE_DEVICE_LL_FMC
      </RTE_Components_h>
      <files>
        <file category="source" name="Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_ll_fmc.c"/>
      </files>
    </component>
    <component Cclass="Device" Cgroup="STM32Cube LL" Csub="GPIO"       Cversion="1.5.0" condition="STM32H7 LL">
      <description>General-purpose I/O (GPIO) LL driver</description>
      <RTE_Components_h>
        #define RTE_DEVICE_LL_GPIO
      </RTE_Components_h>
      <files>
        <file category="source" name="Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_ll_gpio.c"/>
      </files>
    </component>
    <component Cclass="Device" Cgroup="STM32Cube LL" Csub="HRTIM"      Cversion="1.5.0" condition="STM32H7 LL">
      <description>High-Resolution Timer (HRTIM)LL driver</description>
      <RTE_Components_h>
        #define RTE_DEVICE_LL_HRTIM
      </RTE_Components_h>
      <files>
        <file category="source" name="Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_ll_hrtim.c"/>
      </files>
    </component>
    <component Cclass="Device" Cgroup="STM32Cube LL" Csub="I2C"        Cversion="1.5.0" condition="STM32H7 LL">
      <description>Inter-integrated circuit (I2C) interface LL driver</description>
      <RTE_Components_h>
        #define RTE_DEVICE_LL_I2C
      </RTE_Components_h>
      <files>
        <file category="source" name="Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_ll_i2c.c"/>
      </files>
    </component>
    <component Cclass="Device" Cgroup="STM32Cube LL" Csub="LPTIM"      Cversion="1.5.0" condition="STM32H7 LL">
      <description>Low-power timer (LPTIM) interface LL driver</description>
      <RTE_Components_h>
        #define RTE_DEVICE_LL_LPTIM
      </RTE_Components_h>
      <files>
        <file category="source" name="Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_ll_lptim.c"/>
      </files>
    </component>
    <component Cclass="Device" Cgroup="STM32Cube LL" Csub="LPUART"     Cversion="1.5.0" condition="STM32H7 LL">
      <description>Low-power universal asynchronous receiver transmitter (LPUART) LL driver</description>
      <RTE_Components_h>
        #define RTE_DEVICE_LL_LPUART
      </RTE_Components_h>
      <files>
        <file category="source" name="Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_ll_lpuart.c"/>
      </files>
    </component>
    <component Cclass="Device" Cgroup="STM32Cube LL" Csub="MDMA"     Cversion="1.5.0" condition="STM32H7 LL">
      <description>Master DMA controller (MDMA) LL driver</description>
      <RTE_Components_h>
        #define RTE_DEVICE_LL_MDMA
      </RTE_Components_h>
      <files>
        <file category="source" name="Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_ll_mdma.c"/>
      </files>
    </component>
    <component Cclass="Device" Cgroup="STM32Cube LL" Csub="OPAMP"      Cversion="1.5.0" condition="STM32H7 LL">
      <description>Operational amplifier (OPAMP) peripheral LL driver</description>
      <RTE_Components_h>
        #define RTE_DEVICE_LL_OPAMP
      </RTE_Components_h>
      <files>
        <file category="source" name="Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_ll_opamp.c"/>
      </files>
    </component>
    <component Cclass="Device" Cgroup="STM32Cube LL" Csub="PWR"        Cversion="1.5.0" condition="STM32H7 LL">
      <description>Power controller (PWR) LL driver</description>
      <RTE_Components_h>
        #define RTE_DEVICE_LL_PWR
      </RTE_Components_h>
      <files>
        <file category="source" name="Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_ll_pwr.c"/>
      </files>
    </component>
    <component Cclass="Device" Cgroup="STM32Cube LL" Csub="RCC"        Cversion="1.5.0" condition="STM32H7 LL">
      <description>Reset and clock control (RCC) LL driver</description>
      <RTE_Components_h>
        #define RTE_DEVICE_LL_RCC
      </RTE_Components_h>
      <files>
        <file category="source" name="Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_ll_rcc.c"/>
      </files>
    </component>
    <component Cclass="Device" Cgroup="STM32Cube LL" Csub="RNG"        Cversion="1.5.0" condition="STM32H7 LL">
      <description>Random number generator (RNG) LL driver</description>
      <RTE_Components_h>
        #define RTE_DEVICE_LL_RNG
      </RTE_Components_h>
      <files>
        <file category="source" name="Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_ll_rng.c"/>
      </files>
    </component>
    <component Cclass="Device" Cgroup="STM32Cube LL" Csub="RTC"        Cversion="1.5.0" condition="STM32H7 LL">
      <description>Real-time clock (RTC) LL driver</description>
      <RTE_Components_h>
        #define RTE_DEVICE_LL_RTC
      </RTE_Components_h>
      <files>
        <file category="source" name="Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_ll_rtc.c"/>
      </files>
    </component>
    <component Cclass="Device" Cgroup="STM32Cube LL" Csub="SDMMC"      Cversion="1.5.0" condition="STM32H7 LL">
      <description>SD/SDIO/MMC card host interface (SDMMC) LL driver</description>
      <RTE_Components_h>
        #define RTE_DEVICE_LL_SDMMC
      </RTE_Components_h>
      <files>
        <file category="source" name="Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_ll_sdmmc.c"/>
      </files>
    </component>
    <component Cclass="Device" Cgroup="STM32Cube LL" Csub="SPI"        Cversion="1.5.0" condition="STM32H7 LL">
      <description>Serial peripheral interface (SPI) LL driver</description>
      <RTE_Components_h>
        #define RTE_DEVICE_LL_SPI
      </RTE_Components_h>
      <files>
        <file category="source" name="Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_ll_spi.c"/>
      </files>
    </component>
    <component Cclass="Device" Cgroup="STM32Cube LL" Csub="SWPMI"      Cversion="1.5.0" condition="STM32H7 LL">
      <description>Single Wire Protocol Master Interface (SWPMI) LL driver</description>
      <RTE_Components_h>
        #define RTE_DEVICE_LL_SWPMI
      </RTE_Components_h>
      <files>
        <file category="source" name="Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_ll_swpmi.c"/>
      </files>
    </component>
    <component Cclass="Device" Cgroup="STM32Cube LL" Csub="TIM"        Cversion="1.5.0" condition="STM32H7 LL">
      <description>Timers (TIM) LL driver</description>
      <RTE_Components_h>
        #define RTE_DEVICE_LL_TIM
      </RTE_Components_h>
      <files>
        <file category="source" name="Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_ll_tim.c"/>
      </files>
    </component>
    <component Cclass="Device" Cgroup="STM32Cube LL" Csub="USART"      Cversion="1.5.0" condition="STM32H7 LL">
      <description>Universal synchronous asynchronous receiver transmitter (USART) LL driver</description>
      <RTE_Components_h>
        #define RTE_DEVICE_LL_USART
      </RTE_Components_h>
      <files>
        <file category="source" name="Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_ll_usart.c"/>
      </files>
    </component>
    <component Cclass="Device" Cgroup="STM32Cube LL" Csub="USB"        Cversion="1.5.0" condition="STM32H7 LL">
      <description>Universal serial bus full-speed device interface (USB) LL driver</description>
      <RTE_Components_h>
        #define RTE_DEVICE_LL_USB
      </RTE_Components_h>
      <files>
        <file category="source" name="Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_ll_usb.c"/>
      </files>
    </component>
    <component Cclass="Device" Cgroup="STM32Cube LL" Csub="UTILS"      Cversion="1.5.0" condition="STM32H7">
      <description>UTILS LL driver</description>
      <RTE_Components_h>
        #define RTE_DEVICE_LL_UTILS
      </RTE_Components_h>
      <files>
        <file category="source" name="Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_ll_utils.c"/>
      </files>
    </component>
    <!-- END: STMicroelectronics STM32CubeH7 LL -->

    <!-- CMSIS drivers -->
    <component Cclass="CMSIS Driver" Cgroup="CAN" Capiversion="1.0.0" Cversion="1.3.0" condition="STM32H7_SC CMSIS_Driver CAN">
      <description>CAN Driver for STM32H7 Series</description>
      <RTE_Components_h>  <!-- the following content goes into file 'RTE_Components.h' -->
        #define RTE_Drivers_CAN1                /* Driver CAN1 */
        #define RTE_Drivers_CAN2                /* Driver CAN2 */
      </RTE_Components_h>
      <files>
        <file category="source" name="CMSIS/Driver/FDCAN_STM32H7xx.c"/>
      </files>
    </component>
    <component Cclass="CMSIS Driver" Cgroup="Ethernet MAC" Capiversion="2.1.0" Cversion="1.2.0" condition="STM32H7_SC CMSIS_Driver ETH">
      <description>Ethernet MAC Driver for STM32H7 Series</description>
      <RTE_Components_h>
        #define RTE_Drivers_ETH_MAC0            /* Driver ETH_MAC0 */
      </RTE_Components_h>
      <files>
        <file category="source" name="CMSIS/Driver/EMAC_STM32H7xx.c"/>
      </files>
    </component>
    <component Cclass="CMSIS Driver" Cgroup="I2C" Capiversion="2.2.0" Cversion="1.1.0" condition="STM32H7_SC CMSIS_Driver I2C">
      <description>I2C Driver for STM32H7 Series</description>
      <RTE_Components_h>
        #define RTE_Drivers_I2C1                /* Driver I2C1 */
        #define RTE_Drivers_I2C2                /* Driver I2C2 */
        #define RTE_Drivers_I2C3                /* Driver I2C3 */
        #define RTE_Drivers_I2C4                /* Driver I2C4 */
      </RTE_Components_h>
      <files>
        <file category="source" name="CMSIS/Driver/I2C_STM32H7xx.c"/>
      </files>
    </component>
    <component Cclass="CMSIS Driver" Cgroup="MCI" Capiversion="2.2.0" Cversion="1.1.0" condition="STM32H7_SC CMSIS_Driver MCI">
      <description>MCI Driver for STM32H7 Series</description>
      <RTE_Components_h>
        #define RTE_Drivers_MCI0                /* Driver MCI0 */
        #define RTE_Drivers_MCI1                /* Driver MCI1 */
      </RTE_Components_h>
      <files>
        <file category="source" name="CMSIS/Driver/MCI_STM32H7xx.c"/>
      </files>
    </component>
    <component Cclass="CMSIS Driver" Cgroup="SPI"          Capiversion="2.1.0" Cversion="1.2.0" condition="STM32H7_SC CMSIS_Driver SPI">
      <description>SPI Driver for STM32H7 Series</description>
      <RTE_Components_h>  <!-- the following content goes into file 'RTE_Components.h' -->
        #define RTE_Drivers_SPI1                /* Driver SPI1 */
        #define RTE_Drivers_SPI2                /* Driver SPI2 */
        #define RTE_Drivers_SPI3                /* Driver SPI3 */
        #define RTE_Drivers_SPI4                /* Driver SPI4 */
        #define RTE_Drivers_SPI5                /* Driver SPI5 */
        #define RTE_Drivers_SPI6                /* Driver SPI6 */
      </RTE_Components_h>
      <files>
        <file category="source" name="CMSIS/Driver/SPI_STM32H7xx.c"/>
      </files>
    </component>
    <component Cclass="CMSIS Driver" Cgroup="USART"        Capiversion="2.1.0" Cversion="1.2.0" condition="STM32H7_SC CMSIS_Driver USART">
      <description>USART Driver for STM32H7 Series</description>
      <RTE_Components_h>  <!-- the following content goes into file 'RTE_Components.h' -->
        #define RTE_Drivers_USART1              /* Driver USART1 */
        #define RTE_Drivers_USART2              /* Driver USART2 */
        #define RTE_Drivers_USART3              /* Driver USART3 */
        #define RTE_Drivers_USART4              /* Driver USART4 */
        #define RTE_Drivers_USART5              /* Driver USART5 */
        #define RTE_Drivers_USART5              /* Driver USART6 */
        #define RTE_Drivers_USART5              /* Driver USART7 */
        #define RTE_Drivers_USART5              /* Driver USART8 */
      </RTE_Components_h>
      <files>
        <file category="source" name="CMSIS/Driver/UART_STM32H7xx.c"/>
        <file category="source" name="CMSIS/Driver/USART_STM32H7xx.c"/>
        <file category="source" name="CMSIS/Driver/IrDA_STM32H7xx.c"/>
        <file category="source" name="CMSIS/Driver/SmartCard_STM32H7xx.c"/>
      </files>
    </component>
    <component Cclass="CMSIS Driver" Cgroup="USB Device" Capiversion="2.1.0" Cversion="1.3.0" condition="STM32H7_SC CMSIS_Driver USBD">
      <description>USB Device Driver for STM32H7 Series</description>
      <RTE_Components_h>
        #define RTE_Drivers_USBD0               /* Driver USBD0 */
        #define RTE_Drivers_USBD1               /* Driver USBD1 */
      </RTE_Components_h>
      <files>
        <file category="source" name="CMSIS/Driver/OTG_STM32H7xx.c"/>
        <file category="source" name="CMSIS/Driver/USBD_STM32H7xx.c"/>
      </files>
    </component>
    <component Cclass="CMSIS Driver" Cgroup="USB Host" Capiversion="2.1.0" Cversion="1.1.0" condition="STM32H7_SC CMSIS_Driver USBH">
      <description>USB Host Driver for STM32H7 Series</description>
      <RTE_Components_h>
        #define RTE_Drivers_USBH0               /* Driver USBH0 */
        #define RTE_Drivers_USBH1               /* Driver USBH1 */
      </RTE_Components_h>
      <files>
        <file category="source" name="CMSIS/Driver/OTG_STM32H7xx.c"/>
        <file category="source" name="CMSIS/Driver/USBH_HS1_STM32H7xx.c"/>
        <file category="source" name="CMSIS/Driver/USBH_HS2_STM32H7xx.c"/>
      </files>
    </component>

    <!-- STM32H743I-EVAL Board -->
    <bundle Cbundle="STM32H743I-EVAL" Cclass="Board Support" Cversion="1.1.0">
      <description>STMicroelectronics STM32H743I-EVAL Board</description>
      <doc>Drivers/BSP/STM32H743I_EVAL/STM32H743I_EVAL_BSP_User_Manual.chm</doc>
      <component Cgroup="Documentation" condition="STM32H7">
      <description>STM32H743I-EVAL BSP User Manual</description>
      <files>
        <file category="doc" name="Drivers/BSP/STM32H743I_EVAL/STM32H743I_EVAL_BSP_User_Manual.chm" />
      </files>
      </component>
      <component Cgroup="Drivers" Csub="Basic I/O"                            condition="STM32H743I-EVAL BSP">
        <description>LEDs, push-buttons and COM ports for STMicroelectronics STM32H743I-EVAL Board</description>
        <files>
          <file category="header" name="Drivers/BSP/STM32H743I_EVAL/stm32h743i_eval.h"/>
          <file category="source" name="Drivers/BSP/STM32H743I_EVAL/stm32h743i_eval.c"/>
        </files>
      </component>
      <component Cgroup="Drivers" Csub="Audio"                                condition="STM32H743I-EVAL BSP Audio">
        <description>Audio for STMicroelectronics STM32H743I-EVAL Board</description>
        <files>
          <file category="header" name="Drivers/BSP/STM32H743I_EVAL/stm32h743i_eval_audio.h"/>
          <file category="source" name="Drivers/BSP/STM32H743I_EVAL/stm32h743i_eval_audio.c"/>
          <file category="source" name="Drivers/BSP/Components/wm8994/wm8994.c"/>
          <file category="library" condition="CM7_LE_ARMCC"  name="Middlewares/ST/STM32_Audio/Addons/PDM/Lib/libPDMFilter_CM7_Keil_wc16.lib"/>
          <file category="library" condition="CM7F_LE_ARMCC" name="Middlewares/ST/STM32_Audio/Addons/PDM/Lib/libPDMFilter_CM7_Keil_wc16.lib"/>
          <file category="library" condition="CM7_LE_GCC"    name="Middlewares/ST/STM32_Audio/Addons/PDM/Lib/libPDMFilter_CM7_GCC_wc32.a"/>
          <file category="library" condition="CM7F_LE_GCC"   name="Middlewares/ST/STM32_Audio/Addons/PDM/Lib/libPDMFilter_CM7_GCC_wc32.a"/>
          <file category="library" condition="CM7_LE_IAR"    name="Middlewares/ST/STM32_Audio/Addons/PDM/Lib/libPDMFilter_CM7_IAR_wc32.a"/>
          <file category="library" condition="CM7F_LE_IAR"   name="Middlewares/ST/STM32_Audio/Addons/PDM/Lib/libPDMFilter_CM7_IAR_wc32.a"/>
        </files>
      </component>
      <component Cgroup="Drivers" Csub="EEPROM"                               condition="STM32H743I-EVAL BSP EEPROM">
        <description>EERPOM for STMicroelectronics STM32H743I-EVAL Board</description>
        <files>
          <file category="header" name="Drivers/BSP/STM32H743I_EVAL/stm32h743i_eval_eeprom.h"/>
          <file category="source" name="Drivers/BSP/STM32H743I_EVAL/stm32h743i_eval_eeprom.c"/>
        </files>
      </component>
      <component Cgroup="Drivers" Csub="I/O"                                  condition="STM32H743I-EVAL BSP IO">
        <description>I/O for STMicroelectronics STM32H743I-EVAL Board</description>
        <files>
          <file category="header" name="Drivers/BSP/STM32H743I_EVAL/stm32h743i_eval_io.h"/>
          <file category="source" name="Drivers/BSP/STM32H743I_EVAL/stm32h743i_eval_io.c"/>
          <file category="source" name="Drivers/BSP/Components/mfxstm32l152/mfxstm32l152.c"/>
        </files>
      </component>
      <component Cgroup="Drivers" Csub="LCD"                                  condition="STM32H743I-EVAL BSP LCD">
        <description>LCD for STMicroelectronics STM32H743I-EVAL Board</description>
        <files>
          <file category="header" name="Drivers/BSP/STM32H743I_EVAL/stm32h743i_eval_lcd.h"/>
          <file category="source" name="Drivers/BSP/STM32H743I_EVAL/stm32h743i_eval_lcd.c"/>
          <file category="source" name="Drivers/BSP/Components/stmpe811/stmpe811.c"/>
        </files>
      </component>
      <component Cgroup="Drivers" Csub="NOR"                                  condition="STM32H743I-EVAL BSP NOR">
        <description>NOR Flash for STMicroelectronics STM32H743I-EVAL Board</description>
        <files>
          <file category="header" name="Drivers/BSP/STM32H743I_EVAL/stm32h743i_eval_nor.h"/>
          <file category="source" name="Drivers/BSP/STM32H743I_EVAL/stm32h743i_eval_nor.c"/>
        </files>
      </component>
      <component Cgroup="Drivers" Csub="QSPI"                                 condition="STM32H743I-EVAL BSP QSPI">
        <description>QSPI Flash for STMicroelectronics STM32H743I-EVAL Board</description>
        <files>
          <file category="header" name="Drivers/BSP/STM32H743I_EVAL/stm32h743i_eval_qspi.h"/>
          <file category="source" name="Drivers/BSP/STM32H743I_EVAL/stm32h743i_eval_qspi.c"/>
        </files>
      </component>
      <component Cgroup="Drivers" Csub="SD"                                   condition="STM32H743I-EVAL BSP SD">
        <description>uSD for STMicroelectronics STM32H743I-EVAL Board</description>
        <files>
          <file category="header" name="Drivers/BSP/STM32H743I_EVAL/stm32h743i_eval_sd.h"/>
          <file category="source" name="Drivers/BSP/STM32H743I_EVAL/stm32h743i_eval_sd.c"/>
        </files>
      </component>
      <component Cgroup="Drivers" Csub="SDRAM"                                condition="STM32H743I-EVAL BSP SDRAM">
        <description>SDRAM for STMicroelectronics STM32H743I-EVAL Board</description>
        <files>
          <file category="header" name="Drivers/BSP/STM32H743I_EVAL/stm32h743i_eval_sdram.h"/>
          <file category="source" name="Drivers/BSP/STM32H743I_EVAL/stm32h743i_eval_sdram.c"/>
        </files>
      </component>
      <component Cgroup="Drivers" Csub="SRAM"                                 condition="STM32H743I-EVAL BSP SRAM">
        <description>SRAM for STMicroelectronics STM32H743I-EVAL Board</description>
        <files>
          <file category="header" name="Drivers/BSP/STM32H743I_EVAL/stm32h743i_eval_sram.h"/>
          <file category="source" name="Drivers/BSP/STM32H743I_EVAL/stm32h743i_eval_sram.c"/>
        </files>
      </component>
      <component Cgroup="Drivers" Csub="Touch Screen"                         condition="STM32H743I-EVAL BSP TS">
        <description>Touch Screen for STMicroelectronics STM32H743I-EVAL Board</description>
        <files>
          <file category="header" name="Drivers/BSP/STM32H743I_EVAL/stm32h743i_eval_ts.h"/>
          <file category="source" name="Drivers/BSP/STM32H743I_EVAL/stm32h743i_eval_ts.c"/>
          <file category="source" name="Drivers/BSP/Components/stmpe811/stmpe811.c"/>
          <file category="source" name="Drivers/BSP/Components/ts3510/ts3510.c"/>
          <file category="source" name="Drivers/BSP/Components/exc7200/exc7200.c"/>
        </files>
      </component>
      <component Cgroup="LED"           Capiversion="1.0.0"                   condition="STM32H7 HAL GPIO">
        <description>LED Interface for STMicroelectronics STM32H743I-EVAL Board</description>
        <files>
          <file category="source" name="MDK/Boards/ST/STM32H743I_EVAL/Common/LED_743I_EVAL.c"/>
        </files>
      </component>
      <component Cgroup="Buttons"       Capiversion="1.0.0"                   condition="STM32H7 HAL GPIO">
        <description>Buttons Interface for STMicroelectronics STM32H743I-EVAL Board</description>
        <files>
          <file category="source" name="MDK/Boards/ST/STM32H743I_EVAL/Common/Buttons_743I_EVAL.c"/>
        </files>
      </component>
      <component Cgroup="A/D Converter" Capiversion="1.0.0"                   condition="STM32H7 HAL GPIO ADC">
        <description>A/D Converter Interface for STMicroelectronics STM32H743I-EVAL Board</description>
        <files>
          <file category="source" name="MDK/Boards/ST/STM32H743I_EVAL/Common/ADC_743I_EVAL.c"/>
        </files>
      </component>
      <component Cgroup="Joystick"      Capiversion="1.0.0"                   condition="STM32H743I-EVAL Joystick">
        <description>Joystick Interface for STMicroelectronics STM32H743I-EVAL Board</description>
        <files>
          <file category="source" name="MDK/Boards/ST/STM32H743I_EVAL/Common/Joystick_743I_EVAL.c"/>
        </files>
      </component>
      <component Cgroup="Touchscreen"   Capiversion="1.0.0"                   condition="STM32H743I-EVAL TS">
        <description>Touchscreen Interface for STMicroelectronics STM32H743I-EVAL Board</description>
        <files>
          <file category="source" name="MDK/Boards/ST/STM32H743I_EVAL/Common/Touch_743I_EVAL.c"/>
        </files>
      </component>
      <component Cgroup="Graphic LCD"   Capiversion="1.0.0"                   condition="STM32H743I-EVAL GLCD">
        <description>Graphic LCD interface for STMicroelectronics STM32H743I-EVAL Board</description>
        <files>
          <file category="header" name="MDK/Boards/ST/STM32H743I_EVAL/Common/GLCD_Config.h"/>
          <file category="source" name="MDK/Boards/ST/STM32H743I_EVAL/Common/GLCD_Fonts.c"/>
          <file category="source" name="MDK/Boards/ST/STM32H743I_EVAL/Common/GLCD_743I_EVAL.c"/>
        </files>
      </component>
      <component Cgroup="emWin LCD"     Capiversion="1.1.0" Cvariant="RGB IF" condition="STM32H743I-EVAL LCD_RGB">
        <description>emWin LCD RGB Interface for STMicroelectronics STM32H743I-EVAL Board</description>
        <files>
          <file category="source" name="MDK/Boards/ST/STM32H743I_EVAL/Common/LCD_X.c"/>
        </files>
      </component>
<!--
      <component Cgroup="Audio"         Capiversion="1.1.0" condition="STM32H7 CMSIS SAI and I2C Driver">
        <description>Audio interface for WM8994</description>
        <files>
          <file category="source" name="MDK/Boards/ST/STM32H743I_EVAL/Common/Audio_743I_EVAL.c"/>
        </files>
      </component>
-->
    </bundle>

    <component Cclass="Graphics Display" Cgroup="STM32H743I-EVAL" Cvariant="RGB IF" Cversion="1.0.2" condition="STM32H7 HAL LTDC DMA2D Graphics LCD_RGB">
      <description>LCD Configuration for STM32H743I-EVAL LCD</description>
      <files>
          <file category="source" name="MDK/Boards/ST/STM32H743I_EVAL/Common/LCDConf.c" attr="config" version="1.0.2"/>
      </files>
    </component>
  </components>

  <boards>
    <!-- STM32H743I-EVAL -->
    <board vendor="STMicroelectronics" name="STM32H743I-EVAL" revision="Rev.B" salesContact="http://www.st.com/stonline/contactus/contacts/index.php">
      <description>STMicroelectronics STM32H743I-EVAL Evaluation Board Support and Examples</description>
      <!--image small="MDK/Boards/ST/STM32H743I_EVAL/Documentation/stm32h743i-eval_small.jpg"
             large="MDK/Boards/ST/STM32H743I_EVAL/Documentation/stm32h743i-eval_large.jpg"/-->
      <book category="overview"  name="http://www.st.com/en/evaluation-tools/stm32h743i-eval.html" title="STM32H743I_EVAL Evaluation Board Web Page"/>
      <!--book category="manual"  name="Drivers/BSP/STM32H743I_EVAL/STM32H743I_EVAL_BSP_User_Manual.chm" title="BSP User Manual"/-->
      <!--book category="manual"    name="MDK/Boards/ST/STM32H743I_EVAL/Documentation/DM00276567.pdf" title="User Manual"/-->
      <!--book category="schematic" name="MDK/Boards/ST/STM32H743I_EVAL/Documentation/stm32f7x9i-eval_sch.zip" title="Schematics"/-->
      <book category="other"     name="MDK/Boards/ST/STM32H743I_EVAL/Documentation/stm32h743i-eval_gerber.zip" title="Gerber Files"/>
      <!--book category="other"     name="MDK/Boards/ST/STM32H743I_EVAL/Documentation/stm32f7x9i-eval_bom.zip" title="Bill of Materials"/-->
      <mountedDevice    deviceIndex="0" Dvendor="STMicroelectronics:13" Dname="STM32H743XI"/>
      <compatibleDevice deviceIndex="0" Dvendor="STMicroelectronics:13" DsubFamily="STM32H743"/>
      <feature type="ODbg"      n="1"              name="On-board ST-LINK/V2"/>
      <feature type="RAM"       n="1"              name="8M x 32-bit SDRAM"/>
      <feature type="RAM"       n="1"              name="1M x 16-bit SRAM"/>
      <feature type="ROM"       n="1"              name="8M x 16-bit Nor Flash"/>
      <feature type="ROM"       n="1"              name="512-Mbit Quad-SPI NOR Flash"/>
      <feature type="USB"       n="1"              name="High-Speed USB with micro-AB Connector"/>
      <feature type="USB"       n="2"              name="Full-Speed USB with micro-AB Connector"/>
      <feature type="Joystick"  n="1"              name="5-position Joystick"/>
      <feature type="Camera"    n="1"/>
      <feature type="Button"    n="2"              name="Push-Buttons for Reset, Wakeup/Tamper or Key"/>
      <feature type="LED"       n="4"              name="4 color user LEDs"/>
      <feature type="GLCD"      n="1"  m="800.480" name="4-inch 800x480 TFT color LCD with capacitive touch panel"/>
      <feature type="Poti"      n="1"              name="Analog Voltage Control for ADC Input (potentiometer)"/>
      <feature type="LineIn"    n="1"              name="Audio CODEC with Stereo Line-In/Out and Speaker/Microphone"/>
      <feature type="LineOut"   n="1"              name="Audio CODEC with Stereo Line-In/Out and Speaker/Microphone"/>
      <feature type="MIC"       n="2"              name="ST MEMS microphones"/>
      <feature type="Speaker"   n="2"/>
      <feature type="Other"     n="1"              name="Digital Stereo Microphone"/>
      <feature type="CAN"       n="1"/>
      <feature type="RS232"     n="1"/>
      <feature type="I2C"       n="4"/>
      <feature type="ETH"       n="1"              name="10/100 Ethernet Port"/>
      <feature type="XTAL"      n="25000000"/>
      <feature type="PWR"       n="5"              name="USB Powered"/>
      <feature type="PWR"       n="3"  m="5"       name="External Supply"/>
      <feature type="MemCard"   n="1"              name="SDIO interface microSD card"/>
      <feature type="DIO"       n="34"             name="Motor Control Connector"/>
      <feature type="DIO"       n="60"             name="Daughterboard Extension header 1"/>
      <feature type="DIO"       n="60"             name="Daughterboard Extension header 2"/>
      <feature type="ConnOther" n="1"              name="Motor control connector"/>
      <debugInterface adapter="ST-Link" connector="Mini-USB"/>
      <debugInterface adapter="JTAG/SW" connector="20 pin JTAG (0.1 inch connector)"/>
      <debugInterface adapter="JTAG/SW" connector="20-pin Cortex debug + ETM Trace (0.05 inch connector)"/>
    </board>

    <!-- STM32H747I-EVAL -->
    <board vendor="STMicroelectronics" name="STM32H747I-EVAL" revision="Rev.ES" salesContact="http://www.st.com/stonline/contactus/contacts/index.php">
      <description>STMicroelectronics STM32H747I-EVAL Evaluation Board Support and Examples</description>
      <image small="MDK/Boards/ST/STM32H747I_EVAL/Documentation/stm32h747i-eval_small.jpg"
             large="MDK/Boards/ST/STM32H747I_EVAL/Documentation/stm32h747i-eval_large.jpg"/>
      <book category="overview" name="http://www.st.com/en/evaluation-tools/stm32h747i-eval.html"      title="STM32H747I_EVAL Evaluation Board Web Page"/>
      <book category="manual"   name="MDK/Boards/ST/STM32H747I_EVAL/Documentation/stm32h747i-eval.pdf" title="STM32H747I_EVAL Data Brief"/>
      <!--book category="manual"    name="Drivers/BSP/STM32H747I_EVAL/STM32H747I_EVAL_BSP_User_Manual.chm" title="BSP User Manual"/-->
      <!--book category="manual"    name="MDK/Boards/ST/STM32H747I_EVAL/Documentation/DM00276567.pdf" title="User Manual"/-->
      <!--book category="schematic" name="MDK/Boards/ST/STM32H747I_EVAL/Documentation/stm32f7x9i-eval_sch.zip" title="Schematics"/-->
      <!--book category="other"     name="MDK/Boards/ST/STM32H747I_EVAL/Documentation/stm32h747i-eval_gerber.zip" title="Gerber Files"/-->
      <!--book category="other"     name="MDK/Boards/ST/STM32H747I_EVAL/Documentation/stm32h747i-eval_bom.zip" title="Bill of Materials"/-->
      <mountedDevice    deviceIndex="0" Dvendor="STMicroelectronics:13" Dname="STM32H747XI"/>
      <compatibleDevice deviceIndex="0" Dvendor="STMicroelectronics:13" DsubFamily="STM32H747"/>
      <feature type="ODbg"      n="1"              name="On-board ST-LINK/V2"/>
      <feature type="RAM"       n="1"              name="8M x 32-bit SDRAM"/>
      <feature type="RAM"       n="1"              name="1M x 16-bit SRAM"/>
      <feature type="ROM"       n="1"              name="8M x 16-bit Nor Flash"/>
      <feature type="ROM"       n="1"              name="1-Gbit Twin Quad-SPI or two 512-Mbit Quad-SPI NOR Flash memories"/>
      <feature type="USB"       n="1"              name="High-Speed USB with micro-AB Connector"/>
      <feature type="USB"       n="2"              name="Full-Speed USB with micro-AB Connector"/>
      <feature type="Joystick"  n="1"              name="5-position Joystick"/>
      <feature type="Button"    n="3"              name="Push-Buttons for Reset, Wakeup/Tamper or Key"/>
      <feature type="LED"       n="4"              name="4 color user LEDs"/>
      <feature type="GLCD"      n="1"  m="800.480" name="4-inch 800x480 TFT color LCD with MIPI DSI interface and capacitive touchpanel"/>
      <feature type="Poti"      n="1"              name="Analog Voltage Control for ADC Input (potentiometer)"/>
      <feature type="LineIn"    n="1"              name="Audio CODEC with Stereo Line-In/Out and Speaker/Microphone"/>
      <feature type="LineOut"   n="1"              name="Audio CODEC with Stereo Line-In/Out and Speaker/Microphone"/>
      <feature type="MIC"       n="2"              name="ST MEMS microphones"/>
      <feature type="Speaker"   n="2"/>
      <feature type="Other"     n="1"              name="Digital Stereo Microphone"/>
      <feature type="CAN"       n="1"/>
      <feature type="RS232"     n="1"/>
      <feature type="I2C"       n="4"/>
      <feature type="ETH"       n="1"              name="10/100 Ethernet Port"/>
      <feature type="XTAL"      n="25000000"/>
      <feature type="PWR"       n="5"              name="USB Powered"/>
      <feature type="PWR"       n="3"  m="5"       name="External Supply"/>
      <feature type="MemCard"   n="1"              name="SDIO interface microSD card"/>
      <feature type="DIO"       n="34"             name="Motor Control Connector"/>
      <feature type="DIO"       n="60"             name="Daughterboard Extension header 1"/>
      <feature type="DIO"       n="60"             name="Daughterboard Extension header 2"/>
      <feature type="ConnOther" n="1"              name="Motor control connector"/>
      <debugInterface adapter="ST-Link" connector="Mini-USB"/>
      <debugInterface adapter="JTAG/SW" connector="20 pin JTAG (0.1 inch connector)"/>
      <debugInterface adapter="JTAG/SW" connector="20-pin Cortex debug + ETM Trace (0.05 inch connector)"/>
    </board>
  </boards>

  <examples>
    <!-- STM32H743I-EVAL Board -->
    <example name="CMSIS-RTOS2 Blinky" doc="Abstract.txt" folder="MDK/Boards/ST/STM32H743I_EVAL/Blinky">
      <description>CMSIS-RTOS2 Blinky example</description>
      <board name="STM32H743I-EVAL" vendor="STMicroelectronics"/>
      <project>
        <environment name="uv" load="Blinky.uvprojx"/>
      </project>
      <attributes>
        <component Cclass="CMSIS" Cgroup="CORE"/>
        <component Cclass="Device" Cgroup="Startup"/>
        <component Cclass="CMSIS" Cgroup="RTOS"/>
        <category>Getting Started</category>
        <category>CMSIS-RTX</category>
      </attributes>
    </example>

    <example name="CAN" doc="Abstract.txt" folder="MDK/Boards/ST/STM32H743I_EVAL/Middleware/CAN/CAN">
      <description>CAN example that sends and receives data messages</description>
      <board name="STM32H743I-EVAL" vendor="STMicroelectronics"/>
      <project>
        <environment name="uv" load="CAN.uvprojx"/>
      </project>
      <attributes>
        <category>Middleware</category>
        <category>CAN</category>
      </attributes>
    </example>

    <example name="CAN FD" doc="Abstract.txt" folder="MDK/Boards/ST/STM32H743I_EVAL/Middleware/CAN/CAN_FD">
      <description>CAN FD example that sends and receives data messages</description>
      <board name="STM32H743I-EVAL" vendor="STMicroelectronics"/>
      <project>
        <environment name="uv" load="CAN_FD.uvprojx"/>
      </project>
      <attributes>
        <category>Middleware</category>
        <category>CAN</category>
      </attributes>
    </example>

    <example name="USB Device HID" doc="Abstract.txt" folder="MDK/Boards/ST/STM32H743I_EVAL/Middleware/USB/Device/HID">
      <description>USB Human Interface Device providing access from PC to board LEDs and joystick</description>
      <board name="STM32H743I-EVAL" vendor="STMicroelectronics"/>
      <project>
        <environment name="uv" load="HID.uvprojx"/>
      </project>
      <attributes>
        <component Cclass="USB" Cgroup="Device" Csub="HID"/>
        <category>Middleware</category>
        <category>USB Device</category>
        <keyword>HID</keyword>
      </attributes>
    </example>

    <example name="USB Device Mass Storage" doc="Abstract.txt" folder="MDK/Boards/ST/STM32H743I_EVAL/Middleware/USB/Device/MassStorage">
      <description>USB Mass Storage Device using RAM as storage media</description>
      <board name="STM32H743I-EVAL" vendor="STMicroelectronics"/>
      <project>
        <environment name="uv" load="MassStorage.uvprojx"/>
      </project>
      <attributes>
        <component Cclass="USB" Cgroup="Device" Csub="MSC"/>
        <category>Middleware</category>
        <category>USB Device</category>
        <keyword>Memory Disk</keyword>
      </attributes>
    </example>

    <example name="USB Host Mass Storage" doc="Abstract.txt" folder="MDK/Boards/ST/STM32H743I_EVAL/Middleware/USB/Host/MassStorage">
      <description>USB Host file manipulation example: create, read, copy, delete files from USB Mass Storage Device and format the storage device</description>
      <board name="STM32H743I-EVAL" vendor="STMicroelectronics"/>
      <project>
        <environment name="uv" load="MassStorage.uvprojx"/>
      </project>
      <attributes>
        <component Cclass="USB" Cgroup="Host" Csub="MSC"/>
        <category>Middleware</category>
        <category>USB Host</category>
        <keyword>Mass Storage</keyword>
      </attributes>
    </example>

    <example name="USB Host Keyboard" doc="Abstract.txt" folder="MDK/Boards/ST/STM32H743I_EVAL/Middleware/USB/Host/Keyboard">
      <description>Measure example using USB HID Keyboard as input device</description>
      <board name="STM32H743I-EVAL" vendor="STMicroelectronics"/>
      <project>
        <environment name="uv" load="Keyboard.uvprojx"/>
      </project>
      <attributes>
        <component Cclass="USB" Cgroup="Host" Csub="HID"/>
        <category>Middleware</category>
        <category>USB Host</category>
        <keyword>Keyboard</keyword>
      </attributes>
    </example>

    <example name="BSD Client IPv4/IPv6" doc="Abstract.txt" folder="MDK/Boards/ST/STM32H743I_EVAL/Middleware/Network/BSD_Client">
      <description>Example using BSD sockets to send commands to remote server</description>
      <board name="STM32H743I-EVAL" vendor="STMicroelectronics"/>
      <project>
        <environment name="uv" load="BSD_Client.uvprojx"/>
      </project>
      <attributes>
        <component Cclass="Network" Cgroup="Socket" Csub="BSD"/>
        <category>Middleware</category>
        <category>Network</category>
        <keyword>BSD</keyword>
      </attributes>
    </example>

    <example name="BSD Server IPv4/IPv6" doc="Abstract.txt" folder="MDK/Boards/ST/STM32H743I_EVAL/Middleware/Network/BSD_Server">
      <description>Example using BSD sockets to accept commands from remote clients</description>
      <board name="STM32H743I-EVAL" vendor="STMicroelectronics"/>
      <project>
        <environment name="uv" load="BSD_Server.uvprojx"/>
      </project>
      <attributes>
        <component Cclass="Network" Cgroup="Socket" Csub="BSD"/>
        <category>Middleware</category>
        <category>Network</category>
        <keyword>BSD</keyword>
      </attributes>
    </example>

    <example name="FTP Server IPv4/IPv6" doc="Abstract.txt" folder="MDK/Boards/ST/STM32H743I_EVAL/Middleware/Network/FTP_Server">
      <description>File Server using FTP protocol with SD/MMC Memory Card as storage media</description>
      <board name="STM32H743I-EVAL" vendor="STMicroelectronics"/>
      <project>
        <environment name="uv" load="FTP_Server.uvprojx"/>
      </project>
      <attributes>
        <component Cclass="Network" Cgroup="Service" Csub="FTP Server"/>
        <category>Middleware</category>
        <category>Network</category>
        <keyword>FTP</keyword>
      </attributes>
    </example>

    <example name="HTTP Server IPv4/IPv6" doc="Abstract.txt" folder="MDK/Boards/ST/STM32H743I_EVAL/Middleware/Network/HTTP_Server">
      <description>Compact Web Server with CGI interface</description>
      <board name="STM32H743I-EVAL" vendor="STMicroelectronics"/>
      <project>
        <environment name="uv" load="HTTP_Server.uvprojx"/>
      </project>
      <attributes>
        <component Cclass="Network" Cgroup="Service" Csub="Web Server Compact"/>
        <category>Middleware</category>
        <category>Network</category>
        <keyword>Web Server</keyword>
        <keyword>HTTP</keyword>
      </attributes>
    </example>

    <example name="HTTP Upload IPv4/IPv6" doc="Abstract.txt" folder="MDK/Boards/ST/STM32H743I_EVAL/Middleware/Network/HTTP_Upload">
      <description>Web Server with CGI interface and SD/MMC Memory Card as storage media</description>
      <board name="STM32H743I-EVAL" vendor="STMicroelectronics"/>
      <project>
        <environment name="uv" load="HTTP_Upload.uvprojx"/>
      </project>
      <attributes>
        <component Cclass="Network" Cgroup="Service" Csub="Web Server"/>
        <category>Middleware</category>
        <category>Network</category>
        <keyword>Web Server</keyword>
        <keyword>HTTP</keyword>
      </attributes>
    </example>

    <example name="SMTP Client IPv4/IPv6" doc="Abstract.txt" folder="MDK/Boards/ST/STM32H743I_EVAL/Middleware/Network/SMTP_Client">
      <description>Example showing how to compose and send emails</description>
      <board name="STM32H743I-EVAL" vendor="STMicroelectronics"/>
      <project>
        <environment name="uv" load="SMTP_Client.uvprojx"/>
      </project>
      <attributes>
        <component Cclass="Network" Cgroup="Service" Csub="SMTP Client"/>
        <category>Middleware</category>
        <category>Network</category>
        <keyword>SMTP</keyword>
      </attributes>
    </example>

    <example name="SNMP Agent IPv4/IPv6" doc="Abstract.txt" folder="MDK/Boards/ST/STM32H743I_EVAL/Middleware/Network/SNMP_Agent" version="1.0.1">
      <description>Example showing how to use a Simple Network Management Protocol (SNMP)</description>
      <board name="STM32H743I-EVAL" vendor="STMicroelectronics"/>
      <project>
        <environment name="uv" load="SNMP_Agent.uvprojx"/>
      </project>
      <attributes>
        <component Cclass="Network" Cgroup="Service" Csub="SNMP Agent"/>
        <category>Middleware</category>
        <category>Network</category>
        <keyword>SNMP</keyword>
      </attributes>
    </example>

    <example name="Telnet Server IPv4/IPv6" doc="Abstract.txt" folder="MDK/Boards/ST/STM32H743I_EVAL/Middleware/Network/Telnet_Server">
      <description>Command-line Host service example using Telnet protocol</description>
      <board name="STM32H743I-EVAL" vendor="STMicroelectronics"/>
      <project>
        <environment name="uv" load="Telnet_Server.uvprojx"/>
      </project>
      <attributes>
        <component Cclass="Network" Cgroup="Service" Csub="Telnet Server"/>
        <category>Middleware</category>
        <category>Network</category>
        <keyword>Telnet</keyword>
      </attributes>
    </example>

    <example name="File System Demo" doc="Abstract.txt" folder="MDK/Boards/ST/STM32H743I_EVAL/Middleware/FileSystem/File_Demo">
      <description>File manipulation example: create, read, copy, delete files on any enabled drive (SD/MMC Card, NOR/NAND Flash, RAM) and format each drive</description>
      <board name="STM32H743I-EVAL" vendor="STMicroelectronics"/>
      <project>
        <environment name="uv" load="File_Demo.uvprojx"/>
      </project>
      <attributes>
        <component Cclass="File System" Cgroup="Drive"/>
        <category>Middleware</category>
        <category>File System</category>
        <keyword>SD/MMC Card</keyword>
      </attributes>
    </example>

    <example name="emWin Example" doc="Abstract.txt" folder="MDK/Boards/ST/STM32H743I_EVAL/emWin/Example">
      <description>emWin Graphics simple example</description>
      <board name="STM32H743I-EVAL" vendor="STMicroelectronics"/>
      <project>
        <environment name="uv" load="Example.uvprojx"/>
      </project>
      <attributes>
        <component Cclass="Graphics" Cgroup="CORE"/>
        <category>Middleware</category>
        <category>Graphics</category>
        <keyword>emWin</keyword>
      </attributes>
    </example>

    <example name="emWin GUI Demo" doc="Abstract.txt" folder="MDK/Boards/ST/STM32H743I_EVAL/emWin/GUIDemo">
      <description>emWin Graphics Demo example</description>
      <board name="STM32H743I-EVAL" vendor="STMicroelectronics"/>
      <project>
        <environment name="uv" load="GUIDemo.uvprojx"/>
      </project>
      <attributes>
        <component Cclass="Graphics" Cgroup="CORE"/>
        <category>Middleware</category>
        <category>Graphics</category>
        <keyword>emWin</keyword>
      </attributes>
    </example>


    <!-- STM32H747I-EVAL Board -->
    <example name="DualCore Blinky" doc="Abstract.txt" folder="MDK/Boards/ST/STM32H747I_EVAL/DualCore" version="1.0.0">
      <description>DualCore Blinky example</description>
      <board name="STM32H747I-EVAL" vendor="STMicroelectronics"/>
      <project>
        <environment name="uv" load="DualCore.uvmpw"/>
      </project>
      <attributes>
        <component Cclass="CMSIS" Cgroup="CORE"/>
        <component Cclass="Device" Cgroup="Startup"/>
        <category>Getting Started</category>
      </attributes>
    </example>
  </examples>
</package>
